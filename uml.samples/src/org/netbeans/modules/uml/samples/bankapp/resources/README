                   UML Modeling Module: Bank App Sample  
==================================================================================

This document is a quick overview for the UML Bank App sample. The Java and UML 
projects included in the sample are provided as a means of introducing you to the 
Reverse Engineering feature of the NetBeans, UML Tools plugin. The sample Java
project has a default name of UMLBankAppSample and the sample UML project has the 
default name of UMLBankAppSample-Model. The sample Java project was reverse 
engineered to generate the sample UML project and its elements.


To open the sample UML Modeling project:
---------------------------------------

1) In the IDE's Projects window, navigate to the sample UML project node. If you used the 
   default project name values, the UML project name would be UMLBankAppSample-Model.

2) Expand the UMLBankAppSample-Model > Model > bankpack node. The elements displayed under 
   this node were generated using the existing Java source files you can find under the 
   UMLBankAppSample > Source Packages > bankpack node.

3) Expand the UMLBankAppSample-Model > Model > bankpack > BankAccount node. Notice the
   Attributes, Operations, and Relationship nodes that represent the attributes,
   operations, and relationships in the BankAccount.java file.

4) Right click UMLBankAppSample-Model > Model > bankpack > Create Diagram From Selected
   Elements.  In the Create New diagram Dialog, select Class Diagram as the Diagram Type
   and click Finish.  Click Yes to include the nested elements in the Create diagram From
   Selected dialog.  A class diagram of the elements in the bankpack package will be created.

5) Use the "Reverse Engineering a Java Application" tutorial to learn more about how 
   to use the Reverse Engineering feature of the UML Modeling module. Copy and paste
   the following link to your browser: http://www.netbeans.org/kb/60/uml/re-sampleapp.html
   
6) You will notice that the tutorial additionally creates three diagrams: BankClassDiagram,
   BankAccountDependencies, and withdrawSD. These diagrams are not packaged with this sample, 
   but they can be created quite easily.

   Creating the BankClassDiagram class diagram:
   Under the Model node, expand the bankpack package node. Select the bankpack package and 
   all the elements in the bankapp package. Right-click the selected nodes and select the
   Create Diagram from Selected elements action. Choose Class Diagram as the diagram type and 
   enter BankClassDiagram as the diagram name and click OK. The diagram will be created and opened.

   Creating the BankAccountDependencies class diagram:
   Under the Model node, expand the bankpack package node. Right-click the BankAccount class element
   and select the Generate Dependency Diagram action. The diagram will be created and opened.

   Creating the withdrawSD sequence diagram:
   Under the Model node, expand the bankpack package node. Navigate to Checking -> Operations -> withdraw. 
   Right-click withdraw and select Reverse Engineer Operation. Select Sequence Diagram and name the 
   diagram withdrawSD and click OK. The diagram will be created and opened.

7) Additional UML tutorials and documentation are available at http://www.netbeans.org/kb/60/uml/
