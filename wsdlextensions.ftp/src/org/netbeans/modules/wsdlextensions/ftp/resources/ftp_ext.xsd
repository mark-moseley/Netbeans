<?xml version="1.0" encoding="UTF-8" ?> 

<!--
 The contents of this file are subject to the terms of the Common Development
 and Distribution License (the License). You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 or http://www.netbeans.org/cddl.txt.
 
 When distributing Covered Code, include this CDDL Header Notice in each file
 and include the License file at http://www.netbeans.org/cddl.txt.
 If applicable, add the following below the CDDL Header, with the fields
 enclosed by brackets [] replaced by your own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 The Original Software is NetBeans. The Initial Developer of the Original
 Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 Microsystems, Inc. All Rights Reserved.
-->

<!-- 
schema for FTP BC extensibility element
--> 
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:ftp="http://schemas.sun.com/jbi/wsdl-extensions/ftp/"
    targetNamespace="http://schemas.sun.com/jbi/wsdl-extensions/ftp/" >

    <xs:import namespace = "http://schemas.xmlsoap.org/wsdl/" schemaLocation="wsdl.xsd"/>
    
    <xs:element name="binding" type="ftp:tBinding" >
        <xs:annotation>
            <xs:documentation>
                "binding" indicates a ftp protocol based binding.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:complexType name="tBinding" >
        <xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement" >
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="operation" type="ftp:tOperation" >
        <xs:annotation>
            <xs:documentation>
                "operation" indicates a ftp protocol based operation.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:complexType name="tOperation" >
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
	      	"operation" defines the ftp protocol based operation binding details..
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="wsdl:tExtensibilityElement" >
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="transfer" type="ftp:tTargetSpec">
        <xs:annotation>
            <xs:documentation>
                "transfer" defines the ftp protocol based put / poll (periodical list and get when available) operation binding details
            </xs:documentation>
	</xs:annotation>
    </xs:element>

    <xs:element name="message" type="ftp:tMessage">
        <xs:annotation>
            <xs:documentation>&lt;message&gt; defines the ftp protocol
based message exchange with default staging, with or without existing
target message overwrite protection, and archiving/deleting 
of processed messages.</xs:documentation>
	</xs:annotation>
    </xs:element>
<!-- obsolete ftp:messageActivePassive 
    <xs:element name="messageActivePassive" type="ftp:tMessageActivePassive">
        <xs:annotation>
            <xs:documentation>&lt;messageActivePassive&gt; defines the ftp protocol
based message exchange with default staging, with or without existing
target message overwrite protection, and archiving/deleting 
of processed messages, but allow the consumer and provider
have different active/passive mode.</xs:documentation>
	</xs:annotation>
    </xs:element>
-->
    <xs:complexType name="tTargetSpec">
	<xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
		<xs:attribute name="sendTo" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Path pointing to a file on remote FTP server
where the transfered data will be stored (sendTo), the path
components could be literal or patterns, see 'sendTohasPatterns'
for a detailed definition of pattern.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="append" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if the message will be appended at the end o the target file.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="sendToHasPatterns" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if 'sendTo' contains patterns which need to be
expanded to derive a real path on remote FTP server.
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
------------------------------------------------------------
Letter  Date or Time Component  Presentation       Examples
------------------------------------------------------------
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
-----------------------------------------------------------
2. directory/file name replacement (%p/%f), usually used in 
pre/post operation's 'receiveFrom'/'sendTo' path.
For example, when 'sendTo' is my_in_box/invoice.dat, 
then a pattern like %p_backup/%f.bak will be my_in_box_backup/invoice.dat.bak
after expansion.
3. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
4. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="receiveFrom" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Path pointing to a file on remote FTP server
where the transfered data will be read (receiveFrom), the path
components could be literals or regular expressions, see 'receiveFromHasRegexs'
for a detailed description.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="receiveFromHasRegexs" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if 'receiveFrom' has regular expressions.
when 'receiveFrom' contains regular expressions in it, 
those regular expressions will be used as filters filtering
out those directory/file entries that match the corresponding
regular expressions, for example:
if 'receiveFromHasRegexs' = FTP_IN_BOX/archive200[1-6]/invoice_[0-1][1-9]\.bak,
at the runtime, FTP BC will get a directory listing from FTP_IN_BOX,
iterate through each one of them and find the first match for regular expression
'archive200[1-6]', say archive2001, then get a directory listing from 
FTP_IN_BOX/archive2001, iterate through each one of them and find first match
for regular expression 'invoice_[0-1][1-9]\.bak', say, invoice_01.bak, now
FTP_IN_BOX/archive2001/invoice_01.bak is found as the first match,
and it will be used as the resolved value for 'receiveFrom', otherwise, 
if no match found for regular expression 'invoice_[0-1][1-9]\.bak',
FTP BC will go back to the parent level, and try the next match of 
'archive200[1-6]', and repeat the above process until found a path 
matching all the regular expressions as corresponding path components
or no matching path found after exhausted all paths under FTP_IN_BOX.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="pollIntervalMillis" type="xs:int" use="optional" default="5000">
                    <xs:annotation>
                        <xs:documentation>Polling interval in milli-seconds when data is polled from a location specified by 'receiveFrom'.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="preSendCommand" type="ftp:tPreCmds" use="optional" default="NONE">
                    <xs:annotation>
                        <xs:documentation>Operation performed before sending starts:
NONE - no operation performed before sending starts.
COPY - make a copy of the target file (specified by 'sendTo')
to a file specified by 'preSendLocation' before sending starts.
RENAME - move the target file (specified by 'sendTo') to a file
specified by 'preSendLocation' before sending starts.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="preSendLocation" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Destination file for operation to be performed before sending starts.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="preSendLocationHasPatterns" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if 'preSendLocation' contains patterns,
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
------------------------------------------------------------
Letter  Date or Time Component  Presentation       Examples
------------------------------------------------------------
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
-----------------------------------------------------------
2. directory/file name replacement (%p/%f), usually used in 
pre/post operation's 'receiveFrom'/'sendTo' path.
For example, when 'sendTo' is my_in_box/invoice.dat, 
then a pattern like %p_backup/%f.bak will be my_in_box_backup/invoice.dat.bak
after expansion.
3. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
4. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="postSendCommand" type="ftp:tPostCmds4Put" use="optional" default="NONE">
                    <xs:annotation>
                        <xs:documentation>Operation performed after sending completes:
NONE - no operation performed after sending completes.
DELETE - delete the target file (specified by 'sendTo') after sending completes.
RENAME - move the target file (specified by 'sendTo') to a file
specified by 'postSendLocation' after sending completes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="postSendLocation" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Destination file for operation to be performed after sending completes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="postSendLocationHasPatterns" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if 'postSendLocation' contains patterns,
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
------------------------------------------------------------
Letter  Date or Time Component  Presentation       Examples
------------------------------------------------------------
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
-----------------------------------------------------------
2. directory/file name replacement (%p/%f), usually used in 
pre/post operation's 'receiveFrom'/'sendTo' path.
For example, when 'sendTo' is my_in_box/invoice.dat, 
then a pattern like %p_backup/%f.bak will be my_in_box_backup/invoice.dat.bak
after expansion.
3. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
4. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="preReceiveCommand" type="ftp:tPreCmds" use="optional" default="NONE">
                    <xs:annotation>
                        <xs:documentation>Operation performed before receiving starts:
NONE - no operation performed before receiving starts.
COPY - make a copy of the target file (specified by 'receiveFrom')
to a file specified by 'preReceiveLocation' before receiving starts.
RENAME - move the target file (specified by 'receiveFrom') to a file
specified by 'preReceiveLocation' before receiving starts.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="preReceiveLocation" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Destination file for operation to be performed before receiving starts.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="preReceiveLocationHasPatterns" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if 'preReceiveLocation' contains patterns:
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
------------------------------------------------------------
Letter  Date or Time Component  Presentation       Examples
------------------------------------------------------------
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
-----------------------------------------------------------
2. directory/file name replacement (%p/%f), usually used in 
pre/post operation's 'receiveFrom'/'sendTo' path.
For example, when 'sendTo' is my_in_box/invoice.dat, 
then a pattern like %p_backup/%f.bak will be my_in_box_backup/invoice.dat.bak
after expansion.
3. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
4. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="postReceiveCommand" type="ftp:tPostCmds4Get" use="optional" default="NONE">
                    <xs:annotation>
                        <xs:documentation>Operation performed after receiving completes:
NONE - no operation performed after receiving completes.
DELETE - delete the target file (specified by 'receiveFrom') after receiving completes.
RENAME - move the target file (specified by 'receiveFrom') to a file
specified by 'postReceiveLocation' after receiving completes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="postReceiveLocation" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Destination file for operation to be performed after receiving completes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="postReceiveLocationHasPatterns" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if 'postReceiveLocation' contains patterns,
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
------------------------------------------------------------
Letter  Date or Time Component  Presentation       Examples
------------------------------------------------------------
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
-----------------------------------------------------------
2. directory/file name replacement (%p/%f), usually used in 
pre/post operation's 'receiveFrom'/'sendTo' path.
For example, when 'sendTo' is my_in_box/invoice.dat, 
then a pattern like %p_backup/%f.bak will be my_in_box_backup/invoice.dat.bak
after expansion.
3. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
4. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="senderUsePassive" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if passive FTP is used by sender.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="receiverUsePassive" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if passive FTP is used by receiver.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="use" type="ftp:tUseTypes" use="required">
                    <xs:annotation>
                        <xs:documentation>Indicate if the message is treated as literal or encoded.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="encodingStyle" type="xs:anyURI" use="optional">
                    <xs:annotation>
                        <xs:documentation>If 'use' is 'encoded', this is the encoding name associated with an encoder.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="part" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Defines the reference to the abstract message part in the WSDL.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageCorrelate" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate if a GUID tagging based request - response message correlate mechanism is enabled,
when enabled, the request message (initiated from web service consumer) name
and response message name (created by the web service provider) will comply
with the Message GUID Tagging Contract:
request message name (i.e., ftp file name containing the message) =: req.guid-val
response message name (i.e., ftp file name containing the message) =: resp.guid-val
Note: the guid-val on both names are the same GUID generated by the consumer when it
intiated the request, and propagated throughout the message transit path, to make
the guid-val across the NMR, JBI message property or JBI message exchange ID indexed
message exchange context could be used by the BC implementation.
as a result, the consumer can poll the exact response for the request it sends.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
	</xs:complexContent>
    </xs:complexType>

    <!-- out-of-box message transfer operations that 
    assume default values for the convenience of the 
    user
    -->
    <xs:complexType name="tMessage">
	<xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
		<xs:attribute name="messageRepository" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Path pointing to a directory on remote FTP server
where messages will be persisted and processed and archived, specifically,
the following defaults are assumed and created appropriately by FTP BC:
Note IN and OUT are from service provider's point of view:
(1)&lt;messageRepository&gt;/inbox - default location where
consumer puts request message to and provider polls request message
from.
(2)&lt;messageRepository&gt;/instage - default location where
consumer stages request message before it is completely uploaded.
(3)&lt;messageRepository&gt;/inprotect - default location where
consumer moves an existing request message to so that it is not
overwritten by current request message.
(4)&lt;messageRepository&gt;/inarchive - default location where
provider archives request message after it is processed.
(5)&lt;messageRepository&gt;/outbox - default location where provider
puts response message to and consumer polls the response message from.
(6)&lt;messageRepository&gt;/outstage - default location where
provider stages response message before it is completely uploaded.
(7)&lt;messageRepository&gt;/outprotect - default location where
provider moves an existing response message to so that it is not
overwritten by current response message.
(8)&lt;messageRepository&gt;/outarchive - default location where
consumer archives response message after it is processed.
</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="messageName" type="xs:string" use="optional" default="">
                    <xs:annotation>
                        <xs:documentation>messageName is actually the file name where a message is put into,
usually in the form of a name pattern,
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
------------------------------------------------------------
Letter  Date or Time Component  Presentation       Examples
------------------------------------------------------------
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
-----------------------------------------------------------
2. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
3. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageNamePrefixIB" type="xs:string" use="optional" default="">
                    <xs:annotation>
                        <xs:documentation>Prefix for inbound (IB) message name.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageNamePrefixOB" type="xs:string" use="optional" default="">
                    <xs:annotation>
                        <xs:documentation>Prefix for inbound (OB) message name.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="pollIntervalMillis" type="xs:int" use="optional" default="5000">
                    <xs:annotation>
                        <xs:documentation>Polling interval in milli-seconds when data is polled from a location specified by 'receiveFrom'.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="archive" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if archive is required for processed message,
when true, processed message is archived, otherwise, it is removed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="protect" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if overwrite protection is required for message send,
when true, existing message will be moved to dedicated directory before
the current message is put to the target, otherwise, current message 
overwrite existing message.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="stage" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if staing is enabled for message transfer.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="use" type="ftp:tUseTypes" use="required">
                    <xs:annotation>
                        <xs:documentation>Indicate if the message is treated as literal or encoded.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="encodingStyle" type="xs:anyURI" use="optional">
                    <xs:annotation>
                        <xs:documentation>If 'use' is 'encoded', this is the encoding name associated with an encoder.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="part" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Defines the reference to the abstract message part in the WSDL.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageCorrelate" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if a GUID tagging based request - response message correlate mechanism is enabled,
when enabled, the request message (initiated from web service consumer) name
and response message name (created by the web service provider) will comply
with the Message GUID Tagging Contract:
request message name (i.e., ftp file name containing the message) =: req.guid-val
response message name (i.e., ftp file name containing the message) =: resp.guid-val
Note: the guid-val on both names are the same GUID generated by the consumer when it
intiated the request, and propagated throughout the message transit path, to make
the guid-val across the NMR, JBI message property or JBI message exchange ID indexed
message exchange context could be used by the BC implementation.
as a result, the consumer can poll the exact response for the request it sends.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
	</xs:complexContent>
    </xs:complexType>
<!-- move usePassiveFTP flag into runtime configuration, hence no need for a ftp:messageActivePassive extension
    <xs:complexType name="tMessageActivePassive">
	<xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
		<xs:attribute name="messageRepository" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Path pointing to a directory on remote FTP server
where messages will be persisted and processed and archived, specifically,
the following defaults are assumed and created appropriately by FTP BC:
Note IN and OUT are from service provider's point of view:
(1)&lt;messageRepository&gt;/inbox - default location where
consumer puts request message to and provider polls request message
from.
(2)&lt;messageRepository&gt;/instage - default location where
consumer stages request message before it is completely uploaded.
(3)&lt;messageRepository&gt;/inprotect - default location where
consumer moves an existing request message to so that it is not
overwritten by current request message.
(4)&lt;messageRepository&gt;/inarchive - default location where
provider archives request message after it is processed.
(5)&lt;messageRepository&gt;/outbox - default location where provider
puts response message to and consumer polls the response message from.
(6)&lt;messageRepository&gt;/outstage - default location where
provider stages response message before it is completely uploaded.
(7)&lt;messageRepository&gt;/outprotect - default location where
provider moves an existing response message to so that it is not
overwritten by current response message.
(8)&lt;messageRepository&gt;/outarchive - default location where
consumer archives response message after it is processed.
</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="messageName" type="xs:string" use="optional" default="">
                    <xs:annotation>
                        <xs:documentation>messageName is actually the file name where a message is put into,
usually in the form of a name pattern,
where 'pattern' is a string containing special 
characters escaped by percentage sign, the following 
are all the symbols supported:
1. time stamps (%[GyMdhHmsSEDFwWakKz]). Java simple date/time format is used:
Letter  Date or Time Component  Presentation       Examples
G       Era designator          Text               AD
y       Year                    Year               1996; 96
M       Month in year           Month              July; Jul; 07
w       Week in year            Number             27
W       Week in month           Number             2
D       Day in year             Number             189
d       Day in month            Number             10
F       Day of week in month    Number             2
E       Day in week             Text               Tuesday; Tue
a       Am/pm marker            Text               PM
H       Hour in day (0-23)      Number             0
k       Hour in day (1-24)      Number             24
K       Hour in am/pm (0-11)    Number             0
h       Hour in am/pm (1-12)    Number             12
m       Minute in hour          Number             30
s       Second in minute        Number             55
S       Millisecond             Number             978
z       Time zone               General time zone  Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone  -0800
2. UUID %u, will be substituted by a UUID value compliant with Java 1.5 UUID.
3. sequence number reference %#, this symbol will be replaced by the current 
value of sequence number which is a persisted integer count that increament 
after each reference.</xs:documentation>
                </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageNamePrefixIB" type="xs:string" use="optional" default="">
                    <xs:annotation>
                        <xs:documentation>Prefix for inbound (IB) message name.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageNamePrefixOB" type="xs:string" use="optional" default="">
                    <xs:annotation>
                        <xs:documentation>Prefix for inbound (OB) message name.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="pollIntervalMillis" type="xs:int" use="optional" default="5000">
                    <xs:annotation>
                        <xs:documentation>Polling interval in milli-seconds when data is polled from a location specified by 'receiveFrom'.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="consumerUsePassive" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if passive FTP is used by consumer.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="providerUsePassive" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if passive FTP is used by provider.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="archive" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if archive is required for processed message,
when true, processed message is archived, otherwise, it is removed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="protect" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if overwrite protection is required for message send,
when true, existing message will be moved to dedicated directory before
the current message is put to the target, otherwise, current message 
overwrite existing message.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="stage" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if staing is enabled for message transfer.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="use" type="ftp:tUseTypes" use="required">
                    <xs:annotation>
                        <xs:documentation>Indicate if the message is treated as literal or encoded.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		<xs:attribute name="encodingStyle" type="xs:anyURI" use="optional">
                    <xs:annotation>
                        <xs:documentation>If 'use' is 'encoded', this is the encoding name associated with an encoder.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="part" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Defines the reference to the abstract message part in the WSDL.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="messageCorrelate" type="xs:boolean" use="optional" default="true">
                    <xs:annotation>
                        <xs:documentation>Indicate if a GUID tagging based request - response message correlate mechanism is enabled,
when enabled, the request message (initiated from web service consumer) name
and response message name (created by the web service provider) will comply
with the Message GUID Tagging Contract:
request message name (i.e., ftp file name containing the message) =: req.guid-val
response message name (i.e., ftp file name containing the message) =: resp.guid-val
Note: the guid-val on both names are the same GUID generated by the consumer when it
intiated the request, and propagated throughout the message transit path, to make
the guid-val across the NMR, JBI message property or JBI message exchange ID indexed
message exchange context could be used by the BC implementation.
as a result, the consumer can poll the exact response for the request it sends.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
	</xs:complexContent>
    </xs:complexType>
end of ftp:messageActivePassive -->

    <xs:element name="address" type="ftp:tAddress">
        <xs:annotation>
            <xs:documentation>
                "address" indicates a ftp protocol based service address.
            </xs:documentation>
	</xs:annotation>
    </xs:element>

    <!--
    for FTP BC endpoint information
    -->
    <xs:complexType name="tAddress">
       <xs:complexContent>
            <xs:extension base="wsdl:tExtensibilityElement">
                <xs:attribute name="url" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>FTP url in the form of: ftp://[user]:[password]@[host name or IP]:[port]</xs:documentation>
                    </xs:annotation>
		</xs:attribute>
                <xs:attribute name="dirListStyle" type="ftp:tDirListingStyles" use="optional" default="UNIX">
                    <xs:annotation>
                        <xs:documentation>Directory listing style of FTP server.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="useUserDefinedHeuristics" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>Indicate that a user defined directory listing style will be used, instead of out-of-box 'dirListStyle'.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="userDefDirListStyle" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Name of the user defined directory listing style, must match an entry name in user defined heuristics configuration.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="userDefDirListHeuristics" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Local file system path pointing to the user defined heuristics configuration file.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="mode" type="ftp:tTransferModes" use="optional" default="BINARY">
                    <xs:annotation>
                        <xs:documentation>FTP transfer mode.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="cmdChannelTimeout" type="xs:integer" use="optional" default="45000">
                    <xs:annotation>
                        <xs:documentation>FTP command channel timeout in milliseconds.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="dataChannelTimeout" type="xs:integer" use="optional" default="45000">
                    <xs:annotation>
                        <xs:documentation>FTP data channel timeout in milliseconds.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
	</xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="tUseTypes">
        <xs:restriction base="xs:string">
            <xs:enumeration value="literal"/>
            <xs:enumeration value="encoded"/>
	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tTransferModes">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ASCII"/>
            <xs:enumeration value="BINARY"/>
            <xs:enumeration value="EBCDIC"/>
	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tPreCmds">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="COPY"/>
            <xs:enumeration value="RENAME"/>
	</xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="tPostCmds4Get">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="DELETE"/>
            <xs:enumeration value="RENAME"/>
	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tPostCmds4Put">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="RENAME"/>
	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tDirListingStyles">
        <xs:restriction base="xs:string">
            <xs:enumeration value="UNIX"/>
            <xs:enumeration value="AS400"/>
            <xs:enumeration value="AS400-UNIX"/>
            <xs:enumeration value="HCLFTPD 6.0.1.3"/>
            <xs:enumeration value="HCLFTPD 5.1"/>
            <xs:enumeration value="HP NonStop/Tandem"/>
            <xs:enumeration value="MPE"/>
            <xs:enumeration value="MSFTPD 2.0"/>
            <xs:enumeration value="MSP PDS (Fujitsu)"/>
            <xs:enumeration value="MSP PS (Fujitsu)"/>
            <xs:enumeration value="MVS GDG"/>
            <xs:enumeration value="MVS PDS"/>
            <xs:enumeration value="MVS Sequential"/>
            <xs:enumeration value="Netware 4.11"/>
            <xs:enumeration value="NT 3.5"/>
            <xs:enumeration value="NT 4.0"/>
            <xs:enumeration value="UNIX (EUC-JP)"/>
            <xs:enumeration value="UNIX (SJIS)"/>
            <xs:enumeration value="VM/ESA"/>
            <xs:enumeration value="VMS"/>
            <xs:enumeration value="VOS3 PDS (Hitachi)"/>
            <xs:enumeration value="VOS3 PS (Hitachi)"/>
            <xs:enumeration value="VOSK (Hitachi)"/>
	</xs:restriction>
    </xs:simpleType>
</xs:schema>