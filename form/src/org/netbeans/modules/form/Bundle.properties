#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is Forte for Java, Community Edition. The Initial
# Developer of the Original Code is Sun Microsystems, Inc. Portions
# Copyright 1997-2000 Sun Microsystems, Inc. All Rights Reserved.




# display name of the Form Settings in the explorer
CTL_FormSettings=Form Objects

# name provided from the top-level component, which does not have a variable name to return
CTL_FormTopContainerName=Form

# display name of the Form Loader
PROP_FormLoader_Name=Form Objects

# formatting of form window title
# {0} = name of the form data object
FMT_FormWindowTitle=Form [{0}]

# FormDataLoaderBeanInfo
PROP_Name=Name
HINT_Name=Name of URL object.

# Control Panel -> Form Objects Property Names
PROP_INDENT_AWT_HIERARCHY=Indent AWT Hierarchy
HINT_INDENT_AWT_HIERARCHY=If true, the code for component initialization is indented according to the AWT hierarchy.
PROP_SORT_EVENT_SETS=Sort Event Sets
HINT_SORT_EVENT_SETS=If true, the events in the Property Sheet are sorted by name.
PROP_EVENT_VARIABLE_NAME=Event Variable Name
HINT_EVENT_VARIABLE_NAME=The name of the event variable parameter generated in an event handler's header.
PROP_SHORT_BEAN_NAMES=Short Bean Names
HINT_SHORT_BEAN_NAMES=Short Bean names.
PROP_SELECTION_BORDER_SIZE=Selection Border Size
HINT_SELECTION_BORDER_SIZE=The size in pixels of the border that marks components as selected.
PROP_SELECTION_BORDER_COLOR=Selection Border Color
HINT_SELECTION_BORDER_COLOR=The color of the border that marks components as selected.
PROP_CONNECTION_BORDER_COLOR=Connection Border Color
HINT_CONNECTION_BORDER_COLOR=The color of the selection border while connecting components.
PROP_DRAG_BORDER_COLOR=Drag Border Color
HINT_DRAG_BORDER_COLOR=The color of the selection border while dragging components.
PROP_SHOW_GRID=Show Grid
HINT_SHOW_GRID=If true, a grid is displayed in AbsoluteLayout mode.
PROP_GRID_X=Grid X
HINT_GRID_X=The X-axis grid size.
PROP_GRID_Y=Grid Y
HINT_GRID_Y=The Y-axis grid size.
PROP_APPLY_GRID_TO_POSITION=Apply Grid to Position
HINT_APPLY_GRID_TO_POSITION=If true, the positions of components are aligned to grid.
PROP_APPLY_GRID_TO_SIZE=Apply Grid to Size
HINT_APPLY_GRID_TO_SIZE=If true, the sizes of components are aligned to grid.
PROP_VARIABLES_MODIFIER=Variables Modifier
HINT_VARIABLES_MODIFIER=The access modifier of variables generated for components on the form.
PROP_EDITOR_SEARCH_PATH=Property Editor Search Path
HINT_EDITOR_SEARCH_PATH=List of packages that are searched for property editors to be used in the Form Editor.
PROP_REGISTERED_EDITORS=Property Editors
HINT_REGISTERED_EDITORS=Explicitly registered editors for certain property types.
PROP_DISPLAY_WRITABLE_ONLY=Display Writable Only
HINT_DISPLAY_WRITABLE_ONLY=If true, only writable properties are displayed on the property sheet.
VALUE_DEFAULT_MODIFIER=Default Modifier
VALUE_PRIVATE=private
VALUE_PACKAGE_PRIVATE=package private
VALUE_PROTECTED=protected
VALUE_PUBLIC=public

# formatting of a status line text shown during the opening of the form
# {0} = name of the form data object
FMT_OpeningForm=Opening Form: {0} ...

# error notification message that will be shown when some errors/warnings occur during form loading
ERR_BetaErrorsNotification=Some errors occurred while loading this form. See console for details.

# formatting of an error message that will be shown when an error occurrs
# during loading of the form
# {0} = name of the form data object
# {1} = name of the class of the exception that caused the error
FMT_ERR_LoadingForm=An error occurred while loading form: {0} [{1}]

# formatting of an error message that will be shown when an error occurrs
# during saving of the form
# {0} = name of the form data object
# {1} = name of the class of the exception that caused the error
FMT_ERR_SavingForm=An error occurred while saving form: {0} [{1}]

# formatting of an error message that will be shown when an error occurrs
# during saving of the form
# {0} = name of the form data object
# {1} = name of the class of the exception that caused the error
ERR_SavingForm=An error occurred while saving form: {0} [{1}]

# Printed when IOException occurs during creating component palette folder under system
# (performed when Form module is installed for the first time)
ERR_CreatingPalette=An error occurred while creating the Palette folder

# Printed as a warning when IOException occurs during creating component palette categories or items
# (performed when Form module is installed for the first time)
ERR_ProblemsCreatingPalette=\
	Some problems occurred during Component Palette creation.\n\
	The palette might not be complete.

# formatting of Error message when a layout initialization fails
# {0} = layout class name
# {1} = class name of the exception
FMT_ERR_LayoutInit=Failed to initialize layout {1} ({2})

# Component Inspector Title
CTL_NoSelection=Component Inspector
CTL_MultipleSelection=Component Inspector [multiple selection]

# formatting of ComponentInspector's Title if there is one selected component
# {0} = displayName of the selected component
# Not yet available ({1} = name of the form)
FMT_InspectorTitle=Component Inspector [{0}]

# formatting of form window's title
# {0} = type of the form (e.g. JFrame, Applet, ...)
# {1} = name of the form
FMT_FormTitle=Form [{1}]

# formatting of title of window which is displayed instead of form window when the
# form loading fails
# {0} = name of the form
FMT_ErrorFormWindowTitle=Error During Form Loading [{0}]

# formatting of display name of the form AWT root node
# {0} = type of the form (e.g. JFrame, Applet, ...)
# {1} = name of the form
FMT_FormRootName={1} [{0}]

# Error messages
MSG_ERR_CreateMain=Failed to create the main() method.

# formatting of Error message when a class loading fails
# {0} = ClassNotFoundException details message
# {1} = class name of the exception
FMT_ERR_ClassNotFound=Class not found: {0} ({1})

# formatting of Error message when a constraints loading fails
# {0} = Exception details message
# {1} = class name of the exception
FMT_ERR_ConstraintsNotFound=Constraints not found: {0} ({1})


# formatting of component node display name
# {0} = name of the component (typically variable name)
# {1} = fully qualified name of component class
# {2} = short name of component class (without package)
FMT_ComponentName={0} [{2}]

# formatting of form top-level node display name
# {0} = name of the form (class name)
# {1} = fully qualified name of form type class
# {2} = short name of form type class (without package)
FMT_FormName={0} [{2}]

# formatting of component node display name
# {0} = display name of the layout
# {1} = fully qualified name of layout class
# {2} = short name of layout class (without package)
# {3} = name of the container (typically variable name)
# {4} = fully qualified name of container class
# {5} = short name of container class (without package)
FMT_LayoutName={0}

# formatting of a message that is displayed in the status line during setting layout
# {0} = displayName of the container to set the layout on
FMT_MSG_SetLayout=Set Layout on {0}

# formatting of a message that is displayed in the status line during setting layout
# when the layout cannot be set
# {0} = displayName of the container it is not possible to set the layout on
FMT_MSG_CannotSetLayout=Cannot Set Layout on {0}

# formatting of a message that is displayed in the status line during setting border
# {0} = displayName of the component to set the border on
FMT_MSG_SetBorder=Set Border on {0}

# formatting of a message that is displayed in the status line during setting border
# {0} = displayName of the component, the border cannot be set on
FMT_MSG_CannotSetBorder=Cannot Set Border on {0}

# formatting of a message that is displayed in the status line during adding a new component
# {0} = string desription of the constraints to add the component to
# {1} = display name of the container to add the component to
# {2} = short class name (without package) of the component to add
FMT_MSG_AddComponent=Add {2} to {1} ({0})

# formatting of a message that is displayed in the status line during adding a new nonvisual component
# {0} = short class name (without package) of the component to add
FMT_MSG_AddNonVisualComponent=Add {0} to the form (non-visual)

# Events
  MSG_CannotAttach=\
	Cannot attach to the event handler.\n\
	The event type does not match the type of the handler.
  MSG_CannotRename=\
	Cannot rename to an existing event handler.\n\
	To reattach, first remove the current handler and then attach to the existing one.

  # formatting of the message when deleting last event from its event handler
  # {0} = name of the event handler
  FMT_MSG_EventDelete=\
	The current event is the last event that is attached\n\
	to the "{0}" event handler.\n\
	Do you want to delete this event handler method ?\n\
	WARNING: Any user code in the method will be discarded\n\
	if you answer "Yes".

  # The string event property value name when no event handler is attached to the event
  CTL_NoEvent=<none>

# Visual operations
  # formatting of a message that is displayed in the status line during resizing a component
  # {0} = string desription of the constraints to resize the component to
  FMT_MSG_ResizeComponent=Resize component to {0}

  # formatting of a message that is displayed in the status line during moving a component
  # {0} = string desription of the constraints to move the component to
  FMT_MSG_MoveComponent=Move component to {0}


# Code Generation
  # names of property values for Size Policy property
  VALUE_sizepolicy_pack=Generate pack()
  VALUE_sizepolicy_full=Generate Resize Code
  VALUE_sizepolicy_none=No Resize Code

  # A code generated into a new event handler method
  MSG_EventHandlerBody=// Add your handling code here:

  # Comments generated around generated variables declarations
  MSG_VariablesBegin=// Variables declaration - do not modify
  MSG_VariablesEnd=// End of variables declaration

  # a text which is generated when an error occures
  MSG_ErrorGeneratingCode=error while generating code

# Connection Wizard

  CTL_CW_Step1_Title=Connection Wizard - Step 1 of 3
  CTL_CW_ConnectionSource=Connection Source
  CTL_CW_SourceComponent=Source Component:
  CTL_CW_Event=Event:
  CTL_CW_EventHandlerMethod=Event Handler Method
  CTL_CW_MethodName=Method Name:
  CTL_CW_Advanced=Advanced

  CTL_CW_Step2_Title=Connection Wizard - Step 2 of 3
  CTL_CW_Step2b_Title=Connection Wizard - Step 2 of 2
  CTL_CW_ConnectionTarget=Connection Target
  CTL_CW_TargetComponent=Target Component:
  CTL_CW_SetProperty=Set Property
  CTL_CW_MethodCall=Method Call
  CTL_CW_UserCode=User Code
  CTL_CW_UserCodeText1=After clicking Finish, enter the custom code
  CTL_CW_UserCodeText2=for handling the event in the Editor.

  CTL_CW_Step3_Title=Connection Wizard - Step 3 of 3
  CTL_CW_Preview=Preview
  CTL_CW_GeneratedPreview=Generated Parameters Preview:

  # {0} = required type (short class name)
  CTL_FMT_CW_SelectMethod=Select Method ({0})
  # {0} = required type (short class name)
  CTL_FMT_CW_SelectProperty=Select Property ({0})

  CTL_CW_Component=Component:
  CTL_CW_Parameters=Parameters
  CTL_CW_NotSet=<not set>
  CTL_CW_Code=<code>
  CTL_CW_GetParametersFrom=Get Parameter From:
  CTL_CW_Value=Value:
  CTL_CW_Property=Property:
  CTL_CW_NoProperty=<No Property Selected>
  CTL_CW_Method=Method Call:
  CTL_CW_NoMethod=<No Method Selected>
  CTL_CW_UserCode=User Code:


  # formatting of a message that is displayed in the status line when starting connection
  # {0} = displayName of the connection source component
  FMT_MSG_ConnectionSource=Connect {0}

  # formatting of a message that is displayed in the status line when finishing connection
  # {0} = displayName of the connection source component
  # {1} = displayName of the connection target component
  FMT_MSG_ConnectionTarget=Connect {0} to {1}

  # formatting of a message that is displayed in the status line when finishing connection
  MSG_RewritingEvent=\
	The selected event already has an event handler attached.\n\
	If you click OK, the code in this event handler will be replaced\n\
	with the code generated by the Wizard.

  VALUE_codeGen_generate=Generate Code
  VALUE_codeGen_serialize=Serialize

# Menu Editor

  # formatting of MenuItem name
  # {0} = name of the menu instance
  # {1} = name of the MenuItem's class
  # {2} = label of the menuitem
  FMT_MenuName={2} [{1}]

  CTL_separator=Separator
  CTL_NoMenu=(No Menu)

  PROP_menuBar=Menu Bar
  HINT_menuBar=The menu bar used as a main menu of this form.

  # default names of adding MenuItems during menu editing.
  # {0} = Variable name
  FMT_LAB_MenuItem=Item
  FMT_LAB_CheckboxMenuItem=CheckBox
  FMT_LAB_Menu=Menu
  FMT_LAB_PopupMenu=PopupMenu
  FMT_LAB_JMenuItem=Item
  FMT_LAB_JCheckBoxMenuItem=CheckBox
  FMT_LAB_JMenu=Menu
  FMT_LAB_JRadioButtonMenuItem=RadioButton

# GandalfPersistenceManager
  ERR_BadXMLFormat=Error loading form: the file format is invalid.
  ERR_BadXMLVersion=Error loading form: the form file version is not supported.

  # Formatting of error message displayed when FormInfo class cannot be created for a form
  FMT_ERR_FormInfoNotFound=Error loading form: the FormInfo class was not found:\n{0}
