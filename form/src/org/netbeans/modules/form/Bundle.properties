#                 Sun Public License Notice
#
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
#
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
# Microsystems, Inc. All Rights Reserved.

# display name of the Form Editor window
CTL_FormEditorWindow=Form Editor

# display name of the Form Settings in Options
CTL_FormSettings=Form Editor Settings

# name provided from the top-level component, which does not have a variable name to return
CTL_FormTopContainerName=Form

# display name of the Form Loader
PROP_FormLoader_Name=Form Objects

# display name of Non-Visual Components Node
CTL_NonVisualComponents=Other Components

# formatting of the form designer title
# {0} = name of the opened form
FMT_FormTitle={0} [Form]

# formatting of the form designer title if the form is read only
# {0} = name of the opened form
FMT_FormTitle_RO={0} [Form] (read only)

# Control Panel -> Form Objects Property Names
PROP_USE_INDENT_ENGINE=Use Indentation Engine
HINT_USE_INDENT_ENGINE=If True, the editor's indentation engine is used for generated code. \
                       If False, only simple (but faster) indentation is performed.
PROP_GENERATE_ON_SAVE=Use Deferred Code Generation
HINT_GENERATE_ON_SAVE=If True, the code is generated only when the form is saved. \
                      If False, the code is updated with each change in the form.
PROP_EVENT_VARIABLE_NAME=Event Variable Name
HINT_EVENT_VARIABLE_NAME=The name of the event variable parameter generated in an event handler's header.
PROP_LISTENER_GENERATION_STYLE=Listener Generation Style
HINT_LISTENER_GENERATION_STYLE=The style of generating code of event listeners
PROP_SELECTION_BORDER_SIZE=Selection Border Size
HINT_SELECTION_BORDER_SIZE=The size of the components selection border (in pixels).
PROP_SELECTION_BORDER_COLOR=Selection Border Color
HINT_SELECTION_BORDER_COLOR=The color of the border that marks components as selected.
PROP_CONNECTION_BORDER_COLOR=Connection Border Color
HINT_CONNECTION_BORDER_COLOR=The color of the selection border while connecting components.
PROP_DRAG_BORDER_COLOR=Drag Feedback Color
HINT_DRAG_BORDER_COLOR=The color of the target container border while dragging components.
PROP_GRID_X=Grid X
HINT_GRID_X=The X-axis grid size.
PROP_GRID_Y=Grid Y
HINT_GRID_Y=The Y-axis grid size.
PROP_APPLY_GRID_TO_POSITION=Apply Grid to Position
HINT_APPLY_GRID_TO_POSITION=If True, the positions of components are aligned to the grid.
PROP_APPLY_GRID_TO_SIZE=Apply Grid to Size
HINT_APPLY_GRID_TO_SIZE=If True, the sizes of components are aligned to the grid.
PROP_VARIABLES_MODIFIER=Variables Modifier
HINT_VARIABLES_MODIFIER=The access modifier of variables generated for components on the form.
PROP_EDITOR_SEARCH_PATH=Property Editor Search Path
HINT_EDITOR_SEARCH_PATH=List of packages that are searched for property editors to be used in the Form Editor.
PROP_REGISTERED_EDITORS=Property Editors
HINT_REGISTERED_EDITORS=Explicitly registered editors for certain property types.
PROP_PALETTE_IN_TOOLBAR=Component Palette in ToolBar
HINT_PALETTE_IN_TOOLBAR=If True, the components from Component Palette are available in the form editor's toolbar.
PROP_SHOW_COMPONENT_NAMES=Component Palette Shows Names
HINT_SHOW_COMPONENT_NAMES=If True, component palette shows names of components.
VALUE_SELECTED_PALETTE_NONE=None
PROP_FORMDESIGNER_BACKGROUND_COLOR=Form Designer Background Color
HINT_FORMDESIGNER_BACKGROUND_COLOR=The color of the Form Designer window's background.
PROP_FORMDESIGNER_BORDER_COLOR=Form Designer Border Color
HINT_FORMDESIGNER_BORDER_COLOR=The color of the border around designed component.

# form toolbar
CTL_SelectionMode=Selection Mode
CTL_ConnectionMode=Connection Mode
CTL_AddMode=Add Mode

CTL_SelectionButtonHint=Selection Mode
CTL_ConnectionButtonHint=Connection Mode
CTL_BeansButtonHint=Add Mode

CTL_SelectionModeHint=Form Editor is in \"Selection Mode\" - you may select components on the form.
CTL_ConnectionModeHint=Form Editor is in \"Connection Mode\" - you may connect components with a wizard.
CTL_AddModeHint=Form Editor is in \"Add Mode\" - you may add the selected bean to the form.

CTL_PaletteButton_MenuItem=Show Add Button

ACSD_SelectionMode=If selected, Form Editor is in \"Selection Mode\" - you may select components on the form.
ACSD_ConnectionMode=If selected, Form Editor is in \"Connection Mode\" - you may connect components with a wizard.
ACSD_AddMode=If selected, Form Editor is in \"Add Mode\" - you may add the selected bean to the form.

# HandleLayer
ACSN_HandleLayer=Visual form designer
ACSD_HandleLayer=Use Component Inspector for keyboard-only navigation

# displayed text of not set value (for "write only" properties)
CTL_ValueNotSet=<Not Set>

# value type displayed as tooltip in property sheet for properties without description
# {0} = property value type name
HINT_PropertyType=({0})

# value type displayed as tooltip in property sheet for properties having some description
# {0} = property value type name
# {1} = the original short description of the property
HINT_PropertyTypeWithDescription=({0})  {1}

# RADComponent PropertySets
CTL_PropertiesTab=Properties
CTL_PropertiesTabHint=Common properties of the JavaBean
CTL_Properties2Tab=Other Properties
CTL_Properties2TabHint=Other properties of the JavaBean
CTL_EventsTab=Events
CTL_EventsTabHint=Events of the JavaBean
CTL_SyntheticTab=Code Generation
CTL_SyntheticTabHint=Properties that control the Java code generated for the JavaBean
CTL_SyntheticTab_Short=Code
CTL_LayoutTab=Layout
CTL_LayoutTabHint=Layout constraints properties

# Accessibility support
CTL_AccessibilityTab=Accessibility
CTL_AccessibilityTabHint=Properties of AccessibleContext of the component
PROP_AccessibleName=Accessible Name
PROP_AccessibleDescription=Accessible Description
PROP_AccessibleParent=Accessible Parent

# names of PasteType for copy/paste and cut/paste operations
CTL_CopyPaste=Copy
CTL_CutPaste=Move

# hint for ButtonGroupProperty
HINT_ButtonGroup=Group of buttons in which this button belongs

ERR_COMPONENT_NAME_ALREADY_IN_USE=Two components in the same form cannot have the same name.
ERR_INVALID_COMPONENT_NAME=The name of a component must be a valid Java variable name.

# user entered value that passed through Property Editor, but failed in setter method of the property
MSG_ERR_WRITING_TO_PROPERTY=Failed to write the value to the property \"{0}\".

# formatting of a status line text shown during the opening of the form
# {0} = name of the form data object
FMT_OpeningForm=Opening Form: {0}

# error notifications shown when some errors/warnings occur during form loading
FMT_ERR_PersistenceManagerInstantiation=Cannot instantiate persistence manager:\n {0}

# warning message when a form was loaded with errors (not all data loaded)
MSG_FormLoadedWithErrors=Errors occurred in loading the form data. It is not recommended to use\n\
this form now - data that could not be loaded would be lost after saving the form.\n\
Please go through the reported errors, try to fix them if possible, and open the form again.

# title of the warning message above
CTL_FormLoadedWithErrors=Warning - Form Loaded With Errors

# message when there's no PersistenceManager registered for loading forms
MSG_ERR_NoPersistenceManager=Internal error: there is no persistence manager registered.\n\
The form cannot be opened.

# message when no registered PersistenceManager is capable of loading the form
MSG_ERR_NotRecognizedForm=The form file format is not recognized.\nThe form cannot be opened.

# message when some errors occurred in accessing the form file
MSG_ERR_LoadingErrors=Some errors occurred when trying to load the form file.\n\
The form cannot be opened.

# message when the form file contains invalid XML
MSG_ERR_InvalidXML=The form file does not contain valid XML.\nThe form cannot be opened.

# message when the form file does not contain expected main element
# do not translate "Form"
MSG_ERR_MissingMainElement=Invalid format: main \"Form\" element not found in the form file.\nThe form cannot be opened.

# formatting of message when the for is of unsupported version
# {0} = version number
FMT_ERR_UnsupportedVersion=Unsupported form file version: {0}.\nThe form cannot be opened.

# formatting of warning message printed to console when a substitute form type is used
# {0} name of the opening form
# {1} name of the class used as the fallback form type alternative
# {2} name of the class that could not be used
FMT_FormTypeWarning=[WARNING] Opening form {0} as {1}.\n\          Could not use \
the declared superclass: {2}

# formatting of warning message printed to console when form type in form file
# is not compatible with superclass declared in the java file
# {0} name of the opening form
FMT_IncompatibleFormTypeWarning=[WARNING] Form {0} has incompatible superclass declared in java file.

# formatting of message when the form cannot be based on given class
# {0} = the invalid base class name
FMT_ERR_InvalidBaseClass=Cannot determine form type ({0}).\n\
Please make sure the class is a JavaBean.\nThe form cannot be opened.

# message when the base class of the form cannot be determined
MSG_ERR_CannotDetermineBaseClass=Cannot determine the form type (the base class \
of the form cannot be loaded).\nThe form cannot be opened.

# message when there's a class name of component missing
MSG_ERR_MissingClass=Invalid format: missing class name.\nThe component cannot be loaded.

# formatting of message when a component class cannot be loaded
# {0} = name of the class that cannot be loaded
FMT_ERR_CannotLoadClass=Cannot load component class {0}.\nThe component cannot be loaded.

# formatting of message when an unknow element is found in form file
# {0} = name of the unknown element
FMT_ERR_UnknownElement=Found unknown component element: {0}

# formatting of message when a component instance cannot be created
# {0} = name of the class which cannot be instantiated
FMT_ERR_CannotCreateInstance=Cannot create instance of {0}.\n\
The component cannot be loaded.

# message when initialization of visual layout of loaded container failed
MSG_ERR_LayoutInitFailed=Initialization of layout support failed.\n\
Layout information for this container cannot be loaded.

# message when no layout support found for a container
MSG_ERR_NoLayoutSupportFound=No layout support was found.\n\
Layout information for this container cannot be loaded.

# message when there's a property name missing in form file
MSG_ERR_MissingPropertyName=Invalid format: missing property name attribute.\n\
The property cannot be loaded.

# message when a specified property is unknown
MSG_ERR_UnknownProperty=No such property exists in the component.

# formatting of message when a property type class cannot be loaded
# {0} = name of the class that cannot be loaded
FMT_ERR_CannotLoadClass2=Cannot load property type class {0}.\nThe property cannot be loaded.

# message when the stored property type is not compatible with the property
MSG_ERR_IncompatiblePropertyType=Invalid format: the stored property type is incompatible.\n\
The property cannot be loaded.

# message when there's a property type missing in form file
MSG_ERR_MissingPropertyType=Invalid format: missing property type attribute.\n\
The property cannot be loaded.

# formatting of message when a property editor class cannot be loaded
# {0} = name of the class that cannot be loaded
FMT_ERR_CannotLoadClass3=Cannot load property editor class {0}.\nThe property cannot be loaded.

# formatting of message when a property editor instance cannot be created
# {0} = name of the class which cannot be instantiated
FMT_ERR_CannotCreateInstance2=Cannot create instance of property editor {0}.\n\
The property cannot be loaded.

# formatting of message when a string cannot be decoded as a primitive value
# {0} = decoded string
# {1) = target primitive type
FMT_ERR_CannotDecodePrimitive=Cannot decode \"{0}\" as {1}.\nThe property cannot be loaded.

# message when some error in reading property value occurs
MSG_ERR_CannotReadPropertyValue=Cannot read the property value.

# message when a property value is missing in the form file
MSG_ERR_MissingPropertyValue=Invalid format: the property value is missing.

# message when a loaded value cannot be set to property
MSG_ERR_CannotSetLoadedValue=Cannot set the loaded value to the property.

# formatting of message when trying to save to read only form file
# {0} = name of the form file
FMT_ERR_SaveToReadOnly=Internal error: tried to save to read-only file {0}.

# formatting of message when the form file for saving could not be locked
# {0} = name of the form file
FMT_ERR_CannotLockFormFile=Internal error: cannot obtain lock on file {0}.

# formatting of message when could not write the form file
# {0} = name of the form file
FMT_ERR_CannotWrtiteToFile=Cannot write to file {0}

# formatting of message when a value cannot be got from property to be saved
# {0} = name of the property
FMT_ERR_CannotGetPropertyValue=Cannot get the value of \"{0}\" property.\n\
The property cannot be saved.

# formatting of message when a property value cannot be saved
# {0} = name of the property
FMT_ERR_CannotSaveProperty=Cannot save the value of \"{0}\" property.

# formatting of message when a property value cannot be saved
# {0} = class name of property editor
FMT_ERR_CannotSaveProperty2=Cannot save property value using {0} property editor.

# formatting of message when a property value cannot be saved
# {0} = value type class name
FMT_ERR_CannotSaveProperty3=Cannot save property value of type {0}.

# formats for description labels of various loading errors
FMT_ERR_LoadingComponent=Error in loading component:\n{0}
FMT_ERR_LoadingComponentProperty=Error in loading component property:\n{0}
FMT_ERR_LoadingLayout=Error in loading layout:\n{0}
FMT_ERR_LoadingLayoutProperty=Error in loading container layout property:\n{0}
FMT_ERR_LoadingLayoutConstraints=Error in loading layout constraints:\n{0}
FMT_ERR_LoadingLayoutConstraintsProperty=Error in loading layout constraint property:\n{0}

# string used for layout when building a location description of location in
# the tree, e.g. [JFrame]->container1->[layout]->property1
CTL_PathLayout=[layout]

# string used for layout when building a location description of location in
# the tree, e.g. [JFrame]->component1->[layout constraints]->property1
CTL_PathLayoutConstraints=[layout constraints]

# string used as chain link when building a location description in the tree,
# e.g. [JFrame]->container1->component1
CTL_PathLink=->

# formatting of Error message when a layout initialization fails
# {0} = layout class name
FMT_ERR_LayoutInit=Failed to initialize layout {0}.\nThe layout cannot be set.

# formatting of error message when no LayoutSupport is found for layout
# {0} = layout class name
FMT_ERR_LayoutNotFound=No support class found for layout {0}.\nThe layout cannot be set.

# message when initialization of visual layout of loaded container failed
MSG_ERR_LayoutInitFailed2=Initialization of the container layout support failed.\n\
Just a limited basic support will be used.

# message when no layout support found for a container
MSG_ERR_NoLayoutSupportFound2=No layout support for the container was found.\n\
Just a limited basic support will be used.

# message shows restriction of usage of Borders
MSG_BorderNotApplicable=Cannot apply border. Borders can be used only with Swing JComponent subclasses.

# message shows restriction of usage of In-place text editing
MSG_ComponentNotShown=In-place text editing is available only for shown components.

# component instantiation error message
MSG_ERR_CannotInstantiate=The component cannot be instantiated. Please make sure it is a JavaBean.

# component instantiation error during copying
MSG_ERR_CannotCopyInstance=The bean instance of the component cannot be copied.

# message when trying to add (or copy) form class object to the same form
MSG_ERR_CannotAddForm=Form cannot be added to itself.

# Component Inspector Title
CTL_InspectorTitle=Inspector
ACS_ComponentTree=Component tree
ACSD_ComponentTree=N/A
HINT_ComponentInspector=Component Inspector

# formatting of component node display name
# {0} = name of the component (typically variable name)
# {1} = short name of component class (without package)
FMT_ComponentNodeName={0} [{1}]

# formatting of component node display name for a component without a name
# {0} = short name of component class (without package)
FMT_UnnamedComponentNodeName=[{0}]

# formatting of form root node display name
# {0} = name of the form (class name)
FMT_FormNodeName=Form {0}

# formatting of a message that is displayed in the status line during setting layout
# {0} = class name of the layout
# {1} = displayName of the container to set the layout on
FMT_MSG_SetLayout=Set {0} on {1}.

# formatting of a message that is displayed in the status line during setting layout
# when the layout cannot be set
# {0} = displayName of the container it is not possible to set the layout on
FMT_MSG_CannotSetLayout=Cannot set layout on {0}.

# formatting of a message that is displayed in the status line during setting border
# {0} = class name of the border
# {1} = displayName of the component to set the border on
FMT_MSG_SetBorder=Set {0} on {1}.

# formatting of a message that is displayed in the status line during setting border
# {0} = displayName of the component, the border cannot be set on
FMT_MSG_CannotSetBorder=Cannot set border on {0}.

# formatting of a message that is displayed in the status line during adding
# a new component to a container
# {1} = short class name (without package) of the component to add
# {2} = display name of the container to add the component to
FMT_MSG_AddComponent=Add {0} to {1}.

# formatting of a message that is displayed in the status line during adding
# a new component to "Other Components"
# {0} = short class name (without package) of the component to add
FMT_MSG_AddToOthers=Add {0} to Other Components.

# form designer resizing
# {0} = current designer width
# {1} = current designer height
FMT_HINT_DesignerResizing=[{0}, {1}] To change the designer size, drag or doubleclick the border.
CTL_SetDesignerSize_Title=Set Form Designer Size
CTL_SetDesignerSize_Label=&New Size (width, height):

# Events
MSG_CannotAttach=Cannot attach to the event handler.\n\
	The event handler is already used for an event of another type.
MSG_CannotRename=Cannot rename to an existing event handler.\n\
	To reattach, first remove the current handler and then attach to the existing one.

# The string event property value name when no event handler is attached to the event
CTL_NoEvent=<none>
FMT_MSG_HandlersFor=Handlers for {0}
FMT_MSG_InvalidJavaIdentifier={0} is not a Java identifier.

# Code Generation
# A code generated into a new event handler method
MSG_EventHandlerBody=// Add your handling code here:\n

CTL_LISTENER_ANONYMOUS_CLASSES=Anonymous Innerclasses
CTL_LISTENER_CEDL_INNERCLASS=One Innerclass
CTL_LISTENER_CEDL_MAINCLASS=Main Class

# Comments generated around generated variables declarations
MSG_VariablesBegin=// Variables declaration - do not modify
MSG_VariablesEnd=// End of variables declaration
MSG_EventDispatchCodeComment=// Code for dispatching events from components to event handlers.\n

VALUE_codeGen_generate=Generate Code
VALUE_codeGen_serialize=Serialize

MSG_JC_VariableName=Variable Name
MSG_JC_VariableDesc=The name of the global variable generated for this component.
MSG_JC_VariableModifiers=Variable Modifiers
MSG_JC_VariableModifiersDesc=The modifiers of the variable generated for this component.
MSG_JC_CodeGeneration=Code Generation
MSG_JC_CodeGenerationDesc=Type of code generation for this component.
MSG_JC_PreCreationCode=Pre-Creation Code
MSG_JC_PreCreationCodeDesc=Code included before creation of this component.
MSG_JC_PostCreationCode=Post-Creation Code
MSG_JC_PostCreationCodeDesc=Code included after creation of this component.
MSG_JC_PreInitCode=Pre-Init Code
MSG_JC_PreInitCodeDesc=Code included before initialization of this component.
MSG_JC_PostInitCode=Post-Init Code
MSG_JC_PostInitCodeDesc=Code included after initialization of this component.
MSG_JC_SerializeTo=Serialize To
MSG_JC_SerializeToDesc=The file into which this component is serialized.
MSG_JC_CustomCreationCode=Custom Creation Code
MSG_JC_CustomCreationCodeDesc=Custom code for creation of this component.
MSG_JC_UseLocalVar=Use Local Variable
MSG_JC_UseLocalVarDesc=If True, the variable is declared as local in initComponents().

HINT_VARIABLES_LOCAL=If True, variables for components are generated as local in initComponents().
PROP_VARIABLES_LOCAL=Local Variables

HINT_GENERATE_MNEMONICS=If True, special mnemonics code generation using org.openide.awt.Mnemonics will be enabled
HINT_GENERATE_MNEMONICS2=If True, the "text" property of buttons and labels is generated using org.openide.awt.Mnemonics
PROP_GENERATE_MNEMONICS=Generate Mnemonics Code
HINT_SHOW_MNEMONICS_DIALOG=If True, information dialog about Mnemonics feature is shown automatically when 'text' property is set
PROP_SHOW_MNEMONICS_DIALOG=Show Mnemonics Info Dialog

CTL_MNEMNICS_INFO_TITLE=Tip - Advanced Mnemonics Definition
MSG_MNEMONICS_INFO=You can define mnemonics of labels and buttons by using the '&' \
character inside the text property instead of setting the text and \
mnemonics properties separately. This allows precise mnemonics \
definition and easy internationalization. However, this feature \
requires the org.openide.awt.Mnemonics class, so you should turn it on \
only if you develop forms to be run within NetBeans IDE.
CTL_GENERATE_MNEMONICS=Use org.openide.awt.Mnemonics for mnemonics definition.
CTL_DONT_ADVERTISE_MNEMONICS=Don't show this dialog again.
MSG_MNEMONICS_INFO2=You can later turn this option on or off. Choose Tools | Options. \
Expand the Editing node, and select Form Editor Settings. Then change \
the Generate Mnemonics Code property.

# ParametersPicker, PropertyPicker, MethodPicker
# {0} = required type (short class name)
CTL_FMT_CW_SelectMethod=Select Method ({0})
# {0} = required type (short class name)
CTL_FMT_CW_SelectProperty=Select Property ({0})

CTL_CW_Component=Component:
CTL_CW_Component_Mnemonic=C
ACSD_CTL_CW_Component=N/A
CTL_CW_NotSet=<not set>
CTL_CW_Code=<code>
CTL_CW_GetParametersFrom=Get Parameter From:
CTL_CW_Value=Value:
CTL_CW_Value_Mnemonic=V
ACSD_CTL_CW_Value=N/A
CTL_CW_Bean=Bean:
CTL_CW_Bean_Mnemonic=n
ACSD_CTL_CW_Bean=N/A
CTL_CW_Property=Property:
CTL_CW_Property_Mnemonic=P
ACSD_CTL_CW_Property=N/A
CTL_CW_NoProperty=<No Property Selected>
CTL_CW_Method=Method Call:
CTL_CW_Method_Mnemonic=t
CTL_CW_MethodCall=Method Call
ACSD_CTL_CW_Method=N/A
CTL_CW_NoMethod=<No Method Selected>
CTL_CW_UserCode=User Code:
CTL_CW_UserCode_Mnemonic=s
ACSD_CTL_CW_UserCode=N/A
CTL_CW_SelectBean=<Select Bean>
CTL_CW_MethodList=Methods
CTL_CW_MethodList_Mnemonic=M
ACSD_CTL_CW_MethodList=N/A
CTL_CW_PropertyList=Properties
CTL_CW_PropertyList_Mnemonic=P
ACSD_CTL_CW_PropertyList=N/A
ACSD_ParametersPicker=N/A
ACSD_PropertyPicker=N/A
ACSD_MethodPicker=N/A

ACSD_CTL_CW_ValueField=N/A
ACSD_CTL_CW_BeanCombo=N/A
ACSD_CTL_CW_PropertyLabel=N/A
ACSD_CTL_CW_MethodLabel=N/A
ACSD_CTL_CW_UserCodeArea=N/A

ACSD_CTL_CW_PropertyButton=N/A
ACSD_CTL_CW_MethodButton=N/A

#ParametersPicker - nothing was entered
ERR_NothingEntered=No valid value was entered.

# formatting of a message that is displayed in the status line when finishing connection
MSG_RewritingEvent=\
	The selected event already has the selected event handler attached.\n\
	If you click OK, the code in this event handler will be replaced\n\
	with the code generated by the Wizard.

# RADConnectionPropertyEditor
CTL_RADConn_DisplayName=Form Connection

# text displayed when connection is not valid (e.g. component removed)
CTL_CONNECTION_INVALID=<Invalid Connection>

# Formatting of display value for connection to property
# {0} = name of the component to obtain the property from
# {1} = name of the property
FMT_PROPERTY_CONN=<{0}.{1}>

# Formatting of display value for connection to bean
# {0} = name of the component to obtain the property from
FMT_BEAN_CONN=<{0}>

# Formatting of display value for connection to property
# {0} = name of the component to call the method on
# {1} = name of the method
FMT_METHOD_CONN=<{0}.{1}>

# Formatting of display value for connection to value
# {0} = the value string
FMT_VALUE_CONN=<Value: {0}>

# display value for connection to custom code
CTL_CODE_CONN=<User Code>

# property value of array type is displayed as Array of ...
CTL_ArrayOf=Array of

# default names of adding MenuItems during menu editing.
FMT_LAB_MenuItem=Item
FMT_LAB_CheckboxMenuItem=CheckBox
FMT_LAB_Menu=Menu
FMT_LAB_PopupMenu=PopupMenu
FMT_LAB_JMenuItem=Item
FMT_LAB_JCheckBoxMenuItem=CheckBox
FMT_LAB_JMenu=Menu
FMT_LAB_JRadioButtonMenuItem=RadioButton

#ComponentChooserEditor
CTL_NoComponent=<none>
CTL_InvalidReference=<Invalid Reference>

#EventCustomEditor
CTL_EE_ADD=Add...
CTL_EE_ADD_Mnemonic=A
CTL_EE_REMOVE=Remove
CTL_EE_REMOVE_Mnemonic=R
CTL_EE_RENAME=Rename...
CTL_EE_RENAME_Mnemonic=n
CTL_EE_RENAME_CAPTION=Rename Handler
CTL_EE_RENAME_LABEL=&New name for handler:
CTL_EE_NOT_IDENTIFIER=The handler name is not a valid Java identifier.
CTL_EE_ALREADY_EXIST=Event handler of this name is already included.
CTL_EE_ADD_CAPTION=Add Handler
CTL_EE_ADD_LABEL=&New Handler Name:
CTL_EE_Handlers=Handlers
CTL_EE_Handlers_Mnemonic=d
ACSD_CTL_EE_Handlers=N/A
ACSD_CTL_EE_ADD=N/A
ACSD_CTL_EE_REMOVE=N/A
ACSD_CTL_EE_RENAME=N/A
ACSD_EventCustomEditor=N/A

#Method Picker
CTL_Component=Component:

MSG_FormSizePolicy=Form Size Policy
HINT_FormSizePolicy=Sets the policy for the generation of resize code.
MSG_FormSize=Form Size
HINT_FormSize=Sets the initial size of the form.
MSG_FormPosition=Form Position
HINT_FormPosition=Sets the screen position where the form opens.
MSG_GeneratePosition=Generate Position
HINT_GeneratePosition=If True, generates code that positions the form as specified by the Form Position property.
MSG_GenerateSize=Generate Size
HINT_GenerateSize=If True, generates code that sets the size of the form as specified by the Form Size property.
MSG_GenerateCenter=Generate Center
HINT_GenerateCenter=If True, generates code that positions the form at the center of the screen.
MSG_DesignerSize=Designer Size
HINT_DesignerSize=The size of the active form designer area.

# names of property values for Size Policy property
VALUE_sizepolicy_pack=Generate pack()
VALUE_sizepolicy_full=Generate Resize Code
VALUE_sizepolicy_none=No Resize Code

#Form Custom Editor
CTL_PropertyEditorDoesNot=Custom Editing of this Property is not Supported
# {0} = name of the property for which the initialization code is edited
FMT_CTL_AdvancedInitializationCode={0} - Advanced Initialization Code
LAB_SelectMode=Select Mode:
LAB_SelectMode.mnemonic=M
ACSD_BTN_SelectMode=N/A
# {0} = description of selected custom editor
ACSD_FormCustomEditor=Description of selected mode: {0}
# Advanced button label used in Form Custom property editor
CTL_Advanced=Advanced...
CTL_Advanced_mnemonic=A
ACSD_CTL_Advanced=N/A
ACSD_FormCustomEditorAdvanced=N/A

CTL_GeneratePostInitializationCode=Generate Post-initialization Code
CTL_GeneratePostInitializationCode_Mnemonic=s
CTL_GeneratePreInitializationCode=Generate Pre-initialization Code
CTL_GeneratePreInitializationCode_Mnemonic=r
ACSD_CTL_GeneratePostInitializationCode=N/A
ACSD_CTL_GeneratePreInitializationCode=N/A
ACSD_CTL_GeneratePostInitializationCodeArea=N/A
ACSD_CTL_GeneratePreInitializationCodeArea=N/A
