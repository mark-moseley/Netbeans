#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#

# ResourceBundle properties file for model messages
# key consists of: <subpackage>.<category>.<description>
# <subpackage> - is optional, package under model
# <category> - relationships, all elements, etc.
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# This file contains overrides for the messages defined in the 
# "<Validation messages>" section of file
# model/src/com/sun/jdo/api/persistence/model/Bundle.properties.
# which lives in the appserver code, so this may not be moved to 
# another package
#
# The message ID for a given key in this file should be identical to the 
# message ID for the corresponding key in the above file. No new messages
# should be added to this file without first defining them in the above
# file -- only overrides should be added to this file.
#
# Due to sub sections in the validation section, the order may not be sequential.
#

# Validation messages for beans
# Validation message for class not found
# {0}=class name
util.validation.class_not_found=JDO72300: This error (Cannot find the class {0}) should \
not occur.\nPlease contact support and file a bug.  You can restart the IDE \
to try to recover from this error.
# Validation message for related class not found
# {0}=class name
# {1}=field name
util.validation.class_not_found_related=JDO72301: This error (Cannot find the related \
class {0} for the field {1}) should not occur.\nPlease contact support and \
file a bug.  You can restart the IDE to try to recover from this error.
# Validation message for bean not a CMP bean
# {0}=bean name
util.validation.class_not_persistence_capable=JDO72302: The bean {0} is not \
a valid CMP bean.\nCorrect the bean to be a valid CMP bean.
# Validation message for related bean not a CMP bean
# {0}=bean name
# {1}=field name
util.validation.class_not_persistence_capable_related=JDO72303: The related bean {0} \
for the field {1} is not a valid CMP bean.\nCorrect the bean to be a valid \
CMP bean.
# Validation message for class not allowed to be persistence-capable
# {0}=class name
util.validation.class_not_allowed=JDO72304: This error (The class {0} is not allowed to \
be a persistence-capable) should not occur.\nPlease contact support and file \
a bug.  You can restart the IDE to try to recover from this error.
# Validation message for related class not allowed to be persistence-capable
# {0}=class name
# {1}=field name
util.validation.class_not_allowed_related=JDO72305: This error (The related class {0} \
for the field {1} is not allowed to be persistence-capable) should not occur.\n\
Please contact support and file a bug.  You can restart the IDE to try to \
recover from this error.
# Validation message for a missing definition of readObject
# {0}=pc class name
util.validation.class_readobject=JDO72306: This error (The class {0} implements \
java.io.Serializable so it must also define the method readObject) should not \
occur.\nPlease contact support and file a bug.  You can restart the IDE to try \
to recover from this error.
# Validation message for a missing definition of writeObject
# {0}=pc class name
util.validation.class_writeobject=JDO72307: This error (The class {0} implements \
java.io.Serializable so it must also define the method writeObject) should not \
occur.\nPlease contact support and file a bug.  You can restart the IDE to try \
to recover from this error.
# Validation message for bean which has no CMP fields
# {0}=bean name
util.validation.class_no_fields=JDO72308: The bean {0} must have at least one \
CMP field.\nAdd a CMP field to the bean.
# Validation message for bean which is not mapped
# {0}=bean name
util.validation.class_not_mapped=JDO72309: The bean {0} is not mapped.\n\
Set the primary table for the bean.
# Validation message for a bean missing key column mappings
# {0}=bean name
# {1}=table name
# {2}=list of column names
util.validation.class_key_column_missing=JDO72310: All primary key columns in primary \
table {1} of bean {0} must be mapped to key fields.\nMap the following \
primary key columns to key fields: {2}.  If you already have fields mapped to \
these columns, verify that they are key fields.

# Validation messages for fields
# Validation message for field not found
# {0}=field name
util.validation.field_not_found=JDO72311: The field {0} was specified as a CMP field, \
but it is not in the .java file.\nAdd the field to the .java file and make \
sure it is a CMP field.
# Validation message for field not allowed to be a CMP field
# {0}=field name
util.validation.field_persistent_not_allowed=JDO72312: The field {0} is not allowed to \
be a CMP field.\nCorrect the field properties.
# Validation message for field inconsistent (whether field or relationship)
# {0}=field name
util.validation.field_type_inconsistent=JDO72313: The field {0} is inconsistent.\n\
Remove and then re-add the CMP field.
# Validation message for field inconsistent (missing in one of the models)
# {0}=field name
util.validation.field_model_inconsistent=JDO72314: The field {0} is inconsistent.\n\
Make sure the field is a CMP field.
# Validation message for field not allowed to be relationship
# {0}=field name
util.validation.field_relationship_not_allowed=JDO72315: The field {0} is not allowed \
to be a CMR.\nChange the field''s type to be a wrapper or primitive \
type.\nIf the type is correct, remove and then re-add the CMP field.
# Validation message for field must be relationship
# {0}=field name
util.validation.field_type_not_allowed=JDO72316: The field {0} must be a relationship.\n\
Change the field''s type to be a collection or other CMP bean.\
\nIf the type is correct, remove and then re-add the CMP field.
# Validation message for managed (multiple fields to same column) field which
# has a default fetch group
# {0}=field name
util.validation.field_fetch_group_invalid=JDO72317: The field {0} has an invalid fetch \
group.  Default is not a valid fetch group for managed fields.  If your field \
is not a managed field, it may be treated as one if you have a CMR to this \
bean which is mapped to the same column as {0}.\nSelect a different fetch group.
# Validation message for key field which is mapped to a blob or clob column
# {0}=field name
util.validation.field_key_field_not_allowed=JDO72319: The field {0} is not allowed to be \
a key field since its mapping contains a large object (e.g. BLOB/CLOB) \
column.\nUpdate the column mapping or change this field so that it is not a \
primary key field.
# Validation message for invalid combination of upper and lower bounds
# {0}=(relationship) field name
util.validation.cardinality_invalid=JDO72322: This error (The field {0} does not have \
valid upper and lower bounds) should not occur.\nPlease contact support and \
file a bug.  You can restart the IDE to try to recover from this error.
# Validation message for a relationship field with lower bound 0 mapped to 
# at least one non-nullable column
# {0}=(relationship) field name
util.validation.lower_bound_invalid=JDO72323: This error (The field {0} does not have \
a valid lower bound) should not occur.\nPlease contact support and file a \
bug.  You can restart the IDE to try to recover from this error.
# Validation message for invalid collection class
# {0}=(relationship) field name
# NOTE: This commented out version should be used after we expose collection
# class to the user
# util.validation.collection_class_invalid=JDO72324: The field {0} has an invalid \
# collection class.\nUpdate the relationship''s collection class.
util.validation.collection_class_invalid=JDO72324: The field {0} has an invalid \
collection class.\nUpdate the relationship''s type to be a set or generic \
collection, or remove the CMR.
# Validation message for missing element class
# {0}=(relationship) field name
util.validation.element_class_not_found=JDO72325: The field {0} does not have a related \
bean set, but it is mapped to columns.\nUpdate the related bean or unmap the \
relationship.
# Validation message for inverse field which is only set on one side
# {0}=(relationship) field name
# {1}=inverse field name
util.validation.inverse_field_invalid=JDO72326: The field {0} has an invalid related \
field {1}.  Related fields must be set for both relationship fields.\n\
Open the "Edit EJB Relation" dialog from the Relation node in the Explorer and \
make sure the CMR field is set on both sides of the relation.
# Validation message for inverse field which does not exist in the related bean
# {0}=(relationship) field name
# {1}=inverse field name
# {2}=related bean name
util.validation.related_class_mismatch=JDO72327: The field {0} has a related field {1} \
which does not exist in the related bean {2}.\nUpdate the related bean and \
update the CMR field name if necessary.
# Validation message for inverse field set and no related bean set
# {0}=(relationship) field name
# {1}=inverse field name
util.validation.related_class_not_found=JDO72328: The field {0} does not have a related \
bean set, but it has related field {1}.\nUpdate the related bean or set the \
CMR field name to None.

# Validation messages for database elements
# Validation message for schema not found
# {0}=schema name
# {1}=bean name
util.validation.schema_not_found=JDO72331: Cannot find the schema {0} for the bean {1}.\
\nRestore the schema file.
# Validation message for related schema not found
# {0}=schema name
# {1}=related bean name
# {2}=field name
util.validation.schema_not_found_related=JDO72332: Cannot find the schema {0} for the \
related bean {1} of the field {2}.\nRestore the schema file.
# Validation message for schema not set but primary table set
# {0}=bean name
util.validation.schema_not_set=JDO72333: The bean {0} does not have a schema set, but \
it is mapped to tables.\nUpdate the mapped schema property for the bean or \
unmap the primary table.
# Validation message for schemas don't match
# {0}=bean name
# {1}=related bean name
# {2}=field name
util.validation.schema_mismatch=JDO72334: The schemas for bean {0} and its related \
bean {1} of the field {2} must match.\nUpdate the mapped schema property of \
one of the beans.
# Validation message for primary table which has no primary key
# {0}=table name
# {1}=bean name
util.validation.table_no_primarykey=JDO72335: If the table {0} for bean {1} is mapped \
as the primary table, it must have a primary key.\nChoose a different primary \
table or verify that the contents of the schema file are correct.
# Validation message for table not found
# {0}=table name
# {1}=bean name
util.validation.table_not_found=JDO72336: Cannot find the table {0} for the bean {1}.\n\
Verify that the schema file exists and that its contents are correct.
# Validation message for related table not found
# {0}=table name
# {1}=field name
util.validation.table_not_found_related=JDO72337: Cannot find the table {0} for the \
related bean of the field {1}.\nVerify that the schema file exists and that \
its contents are correct.
# Validation message for tables don't match
# {0}=column name
# {1}=field name
# {2}=bean name
util.validation.table_mismatch=JDO72355:Relationship {1} is mapped to column \
{0} which is not one of the mapped primary or secondary tables for \
bean {2}. \nUpdate the table mapping or the relationship mapping.
# Validation message for related tables don't match
# {0}=column name
# {1}=field name
# {2}=related bean name
util.validation.table_mismatch_related=JDO72338:Relationship {1} is mapped \
to column {0} which is not one of the mapped primary or secondary tables \
for related bean {2}.\nUpdate the table mapping or the relationship mapping.
# Validation message for column in reference key pair not found
# {0}=column pair name
# {1}=bean name
util.validation.column_not_found=JDO72339: Cannot find the columns in reference key \
pair {0} for the secondary table setup of the bean {1}.\nVerify that the \
schema file exists and that its contents are correct.
# Validation message for related column not found
# {0}=column name
# {1}=field name
# {2}=related bean name
util.validation.column_not_found_related=JDO72340: Cannot find the column {0} for \
mapping the field {1} in the bean {2}.\nVerify that the schema file exists \
and that its contents are correct.
# Validation message for invalid column pair (in relationship setup)
# {0}=column name
# {1}=field name
# {2}=related bean name
util.validation.column_invalid=JDO72341: Cannot find the columns in key pair {0} for the \
relationship {1} in bean {2}.\nVerify that the schema file exists and that \
its contents are correct.

# Validation messages for key class elements

# Validation message for key class name not set
# {0}=pc class name
util.validation.key_class_unset=JDO72343: This error (The key class property for class \
{0} is not set) should not occur.\nPlease contact support and file a bug.  \
You can restart the IDE to try to recover from this error.
# Validation message for key class missing
# {0}=key class name
# {1}=pc class name
util.validation.key_class_missing=JDO72344: This error (The key class {0} for class {1} \
does not exist) should not occur.\nPlease contact support and file a bug.  \
You can restart the IDE to try to recover from this error.
# Validation message for key class must be public
# {0}=key class name
# {1}=pc class name
util.validation.key_class_public=JDO72345: This error (The key class {0} for class {1} \
must be public) should not occur.\nPlease contact support and file a bug.  \
You can restart the IDE to try to recover from this error.
# Validation message for key class must implement Serializable
# {0}=key class name
# {1}=pc class name
util.validation.key_class_serializable=JDO72346: This error (The key class {0} for class \
{1} must implement java.io.Serializable) should not occur.\nPlease contact \
support and file a bug.  You can restart the IDE to try to recover from this \
error.
# Validation message for inner key class must be static 
# {0}=key class name
# {1}=pc class name
util.validation.key_class_static=JDO72347: This error (If the key class {0} for class \
{1} is defined as inner class, it must be static) should not occur.\nPlease \
contact support and file a bug.  You can restart the IDE to try to recover \
from this error.
# Validation message for key class field must have the same type as the pc class key field
# {0}=key class field name
# {1}=key class name
# {2}=pc class name
util.validation.key_field_type_mismatch=JDO72350: This error (The field {0} of the key \
class {1} must have the same type as the corresponding field in the \
persistence-capable {2}) should not occur.\nPlease contact support and file a \
bug.  You can restart the IDE to try to recover from this error.
# Validation message for a missing key field in the key class
# {0}=pc class name
# {1}=key class name
# {2}=list of field names
util.validation.key_field_missing=JDO72351: This error (All key fields of class {0} must \
be present in the key class {1}.\nAdd the following key fields to the key \
class: {2}) should not occur.  Please contact support and file a bug.  You can \
restart the IDE to try to recover from this error.
# Validation message for a missing key class constructor
# {0}=key class name
# {1}=pc class name
util.validation.key_class_constructor=JDO72352: This error (The key class {0} for class \
{1} must define a public constructor) should not occur.\nPlease contact \
support and file a bug.  You can restart the IDE to try to recover from this \
error.
# Validation message for a missing equals redefinition
# {0}=key class name
# {1}=pc class name
util.validation.key_class_equals=JDO72353: This error (The key class {0} for class {1} \
must override the equals method from java.lang.Object) should not occur.\n\
Please contact support and file a bug.  You can restart the IDE to try to \
recover from this error.
# Validation message for a missing hashCode redefinition
# {0}=key class name
# {1}=pc class name
util.validation.key_class_hashcode=JDO72354: This error (The key class {0} for class {1} \
must override the hashCode method from java.lang.Object) should not occur.\n\
Please contact support and file a bug.  You can restart the IDE to try to \
recover from this error.

# Validation messages for version field elements

# Validation message for missing or too many version fields
# {0}=bean name
util.validation.version_field_cardinality=JDO72356:The bean {0} must have \
exactly one version field.\nSet the version field property to an existing field.
# Validation message for version field mapped to a non-primary table column
# {0}=column name
# {1}=field name
# {2}=bean name
util.validation.version_field_table_mismatch=JDO72362:The version field {1} is \
mapped to column {0} which is not in the primary table for bean {2}.\n\
Update the column mapping or choose a different version field.
# Validation message for version field mapped to a nullable or 
# non-numeric column
# {0}=column name
# {1}=field name
# {2}=bean name
util.validation.version_field_column_type_invalid=JDO72363:The version field \
{1} in bean {2} is mapped to column {0} which may not be nullable or \
non-numeric.\n\
Update the schema or choose a different version field.
# Validation message for version field mapped to a primary key column
# {0}=column name
# {1}=field name
# {2}=bean name
util.validation.version_field_column_pk_invalid=JDO72364:The version field {1} \
in bean {2} is mapped to column {0} which may not be part of the primary key.\n\
Update the schema or choose a different version field.
# Validation message for version field mapped to a foreign key column
# {0}=column name
# {1}=field name
# {2}=bean name
util.validation.version_field_column_fk_invalid=JDO72364:The version field {1} \
in bean {2} is mapped to column {0} which may not be part of a foreign key.\n\
Update the schema or choose a different version field.
