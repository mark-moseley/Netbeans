<?xml version="1.0"?>
<!--
 The contents of this file are subject to the terms of the Common Development
 and Distribution License (the License). You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 or http://www.netbeans.org/cddl.txt.
 
 When distributing Covered Code, include this CDDL Header Notice in each file
 and include the License file at http://www.netbeans.org/cddl.txt.
 If applicable, add the following below the CDDL Header, with the fields
 enclosed by brackets [] replaced by your own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 The Original Software is NetBeans. The Initial Developer of the Original
 Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 Microsystems, Inc. All Rights Reserved.
-->

<project name="Mobility Pack performance tests" basedir="." default="all">

    <!-- Root folders -->
    <property name="nball.dir" location="../../.."/>
    <property name="nbextra.dir" location="../../../../nbextra"/>

    <!-- Import defaults for QA-functional tests -->
    <import file="${nball.dir}/nbbuild/templates/xtest-qa-functional.xml"/>
    
    <!-- Imports defaults for Performance testing. -->
    <import file="${nball.dir}/performance/performancetestutilities/dist/build-performance-tests.xml"/>

    <!-- Custom properties -->
    <property name="xtest.tmpdir.createproject" location="${xtest.tmpdir}/createdProjects"/>


    <!-- ==================== -->
    <!-- Setting command line -->
    <!-- ==================== -->
    <!-- Command line is created from this property and xtest.perf.commandline.suffix which can be set from command line of xtest -->
    <property name="ide.commandline.suffix" value="-J-Dorg.netbeans.performance.repeat=4 -J-Dorg.netbeans.performance.memory.usage.log=true"/>

    
    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->

    <target name="qa-functional-compiler" depends="init, init-cp, build-performance">
        <buildTests srcdir="qa-functional/src" compileexcludes="**/data/**">
            <classpath>
                <path refid="test.qa-functional.compile.cp"/>
           </classpath>
        </buildTests>
    </target>

    <target name="check-perf-classes">
        <available file="../../../performance/build/test/qa-functional/classes" property="perf.classes.exist" type="dir"/>
    </target>
    
    <target name="build-performance" unless="perf.classes.exist" depends="check-perf-classes">
	<java classname="org.apache.tools.ant.Main" dir="../../../performance/test" failonerror="true" fork="true">
          <jvmarg value="-Dant.home=${ant.home}"/>
          <arg value="buildtests"/>
          <arg value="-Dxtest.testtype=qa-functional"/>
          <arg value="-Dxtest.attribs=all"/>
          <arg value="-Dxtest.home=${xtest.home}"/>
          <arg value="-Dnetbeans.dest.dir=${netbeans.dest.dir}"/>
	  <classpath path="${java.class.path}"/>
        </java>
          
	<mkdir dir="lib"/> 
	<jar jarfile="lib/util.jar"
	     basedir="../../../performance/build/test/qa-functional/classes"
	     includes="**/*.class"/>
    </target>
        
    
    <!-- ================ -->
    <!-- Global Executors -->
    <!-- ================ -->
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <!-- This target executes tests inside IDE -->
    <target name="runidesetup" depends="init-cp, copy_unzip_mp_projects, prepare-wtk">
        <antcall target="copy_released_ide_cfg_file"/>

        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.timeout" value="2400000" />
            
            <!-- Opens project at specified location -->
            <property name="xtest.ide.open.project" location="${xtest.tmpdir}/MobileApplicationVisualMIDlet"/>
        </executeTests>

        <!-- save copy of current Userdir -->
        <copy todir="${xtest.workdir}/sys/ide_backup">
            <fileset dir="${xtest.workdir}/sys/ide"/>
        </copy>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>

    
    <target name="runidetest" depends="init-cp, prepare-wtk, ide_command_line_suffix">
        <delete dir="${xtest.workdir}/sys/ide"/>
        <copy todir="${xtest.workdir}/sys/ide">
            <fileset dir="${xtest.workdir}/sys/ide_backup"/>
        </copy>
        
        <mkdir dir="${xtest.tmpdir.createproject}"/>
        
        <antcall target="copy_released_ide_cfg_file"/>
       
        <!-- copy xsl transformator file for ActionTracker log into appropriate directory -->
        <copy file="${performance.testutilities.dist.dir}/ActionTracker.xsl" todir="${xtest.results.testrun.dir}" />
        
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.enable.assertions" value="false" /> 
            <property name="xtest.ide.reuse.userdir" value="true" />
            <property name="xtest.timeout" value="3600000" />
        </executeTests>
        
        <delete dir="${xtest.tmpdir.createproject}"/>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    
    <target name="runidetest_scan" depends="init-cp, prepare-wtk, copy_unzip_mp_projects">
        <antcall target="copy_released_ide_cfg_file"/>
       
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.ide.commandline.suffix" value="-J-Dperf.refactoring.test=true"/>

            <property name="xtest.enable.assertions" value="false" />
            <property name="xtest.timeout" value="1200000" />
        </executeTests>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    
    <target name="runidetest_footprint" depends="init-cp, prepare_measure_footprint, copy_unzip_mp_projects, ide_command_line_suffix, prepare-wtk">
        <antcall target="copy_released_ide_cfg_file"/>
        
        <!-- Opens project at specified location -->
        <!-- open this project in test run - because not all tests are supposed to have MobileApplicationVisualMIDlet opened
        <property name="xtest.ide.open.project" location="${xtest.tmpdir}/MobileApplicationVisualMIDlet"/> -->
        
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.ide.commandline.suffix" value="-J-Dorg.netbeans.performance.memory.repeat=1 -J-Dorg.netbeans.performance.memory.usage.log=true"/>
            <property name="xtest.enable.assertions" value="false" /> 
            <property name="xtest.timeout" value="2400000" />
        </executeTests>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    <!-- ========= -->
    <!-- Utils     -->
    <!-- ========= -->
    
    <!-- Copy and unzip project MobilityProject from close source path, will be used for Performance tests -->
    <target name="copy_unzip_mp_projects">
<!--        <unzip src="${nbextra.dir}/qa/projectized/MobileApplicationSwitchConfiguration.zip" dest="${xtest.tmpdir}/"/>-->
        <unzip src="${nbextra.dir}/qa/projectized/MobileApplicationVisualMIDlet.zip" dest="${xtest.tmpdir}/"/>
    </target>
    
    <!-- ============= -->
    <!-- Work with WTK -->
    <!-- ============= -->

    <target name="set-wtk-path" unless="wtk.zipfile.name">
        <condition property="wtk.zipfile.name" value="wtk22_win.zip">
            <os family="windows"/>
        </condition>
        <condition property="wtk.zipfile.name" value="wtk22_linux.zip">
            <os family="unix" name="linux"/>
        </condition>
    </target>
    
    <target name="prepare-wtk" depends="set-wtk-path">
        <fail unless="wtk.zipfile.name" message="Not supported platform."/>
        
        <property name="emulators.mobility" value="${netbeans.dest.dir}/mobility8/emulators-inst"/>
        <mkdir dir="${emulators.mobility}"/>
        <copy file="${nbextra.dir}/qa/performance/mobility/${wtk.zipfile.name}" todir="${emulators.mobility}"/>
    </target>
    
</project>
