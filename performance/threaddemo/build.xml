<?xml version="1.0" encoding="UTF-8"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
Microsystems, Inc. All Rights Reserved.
-->
<project basedir="." default="run" name="performance/threaddemo"
         xmlns="antlib:org.apache.tools.ant"
         xmlns:nbj="antlib:org.netbeans.modules.debugger.jpda.ant"
         xmlns:nbb="antlib:org.netbeans.modules.ant.browsetask">

    <!-- Put any overrides here (check against build.properties): -->
    <property file="user.build.properties"/>
    
    <!-- Main definitions: -->
    <property file="build.properties"/>

    <target name="init">
        <!-- For benefit of various modules: -->
        <property name="build.compiler.debug" value="true"/>
        <condition property="openide.available">
            <available file="${util.jar}"/>
        </condition>
        <condition property="looks.and.registry.available">
            <and>
                <available file="${looks.jar}"/>
                <available file="${registry.jar}"/>
            </and>
        </condition>
        <condition property="should.build.openide">
            <and>
                <not>
                    <isset property="openide.available"/>
                </not>
                <!-- Building openide/looks will build openide automatically: -->
                <isset property="looks.and.registry.available"/>
            </and>
        </condition>
    </target>
    
    <target name="build-openide" depends="init" if="should.build.openide">
        <ant dir="${nbbuild}" target="all-openide"/>
    </target>
    
    <target name="build-looks" depends="init" unless="looks.and.registry.available">
        <ant dir="${nbbuild}" target="all-openide/looks"/>
    </target>
    
    <target name="compile" depends="build-openide,build-looks">
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="src" destdir="${build.classes.dir}" debug="true" deprecation="true" source="1.4">
            <classpath path="${build.cp}"/>
        </javac>
        <copy todir="${build.classes.dir}">
            <fileset dir="src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
                <exclude name="**/doc-files/"/>
            </fileset>
        </copy>
    </target>

    <target name="build" depends="compile">
        <jar jarfile="${threaddemo.jar}" manifest="manifest.mf" compress="false">
            <fileset dir="${build.classes.dir}"/>
        </jar>
    </target>
    
    <target name="build-complete" depends="compile">
        <jar jarfile="${threaddemo-complete.jar}" manifest="manifest.mf" compress="true">
            <fileset dir="src"/>
            <fileset dir="${build.classes.dir}"/>
            <zipfileset src="${util.jar}"/>
            <zipfileset src="${nodes.jar}"/>
            <zipfileset src="${actions.jar}"/>
            <zipfileset src="${explorer.jar}"/>
            <zipfileset src="${text.jar}"/>
            <zipfileset src="${dialogs.jar}"/>
            <zipfileset src="${windows.jar}"/>
            <zipfileset src="${looks.jar}"/>
            <zipfileset src="${Spin.jar}"/>
            <zipfileset src="${xerces.jar}"/>
            <zipfileset src="${dom-ranges.jar}"/>
        </jar>
    </target>

    <target name="run" depends="build">
        <available property="xerces.classes" classname="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" classpath="${run.cp}"/>
        <fail unless="xerces.classes">Could not find Xerces in ${run.cp}</fail>
        <java classname="threaddemo.Main" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
            <arg file="${testdir}"/>
            <jvmarg value="-Xmx256m"/>
            <jvmarg value="-ea"/>
            <sysproperty key="java.util.logging.config.file" file="${logging.properties}"/>
        </java>
    </target>
    
    <target name="debug" depends="build,do-debug"/>
    
    <target name="do-debug">
        <java classname="threaddemo.Main" fork="true" failonerror="true">
            <classpath path="${run.cp}"/>
            <arg file="${testdir}"/>
            <jvmarg value="-Xmx64m"/>
            <jvmarg value="-ea"/>
            <sysproperty key="java.util.logging.config.file" file="logging.properties"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address},suspend=n"/>
        </java>
    </target>
    
    <target name="debug-nb" depends="build">
        <nbj:nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="threaddemo">
            <nbj:classpath path="${run.cp}"/>
        </nbj:nbjpdastart>
        <antcall target="do-debug"/>
    </target>
    
    <target name="debug-fix-nb">
        <javac srcdir="src" destdir="${build.classes.dir}" debug="true" deprecation="true" source="1.4">
            <classpath path="${build.cp}"/>
            <include name="${fix.file}.java"/>
        </javac>
        <nbjpdareload>
            <fileset dir="${build.classes.dir}">
                <include name="${fix.file}.class"/>
            </fileset>
        </nbjpdareload>
    </target>
    
    <target name="optit" depends="build">
        <java classname="intuitive.audit.Audit" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${run.cp}"/>
                <pathelement location="${optit}/lib/optit.jar"/>
            </classpath>
            <arg value="-startCPUprofiler:type=sampler,samplingPeriod=1,onlyCPU=true"/>
            <arg value="threaddemo.Main"/>
            <arg file="${testdir}"/>
            <jvmarg value="-Xmx64m"/>
            <!--<jvmarg value="-ea"/>-->
            <sysproperty key="OPTITDIR" file="${optit}"/>
            <env key="LD_LIBRARY_PATH" path="${optit}/lib"/>
            <jvmarg value="-Xbootclasspath/a:${optit}/lib/oibcp.jar"/>
            <jvmarg value="-Xboundthreads"/>
            <jvmarg value="-Xrunpri"/>
        </java>
    </target>
    
    <target name="javadoc">
        <property name="javadoc.docs.jdk" value="http://java.sun.com/j2se/1.4.2/docs/api"/>
        <property name="javadoc.web.root" value="http://www.netbeans.org/download/dev/javadoc"/>
        <property name="javadoc.docs.openide" value="${javadoc.web.root}/OpenAPIs"/>
        <property name="javadoc.docs.openide/looks" value="${javadoc.web.root}/LooksAPI"/>
        <mkdir dir="${build.javadoc.dir}"/>
        <javadoc destdir="${build.javadoc.dir}" source="1.4">
            <classpath path="${build.cp}"/>
            <sourcepath>
                <pathelement location="src"/>
            </sourcepath>
            <fileset dir="src"/>
            <link href="${javadoc.docs.jdk}" offline="true" packagelistloc="${nbroot}/openide/api/doc"/>
            <link href="${javadoc.docs.openide}" offline="true" packagelistloc="${nbroot}/openide/javadoc/OpenAPIs"/>
            <link href="${javadoc.docs.openide/looks}" offline="true" packagelistloc="${nbroot}/openide/looks/javadoc/LooksAPI"/>
        </javadoc>
    </target>
    
    <target name="javadoc-nb" depends="javadoc">
        <nbb:nbbrowse file="${build.javadoc.dir}/overview-summary.html"/>
    </target>
    
    <target name="test-build" depends="build">
        <ant dir="${nbroot}/junit/external"/>
        <mkdir dir="${build.test.classes.dir}"/>
        <javac srcdir="test" destdir="${build.test.classes.dir}" debug="true" deprecation="true">
            <classpath path="${test.build.cp}"/>
        </javac>
        <!-- copy resources if it becomes necessary -->
    </target>
    
    <target name="test" depends="test-build">
        <mkdir dir="${build.test.results.dir}"/>
        <junit printsummary="withOutAndErr" failureproperty="test.failed" showoutput="true" fork="true">
            <batchtest todir="${build.test.results.dir}">
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath path="${test.run.cp}"/>
            <formatter type="xml"/>
        </junit>
        <junitreport todir="${build.test.results.dir}">
            <fileset dir="${build.test.results.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="noframes" todir="${build.test.results.dir}"/>
        </junitreport>
    </target>
    
    <target name="test-nb" depends="test">
        <nbb:nbbrowse file="${build.test.results.dir}/junit-noframes.html"/>
    </target>
    
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>
    
</project>
