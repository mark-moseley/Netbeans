<?xml version="1.0"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="QA performance tests" basedir="." default="all">

    <!-- Imports default qa-functional-compiler and runidetest executor.
        jemmy and jellytools jars are on classpath for both. -->
    <import file="../../nbbuild/templates/xtest-qa-functional.xml"/>
    
    <property name="nball.dir" location="../../../nb_all"/>
    <property name="nbextra.dir" location="../../../nbextra"/>
    <property name="nbextra.qa.performance.dir" location="${nbextra.dir}/qa/performance"/>
    
    <!-- path reference used in both compiler and executor -->
<!--    <path id="jemmy.and.jelly.path">
        <pathelement location="${nball.dir}/jemmy/builds/jemmy.jar"/>
        <pathelement location="${nball.dir}/jellytools/builds/jelly2-nb.jar"/>
    </path>
-->    

    <path id="performance.testutilities">
        <pathelement location="${nbextra.qa.performance.dir}/testUtilities.jar"/>
    </path>
    
    <!-- compilation classpath -->
    <path id="compiletest.classpath">        
        <pathelement location="${core.dir}/${nb.lib.dir}/core.jar"/>
        <pathelement location="${openide.dir}/${nb.lib.dir}/openide.jar"/>
        <pathelement location="${openide/loaders.dir}/${nb.lib.dir}/openide-loaders.jar"/>
        <pathelement location="${openide/execution.dir}/${nb.modules.dir}/org-openide-execution.jar"/>
            
        <pathelement location="${editor.dir}/${nb.modules.dir}/editor.jar"/>
        <pathelement location="${editor.dir}/${nb.modules.dir}/ext/nb-editor.jar"/>
            
        <pathelement location="${java.dir}/${nb.modules.dir}/org-netbeans-modules-java.jar"/>
            
        <pathelement location="${vcsgeneric.dir}/${nb.modules.dir}/vcsgen.jar"/>
        <pathelement location="${vcscore.dir}/${nb.modules.dir}/org-netbeans-modules-vcscore.jar"/>
        
        <pathelement location="${projects/projectui.dir}/${nb.modules.dir}/org-netbeans-modules-projectui.jar"/>
        <pathelement location="${projects/projectapi.dir}/${nb.modules.dir}/org-netbeans-modules-projectapi.jar"/>
    </path>

                
    <!-- =================== -->
    <!-- Setting classpaths  -->
    <!-- =================== -->
    
    <target name="ide_command_line_suffix" depends="set_bootclasspath_jdk142,set_bootclasspath_jdk150">
        <property name="xtest.ide.commandline.suffix" value="-J-Xbootclasspath/p:${xtest.tmpdir}/hack_jdk.zip -J-Dorg.netbeans.performance.repeat=2"/>
    </target>
    
    
    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->
    <!-- Overrides default qa-functional-compiler because we need something 
         more on classpath -->
    <target name="qa-functional-compiler">
        <buildTests srcDir="qa-functional/src" compileExcludes="**/data/**">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path refid="performance.testutilities"/>
                <path refid="compiletest.classpath"/>
            </classpath>
        </buildTests>
    </target>
    
    
    <!-- ================ -->
    <!-- Global Executors -->
    <!-- ================ -->
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <!-- This target executes tests inside IDE -->
    <target name="runidesetup" depends="ide_command_line_suffix">
        <antcall target="copy_released_ide_cfg_file"/>

<!--        <copy todir="${xtest.sketchpad}/webdir">
          <fileset dir="qa-functional/data/webdir"/>
        </copy>
        <mkdir dir="${xtest.sketchpad}/webdir/WEB-INF/lib"/>

        <copy todir="${xtest.sketchpad}/vcsdir">
          <fileset dir="qa-functional/data/vcsdir" defaultexcludes="no"/>
          <fileset dir="qa-functional/src" defaultexcludes="no">
                <include name="gui/data/*"/>
           </fileset>
        </copy>
-->
        <executeTests pluginName="ide">
            <classpath refid="jemmy.and.jelly.path"/>
            <classpath refid="performance.testutilities"/>
            
            <property name="xtest.timeout" value="3600000" />
            
            <!-- Creates an empty Java project in IDE -->
            <!-- <property name="xtest.ide.create.project" value="true"/> -->
            <!-- Opens project at specified location -->
            <property name="xtest.ide.open.project" location="${xtest.data}/PerformanceTestData"/>
    
        </executeTests>

        <!-- save copy of current Userdir -->
        <copy todir="${xtest.workdir}/sys/ide_backup">
          <fileset dir="${xtest.workdir}/sys/ide"/>
        </copy>
        <antcall target="copy_original_ide_cfg_file"/>
    </target>

    
    <target name="runidetest" depends="ide_command_line_suffix">
        <delete dir="${xtest.workdir}/sys/ide"/>
        <copy todir="${xtest.workdir}/sys/ide">
            <fileset dir="${xtest.workdir}/sys/ide_backup"/>
        </copy>
        <antcall target="copy_released_ide_cfg_file"/>
       
        <executeTests pluginName="ide">
            <classpath refid="jemmy.and.jelly.path"/>
            <classpath refid="performance.testutilities"/>
            
            <property name="xtest.ide.reuse.userdir" value="true"/>
            <property name="xtest.timeout" value="3600000" />
        </executeTests>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>



    <!-- ========= -->
    <!-- Utils     -->
    <!-- ========= -->

    <!-- Replace original netbeans.conf with released netbeans.conf -->
    <target name="copy_released_ide_cfg_file">
        <move file="${netbeans.dest.dir}/etc/netbeans.conf" tofile="${netbeans.dest.dir}/etc/netbeans.conf.original" />
        <copy file="${nbextra.qa.performance.dir}/patches/netbeans.conf" tofile="${netbeans.dest.dir}/etc/netbeans.conf" />
    </target>

    <!-- Replace released netbeans.conf with original netbeans.conf -->
    <target name="copy_original_ide_cfg_file">
        <move file="${netbeans.dest.dir}/etc/netbeans.conf.original" tofile="${netbeans.dest.dir}/etc/netbeans.conf" />
    </target>

    
        
    <!-- ========= -->
    <!-- JDKs     -->
    <!-- ========= -->
    
    <target name="set_bootclasspath_jdk142" depends="which_boot_classpath" if="java142">
        <copy file="${nbextra.qa.performance.dir}/jdk/hack_jdk142.zip" tofile="${xtest.tmpdir}/hack_jdk.zip" />
        <echo message="Set xtest.ide.commandline.suffix for Java 1.4.2!"/>
    </target>

    <target name="set_bootclasspath_jdk150" depends="which_boot_classpath" if="java150">
        <copy file="${nbextra.qa.performance.dir}/jdk/hack_jdk150.zip" tofile="${xtest.tmpdir}/hack_jdk.zip" />
        <echo message="Set xtest.ide.commandline.suffix for Java 1.5.0!"/>
    </target>

    <!-- this "switch" will decide how to create boot classpath -->
    <target name="which_boot_classpath">
        <echo message="Java version = ${java.version}"/>
        
        <condition property="java142">
            <or>
                <!-- the jdk_hack is now written against the classes in 1.4.2_02 (which are the same as in 1.4.2_03),
                there was a change in JComponent between 1.4.2_01 and 1.4.2_02, thus the hack cannot be used with
                1.4.2 and 1.4.2_01 anymore...
                <equals arg1="${java.version}" arg2="1.4.2"/>
                <equals arg1="${java.version}" arg2="1.4.2_01"/>
                -->
                <equals arg1="${java.version}" arg2="1.4.2_02"/>
                <equals arg1="${java.version}" arg2="1.4.2_03"/>
                <equals arg1="${java.version}" arg2="1.4.2_04"/>
            </or>    
        </condition>
        
        <condition property="java150">
            <or>
                <equals arg1="${java.version}" arg2="1.5.0-beta2"/>
                <equals arg1="${java.version}" arg2="1.5.0-beta"/>
                <equals arg1="${java.version}" arg2="1.5.0"/>
            </or>
        </condition>
        
    </target>
    
</project>
