<?xml version="1.0"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="QA performance tests" basedir="." default="all">

    <!-- Root folders -->
    <property name="nball.dir" location="../.."/>
    <property name="nbextra.dir" location="../../../nbextra"/>
    
    <!-- Imports defaults for Performance testing. -->
    <import file="../performancetestutilities/dist/build-performance-tests.xml"/>

    <!-- Custom properties -->
    <property name="xtest.tmpdir.createproject" location="${xtest.tmpdir}/createdProjects"/>
    
    
    <!-- ==================== -->
    <!-- Setting command line -->
    <!-- ==================== -->
    <!-- Command line is created from this property and xtest.perf.commandline.suffix which can be set from command line of xtest -->
    <property name="ide.commandline.suffix" value="-J-Dorg.netbeans.performance.repeat=5 -J-Dorg.netbeans.performance.memory.usage.log=true"/>
    
    
    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->
    <!-- Overrides default qa-functional-compiler because we need something 
    more on classpath -->
    <target name="qa-functional-compiler">
        <buildTests srcDir="qa-functional/src" compileExcludes="**/data/**">
            <classpath>
                <path refid="compiletest.classpath"/>
                <path refid="jemmy.and.jelly.path"/>
                <path refid="performance.testutilities.path"/>
            </classpath>
        </buildTests>
    </target>
    
    
    <!-- ================ -->
    <!-- Global Executors -->
    <!-- ================ -->
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <!-- This target executes tests inside IDE -->
    <target name="runidesetup" depends="copy_unzip_jedit_project,copy_unzip_test_folder_project,copy_unzip_nb_project">
        <antcall target="copy_released_ide_cfg_file"/>

        <executeTests pluginName="ide">
            <classpath refid="jemmy.and.jelly.path"/>
            
            <property name="xtest.timeout" value="2400000" />
            
            <!-- Opens project at specified location -->
            <property name="xtest.ide.open.project" location="${xtest.tmpdir}/jEdit41"/>
    
        </executeTests>

        <!-- save copy of current Userdir -->
        <copy todir="${xtest.workdir}/sys/ide_backup">
            <fileset dir="${xtest.workdir}/sys/ide"/>
        </copy>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>

    
    <target name="runidetest" depends="ide_command_line_suffix">
        <delete dir="${xtest.workdir}/sys/ide"/>
        <copy todir="${xtest.workdir}/sys/ide">
            <fileset dir="${xtest.workdir}/sys/ide_backup"/>
        </copy>
        
        <mkdir dir="${xtest.tmpdir.createproject}"/>
        
        <antcall target="copy_released_ide_cfg_file"/>
       
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path refid="performance.testutilities.path"/>
            </classpath>
            
            <property name="xtest.enable.assertions" value="false" /> 
            <property name="xtest.ide.reuse.userdir" value="true" />
            <property name="xtest.timeout" value="3600000" />
        </executeTests>
        
        <delete dir="${xtest.tmpdir.createproject}"/>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    
    <target name="runidetest_scan" depends="copy_unzip_jedit_project,copy_unzip_test_folder_project">
        <antcall target="copy_released_ide_cfg_file"/>
       
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path refid="performance.testutilities.path"/>
            </classpath>
            
            <property name="xtest.ide.commandline.suffix" value="-J-Dperf.refactoring.test=true"/>

            <property name="xtest.enable.assertions" value="false" />
            <property name="xtest.timeout" value="3600000" />
        </executeTests>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    
    <!-- ================ -->
    <!-- Run in IDE's JVM -->
    <!-- ================ -->

    <target name="internal-execution">
        <taskdef name="internalExecution" classname="org.netbeans.xtest.plugin.ide.IdeInternalExecutionTask" 
        classpath="${xtest.home}/plugins/ide/lib/xtest-ide-plugin.jar"/>

        <!-- Root directory where tests are built in. It means there will be
        separate folder for each test type: ${compile.destdir.root}/${xtest.testtype}/classes.
        Originally defined in module_harness.xml.             
        -->
        <property name="compile.destdir.root" location="../build/test"/>
        <!-- Destination directory for compiled tests. Used in basic_compiler_targets.xml. -->
        <property name="compile.destdir" location="${compile.destdir.root}/${xtest.testtype}/classes"/>
        <!-- JUnit, NbJUnit and NBJUnit-ide should be in classpath by default -->
        <property name="junit.classpath" value="${xtest.home}/lib/junit.jar:${xtest.home}/lib/nbjunit.jar:${xtest.home}/lib/nbjunit-ide.jar"/>        

        <!-- This target runs main method of given class in IDE's JVM. 
        You have -->
        <internalExecution classname="${classname}">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path refid="performance.testutilities.path"/>
                <pathelement path="${compile.destdir}"/>
                <pathelement path="${junit.classpath}"/>
                <pathelement location="../insanelib/dist/insanelib.jar"/>
            </classpath>
        </internalExecution>
    </target>
    
</project>
