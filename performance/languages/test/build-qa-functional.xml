<?xml version="1.0"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->

<project name="Languages Pack performance tests" basedir="." default="all">

    <!-- Root folders -->
    <property name="nball.dir" location="../../.."/>
    <property name="nbextra.dir" location="../../../../nbextra"/>

    <!-- Import defaults for QA-functional tests -->
    <import file="${nball.dir}/nbbuild/templates/xtest-qa-functional.xml"/>
    
    <!-- Imports defaults for Performance testing. -->
    <import file="${nball.dir}/performance/performancetestutilities/dist/build-performance-tests.xml"/>

    <!-- Custom properties -->
    <property name="xtest.tmpdir.createproject" location="${xtest.tmpdir}/createdProjects"/>


    <!-- ==================== -->
    <!-- Setting command line -->
    <!-- ==================== -->
    <!-- Command line is created from this property and xtest.perf.commandline.suffix which can be set from command line of xtest -->
    <property name="ide.commandline.suffix" value="-J-Dorg.netbeans.performance.repeat=4 -J-Dorg.netbeans.performance.memory.usage.log=true"/>

    
    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->

    <target name="qa-functional-compiler" depends="build-performance, init, init-cp">
        <ant antfile="${nball.dir}/nbbuild/templates/xtest-qa-functional.xml" target="qa-functional-compiler">
            <property name="permit.jdk6.builds" value="true"/>
        </ant>
            
        <packageTests/>
    </target>
        
    
    <!-- ================ -->
    <!-- Global Executors -->
    <!-- ================ -->
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <!-- This target executes tests inside IDE -->
    <target name="runidesetup" depends="init-cp, copy_unzip_mp_projects, prepare-wtk">
        <antcall target="copy_released_ide_cfg_file"/>

        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.timeout" value="2400000" />
            
            <!-- Opens project at specified location -->
            <property name="xtest.ide.open.project" location="${xtest.tmpdir}/MobileApplicationVisualMIDlet"/>
        </executeTests>

        <!-- save copy of current Userdir -->
        <copy todir="${xtest.workdir}/sys/ide_backup">
            <fileset dir="${xtest.workdir}/sys/ide"/>
        </copy>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>

    
    <target name="runidetest" depends="init-cp, prepare-wtk, ide_command_line_suffix">
        <delete dir="${xtest.workdir}/sys/ide"/>
        <copy todir="${xtest.workdir}/sys/ide">
            <fileset dir="${xtest.workdir}/sys/ide_backup"/>
        </copy>
        
        <mkdir dir="${xtest.tmpdir.createproject}"/>
        
        <antcall target="copy_released_ide_cfg_file"/>
       
        <!-- copy xsl transformator file for ActionTracker log into appropriate directory -->
        <copy file="${performance.testutilities.dist.dir}/ActionTracker.xsl" todir="${xtest.results.testrun.dir}" />
        
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.enable.assertions" value="false" /> 
            <property name="xtest.ide.reuse.userdir" value="true" />
            <property name="xtest.timeout" value="3600000" />
        </executeTests>
        
        <delete dir="${xtest.tmpdir.createproject}"/>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    
    <target name="runidetest_scan" depends="init-cp, prepare-wtk, copy_unzip_mp_projects">
        <antcall target="copy_released_ide_cfg_file"/>
       
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.ide.commandline.suffix" value="-J-Dperf.refactoring.test=true"/>

            <property name="xtest.enable.assertions" value="false" />
            <property name="xtest.timeout" value="1200000" />
        </executeTests>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    
    <target name="runidetest_footprint" depends="init-cp, prepare_measure_footprint, copy_unzip_mp_projects, ide_command_line_suffix, prepare-wtk">
        <antcall target="copy_released_ide_cfg_file"/>
        
        <!-- Opens project at specified location -->
        <!-- open this project in test run - because not all tests are supposed to have MobileApplicationVisualMIDlet opened
        <property name="xtest.ide.open.project" location="${xtest.tmpdir}/MobileApplicationVisualMIDlet"/> -->
        
        <executeTests pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>
                <path location="${test.qa-functional.run.cp.extra}"/>
            </classpath>
            
            <property name="xtest.ide.commandline.suffix" value="-J-Dorg.netbeans.performance.memory.repeat=1 -J-Dorg.netbeans.performance.memory.usage.log=true"/>
            <property name="xtest.enable.assertions" value="false" /> 
            <property name="xtest.timeout" value="2400000" />
        </executeTests>
        
        <antcall target="copy_original_ide_cfg_file"/>
    </target>
    
    <!-- ========= -->
    <!-- Utils     -->
    <!-- ========= -->
    
    <!-- Copy and unzip project MobilityProject from close source path, will be used for Performance tests -->
    <target name="copy_unzip_mp_projects">
<!--        <unzip src="${nbextra.dir}/qa/projectized/MobileApplicationSwitchConfiguration.zip" dest="${xtest.tmpdir}/"/>-->
        <unzip src="${nbextra.dir}/qa/projectized/MobileApplicationVisualMIDlet.zip" dest="${xtest.tmpdir}/"/>
    </target>
    
    <!-- ============= -->
    <!-- Work with WTK -->
    <!-- ============= -->

    <target name="set-wtk-path" unless="wtk.zipfile.name">
        <condition property="wtk.zipfile.name" value="wtk252-windows.zip">
            <os family="windows"/>
        </condition>
        <condition property="wtk.zipfile.name" value="wtk252-linux.zip">
            <os family="unix" name="linux"/>
        </condition>
    </target>
    
    <target name="prepare-wtk" depends="set-wtk-path">
        <fail unless="wtk.zipfile.name" message="Not supported platform."/>
        
        <unzip src="${nbextra.dir}/qa/performance/mobility/${wtk.zipfile.name}" dest="${netbeans.dest.dir}/mobility8"/>
    </target>
    
</project>