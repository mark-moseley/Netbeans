<?xml version="1.0" encoding="UTF-8" ?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->

<!--
    Created by Ken Paulsen on August 18, 2004
-->

<!ELEMENT layoutDefinition (event?, resources?, types?, handlers?, layout)>

<!-- Container for Resources -->
<!ELEMENT resources (resource*)>

<!-- A Resource is something such as a ResourceBundle, the factory class instantiates the Resource -->
<!ELEMENT resource EMPTY>
<!ATTLIST resource
	id			CDATA	#REQUIRED
	extraInfo		CDATA	#REQUIRED
	factoryClass		CDATA	#REQUIRED
	description		CDATA	#IMPLIED
>

<!-- Container for ComponentTypes -->
<!ELEMENT types (componentType*)>

<!-- ComponentTypes define factories to instantiate UIComponents -->
<!ELEMENT componentType EMPTY>
<!ATTLIST componentType
	id			CDATA	#REQUIRED
	factoryClass		CDATA	#REQUIRED
	description		CDATA	#IMPLIED
>

<!-- Container for HandlerDefinitions -->
<!ELEMENT handlers (handlerDefinition*)>

<!-- Handler Definitions define Handlers to be used later -->
<!ELEMENT handlerDefinition (handler | inputDef | outputDef)*>
<!ATTLIST handlerDefinition
	id			CDATA	#REQUIRED
	description		CDATA	#IMPLIED
	className		CDATA	""
	methodName		CDATA	""
>

<!-- InputDef is used inside HandlerDefinitions -->
<!ELEMENT inputDef EMPTY>
<!ATTLIST inputDef
	name			CDATA	#REQUIRED
	description		CDATA	#IMPLIED
	default			CDATA	#IMPLIED
	type			CDATA	#IMPLIED
	required		CDATA	#IMPLIED
>

<!-- OutputDef is used inside HandlerDefinitions -->
<!ELEMENT outputDef EMPTY>
<!ATTLIST outputDef
	name			CDATA	#REQUIRED
	description		CDATA	#IMPLIED
	type			CDATA	#IMPLIED
>

<!ELEMENT event (handler)*>
<!ATTLIST event
	type			CDATA	#REQUIRED
>

<!-- Handlers are used inside Events -->
<!ELEMENT handler (input | outputMapping)*>
<!ATTLIST handler
	id			CDATA	#REQUIRED
>

<!-- Input is used inside Handlers -->
<!ELEMENT input (list)*>
<!ATTLIST input
	name			CDATA	#REQUIRED
	value			CDATA	""
>

<!-- OutputMapping is used inside Handlers -->
<!ELEMENT outputMapping EMPTY>
<!ATTLIST outputMapping
	outputName		CDATA	#REQUIRED
	targetType		CDATA	"attribute"
	targetKey		CDATA	#REQUIRED
>

<!ELEMENT layout (if | foreach | while | facet | staticText | component | event | markup)*>

<!-- FIXME: "if" is only meaningful outside a component -->
<!ELEMENT if (if | foreach | while | facet | staticText | component | event | markup | attribute)*>
<!ATTLIST if
	condition		CDATA	#REQUIRED
	description		CDATA	#IMPLIED
>

<!-- FIXME: "foreach" is only meaningful outside a component -->
<!ELEMENT foreach (if | foreach | while | facet | staticText | component | event | markup | attribute)*>
<!ATTLIST foreach
	key			CDATA	#REQUIRED
	list			CDATA	#REQUIRED
	description		CDATA	#IMPLIED
>

<!-- FIXME: "while" is only meaningful outside a component -->
<!ELEMENT while (if | foreach | while | facet | staticText | component | event | markup | attribute)*>
<!ATTLIST while
	condition		CDATA	#REQUIRED
	description		CDATA	#IMPLIED
>

<!ELEMENT facet (if | foreach | while | facet | staticText | component | event | markup | attribute)*>
<!ATTLIST facet
	id			CDATA	#REQUIRED
	rendered		CDATA	"auto"
	description		CDATA	#IMPLIED
>

<!-- FIXME: "staticText" is only meaningful outside a component -->
<!ELEMENT staticText (#PCDATA)>
<!ATTLIST staticText
	escape			CDATA	#IMPLIED
>

<!ELEMENT component (option | facet | event | component)*>
<!ATTLIST component
	type			CDATA	#REQUIRED
	id			CDATA	#REQUIRED
	overwrite		CDATA	"false"
	description		CDATA	#IMPLIED
>

<!-- FIXME: "markup" is only meaningful outside a component?? -->
<!-- markup type can be "open", "close", or "both" -->
<!ELEMENT markup (if | foreach | while | facet | staticText | component | event | markup | attribute)*>
<!ATTLIST markup
	tag			CDATA	#REQUIRED
	type			CDATA	"both"
	description		CDATA	#IMPLIED
>

<!-- "attribute" is only meaningful inside markup -->
<!ELEMENT attribute (event)*>
<!ATTLIST attribute
	name			CDATA	#REQUIRED
	value			CDATA	#REQUIRED
	property		CDATA	#IMPLIED
	description		CDATA	#IMPLIED
>

<!-- "option" is meaningful to a component -->
<!ELEMENT option (list*)>
<!ATTLIST option
	name			CDATA	#REQUIRED
	value			CDATA	""
	description		CDATA	#IMPLIED
>

<!-- "list" is used inside an option -->
<!ELEMENT list EMPTY>
<!ATTLIST list
	value			CDATA	#REQUIRED
	description		CDATA	#IMPLIED
>
