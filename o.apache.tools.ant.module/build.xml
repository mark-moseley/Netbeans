<?xml version="1.0" encoding="UTF-8"?>
<!--
The contents of this file are subject to the terms of the Common Development
and Distribution License (the License). You may not use this file except in
compliance with the License.

You can obtain a copy of the License at http://www.netbeans.org/cddl.html
or http://www.netbeans.org/cddl.txt.

When distributing Covered Code, include this CDDL Header Notice in each file
and include the License file at http://www.netbeans.org/cddl.txt.
If applicable, add the following below the CDDL Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.
-->
<project name="ant" default="netbeans" basedir=".">

    <import file="../nbbuild/templates/projectized.xml"/>

    <target name="build-init" depends="projectized.build-init">
        <ant dir="external" target="unzip"/>
        <property name="src-bridge.cp" value="${module.classpath}:${src-bridge.cp.extra}"/>
    </target>

    <target name="compile-bridge" depends="init,compile">
        <mkdir dir="build/bridge-classes"/>
        <depend srcdir="src-bridge" destdir="build/bridge-classes" cache="build/depcache-bridge">
            <classpath>
                <path path="${src-bridge.cp}"/>
            </classpath>
        </depend>
        <javac srcdir="src-bridge" destdir="build/bridge-classes" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}" source="1.5" target="1.5" includeantruntime="false">
            <classpath>
                <path path="${src-bridge.cp}"/>
            </classpath>
            <compilerarg line="${javac.compilerargs}"/>
        </javac>
        <copy todir="build/bridge-classes">
            <fileset dir="src-bridge" excludes="${jar-excludes}"/>
        </copy>
    </target>

    <target name="jar-bridge" depends="compile-bridge">
        <mkdir dir="${cluster}/ant/nblib"/>
        <jar jarfile="${cluster}/ant/nblib/bridge.jar" compress="false">
            <fileset dir="build/bridge-classes"/>
        </jar>
    </target>

    <target name="release" depends="init">
        <mkdir dir="${cluster}/ant/lib"/>
        <copy todir="${cluster}/ant/lib">
            <fileset dir="external/lib"/>
        </copy>
        <unzip dest="${cluster}/ant">
            <fileset dir="external">
                <include name="ant-misc-*.zip"/>
            </fileset>
        </unzip>
        <chmod perm="ugo+x">
            <fileset dir="${cluster}/ant/bin">
                <exclude name="*.cmd"/>
                <exclude name="*.bat"/>
            </fileset>
        </chmod>
    </target>

    <target name="netbeans-extra" depends="jar-bridge,release"/>

    <target name="jnlp" depends="netbeans">
        <property name="dir" location="${jnlp.dest.dir}/org-apache-tools-ant-module"/>
        <mkdir dir="${dir}"/>
        <copy todir="${dir}" flatten="true">
            <fileset dir="${cluster}">
                <include name="${module.jar}"/>
                <include name="ant/patches/*.jar"/>
            </fileset>
        </copy>
        <copy todir="${dir}">
            <fileset dir="${cluster}">
                <include name="ant/lib/*.jar"/>
            </fileset>
            <mapper type="glob" from="ant${file.separator}lib${file.separator}*.jar" to="apache-*-1.7.0.jar"/>
        </copy>
        <copy file="${cluster}/ant/nblib/bridge.jar" tofile="${dir}/org-apache-tools-ant-module-bridge.jar"/>
        <signjar alias="${jnlp.signjar.alias}" storepass="${jnlp.signjar.password}" keystore="${jnlp.signjar.keystore}">
            <fileset dir="${dir}">
                <include name="org-apache-tools-ant-module.jar"/>
                <include name="org-apache-tools-ant-module-bridge.jar"/>
                <include name="apache-ant*.jar"/>
            </fileset>
        </signjar>
        <pathconvert property="ant-jar-resources" pathsep="'/&gt;&#10;    &lt;jar href='org-apache-tools-ant-module/">
            <path>
                <fileset dir="${dir}">
                    <include name="apache-ant*.jar"/>
                </fileset>
            </path>
            <mapper type="glob" from="${dir}${file.separator}*" to="*"/>
        </pathconvert>
        <echo file="${jnlp.dest.dir}/org-apache-tools-ant-module.jnlp"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<jnlp spec='1.0+' codebase='${jnlp.codebase}'>
  <information>
   <title>Apache Ant Integration</title>
   <vendor>NetBeans</vendor>
   <description kind='one-line'>Bundles Apache Ant.</description>
   <description kind='short'>This module bundles the Apache Ant build tool.</description>
  </information>
  <security><all-permissions/></security>
  <resources>
    <jar href='org-apache-tools-ant-module/org-apache-tools-ant-module.jar'/>
    <jar href='org-apache-tools-ant-module/org-apache-tools-ant-module-bridge.jar'/>
    <jar href='org-apache-tools-ant-module/${ant-jar-resources}'/>
  </resources>
  <component-desc/>
</jnlp>
            ]]>
        </echo>
    </target>

    <!-- For use when making new releases: -->
    <target name="release-helper" depends="clean" description="Help do some things useful when bundling a new Ant release.">
        <ant dir="external" target="clean"/>
        <condition property="all.defined">
            <and>
            <isset property="release.version"/>
            <isset property="release.path"/>
        </and>
        </condition>
        <fail unless="all.defined">
            You need to set the following properties first:
            release.version: version of Ant being bundled, e.g. "1.6"
            release.path: full path to the Ant binary distribution, e.g. "/tmp/apache-ant-1.6.0"
        </fail>
        <echo>2.  Creating the Ant manual from ${orig.manual}...</echo>
        <property name="online.manual" location="build/release-work/online-manual"/>
        <delete dir="${online.manual}"/>
        <mkdir dir="${online.manual}"/>
        <copy todir="${online.manual}">
            <fileset dir="${orig.manual}">
                <!-- Included as a separate Javadoc mount: -->
                <exclude name="api/"/>
            </fileset>
        </copy>
        <property name="ant-docs.zip" location="docs/external/ant-docs-${release.version}.zip"/>
        <zip zipfile="${ant-docs.zip}" compress="true">
            <fileset dir="${online.manual}"/>
        </zip>
        <property name="here" location="."/>
        <property name="ant-libs.zip" location="external/ant-libs-${release.version}.zip"/>
        <echo>3.  Creating ${ant-libs.zip}...</echo>
        <zip zipfile="${ant-libs.zip}" compress="true">
            <fileset dir="${release.path}/lib">
                <include name="ant*.jar"/>
            </fileset>
        </zip>
        <property name="ant-misc.zip" location="external/ant-misc-${release.version}.zip"/>
        <echo>4.  Creating ${ant-misc.zip}...</echo>
        <zip zipfile="${ant-misc.zip}" compress="true">
            <fileset dir="${release.path}">
                <include name="bin/"/>
                <include name="etc/"/>
            </fileset>
        </zip>
        <echo>Now some (currently) manual steps for you:
5.  Mention that the Ant version is ${release.version} in all files in ${here}, e.g.:
    - docs/antsrc/MakeManual.java
    - docs/src/org/apache/tools/ant/module/docs/Bundle.properties
    - ../usersguide/javahelp/org/netbeans/modules/usersguide/ant/*.html
    - external/build.xml
    and rename external/ant-*-license.txt
    and cvs rm -f the old .zip files and cvs add -kb the new ones
6.  Run: ant -f ${here}/docs/build.xml preview-javahelp
    You can ignore links to api/org/apache/... which will be broken, as well as a few other things.
    But for real problems in the HTML, commit fixes to docs/manual/ in the ant.apache.org CVS trunk.
    Sanity-check the helpset and adjust ${here}/docs/antsrc/MakeManual.java as needed.
7.  Increase spec versions in manifest.mf and docs/manifest.mf.
8.  Test everything, including at least:
    ant -f ${here}/build.xml clean netbeans
    ant -f ${here}/docs/build.xml clean netbeans
    ant -f ${here}/test/build.xml cleanresults runtests
    ant -f ${here}/../java/project/test/build.xml cleanresults runtests
    ant -f ${here}/../nbbuild/build.xml commit-verification
9.  Submit a patch for https://svn.apache.org/repos/asf/ant/core/trunk/xdocs/external.xml
    mentioning that the bundled version in NB is now ${release.version}.

After that you should be done!
        </echo>
    </target>

</project>
