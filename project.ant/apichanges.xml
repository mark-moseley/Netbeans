<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->
<?xml-stylesheet type="text/xml" href="../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../nbbuild/javadoctools/apichanges.dtd">

<!--

INFO FOR PEOPLE ADDING CHANGES:

Check the DTD (apichanges.dtd) for details on the syntax. You do not
need to regenerate the HTML, as this is part of Javadoc generation; just
change the XML. Rough syntax of a change (several parts optional):

<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>

Also permitted elements: <package>, <branch>. <version> is API spec
version, recommended for all new changes. <compatibility> should say
if things were added/modified/deprecated/etc. and give all information
related to upgrading old code. List affected top-level classes and
link to issue numbers if applicable. See the DTD for more details.

Changes need not be in any particular order, they are sorted in various
ways by the stylesheet anyway.

Dates are assumed to mean "on the trunk". If you *also* make the same
change on a stabilization branch, use the <branch> tag to indicate this
and explain why the change was made on a branch in the <description>.

Please only change this file on the trunk! Rather: you can change it
on branches if you want, but these changes will be ignored; only the
trunk version of this file is important.

Deprecations do not count as incompatible, assuming that code using the
deprecated calls continues to see their documented behavior. But do
specify deprecation="yes" in <compatibility>.

This file is not a replacement for Javadoc: it is intended to list changes,
not describe the complete current behavior, for which ordinary documentation
is the proper place.

-->

<apichanges>

    <!-- First, a list of API names you may use: -->
    <apidefs>
        <apidef name="general">Ant Project API</apidef>
        <!-- etc. -->
    </apidefs>

    <!-- ACTUAL CHANGES BEGIN HERE: -->

    <changes>

        <change id="libraries-for-ant">
            <api name="general"/>
            <summary>Support for adding/copying libraries used by build process only</summary>
            <version major="1" minor="21"/>
            <date day="9" month="6" year="2008"/>
            <author login="mkubec"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    Added methods for adding/copying global libraries that are needed 
                    for Ant build script. Added methods:
                    <code>AntBuildExtender.addLibrary</code>,
                    <code>AntBuildExtender.removeLibrary</code>
                </p>
            </description>
            <class package="org.netbeans.api.project.ant" name="AntBuildExtender"/>
            <issue number="136623"/>
        </change>

        <change id="AntProjectHelper-createAuxiliaryProperties">
            <api name="general"/>
            <summary>Added AntProjectHelper.createAuxiliaryProperties()</summary>
            <version major="1" minor="21"/>
            <date day="9" month="6" year="2008"/>
            <author login="jlahoda"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    A new API method <code>AntProjectHelper.createAuxiliaryProperties</code>.
                </p>
            </description>
            <class package="org.netbeans.spi.project.support.ant" name="AntProjectHelper"/>
            <issue number="134580"/>
        </change>
        
        <change id="ant-project-libraries">
            <api name="general"/>
            <summary>Support for project-specific libraries</summary>
            <version major="1" minor="19"/>
            <date day="22" month="1" year="2008"/>
            <author login="jglick"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    A new XML schema
                    (<a href="http://www.netbeans.org/ns/ant-project-libraries/1.xsd"><code>http://www.netbeans.org/ns/ant-project-libraries/1</code></a>),
                    several new API methods
                    (<code>AntProjectHelper.getProjectLibrariesPropertyProvider</code>,
                    <code>AntProjectHelper.isSharableProject</code>,
                    <code>AntProjectHelper.getLibrariesLocation</code>,
                    <code>AntProjectHelper.setLibrariesLocation</code>,
                    <code>ProjectGenerator.createProject(FileObject, String, String)</code>,
                    <code>ReferenceHelper.createForeignFileReferenceAsIs</code>,
                    <code>ReferenceHelper.createExtraForeignFileReferenceAsIs</code>,
                    <code>ReferenceHelper.copyLibrary</code>,
                    <code>ReferenceHelper.getLibraryChooserImportHandler</code>,
                    <code>ReferenceHelper.createLibraryReference</code>,
                    <code>ReferenceHelper.getProjectLibraryManager</code>,
                    <code>ReferenceHelper.findLibrary</code>) and
                    custom file chooser (<code>FileChooser</code>)
                    provide support for collocated library definitions
                    referred to from Ant-based projects.
                </p>
            </description>
            <class package="org.netbeans.spi.project.support.ant" name="AntProjectHelper"/>
            <class package="org.netbeans.spi.project.support.ant" name="ReferenceHelper"/>
            <class package="org.netbeans.spi.project.support.ant" name="ProjectGenerator"/>
            <class package="org.netbeans.api.project.ant" name="FileChooser"/>
            <issue number="44035"/>
        </change>

        <change id="owned-files">
            <api name="general"/>
            <summary>Support for adding external files owned by project</summary>
            <version major="1" minor="17"/>
            <date day="8" month="10" year="2007"/>
            <author login="mkubec"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                  Added a method for registering external file that is supposed to be
                  owned by the project, typically used in freeform project to register
                  build products that are external to project dir.
                </p>
            </description>
            <class package="org.netbeans.spi.project.support.ant" name="SourcesHelper"/>
            <issue number="57656"/>
        </change>
        
        <change id="build-extender">
            <api name="general"/>
            <summary>Support for externally extending the project's build script</summary>
            <version major="1" minor="16"/>
            <date day="10" month="4" year="2007"/>
            <author login="mkleint"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                  Add framework for extending the project's build script with 3rd party snippets,
                  allowing automated extensions to the build process. 
                </p>
            </description>
            <class package="org.netbeans.api.project.ant" name="AntBuildExtender"/>
            <class package="org.netbeans.spi.project.support.ant" name="GeneratedFilesHelper"/>
            <class package="org.netbeans.spi.project.ant" name="AntBuildExtenderImplementation"/>
            <class package="org.netbeans.spi.project.ant" name="AntBuildExtenderFactory"/>
            <issue number="93509"/>
        </change>
        
        <change id="includes-excludes.ant">
            <api name="general"/>
            <summary>Support for source root includes and excludes</summary>
            <version major="1" minor="15"/>
            <date day="1" month="3" year="2007"/>
            <author login="jglick"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    Ant-based projects can now conveniently specify include and exclude
                    lists for source groups based on Ant's standard patternset syntax.
                </p>
            </description>
            <class package="org.netbeans.spi.project.support.ant" name="SourcesHelper"/>
            <class package="org.netbeans.spi.project.support.ant" name="PathMatcher"/>
            <issue number="49026"/>
        </change>
        
        <change id="PropertyUtils.userPropertiesProvider.FilterPropertyProvider">
            <api name="general"/>
            <summary>Added utilities for constructing richer property evaluators</summary>
            <version major="1" minor="14"/>
            <date day="8" month="9" year="2006"/>
            <author login="jglick"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    Added a new class and a new method to <code>PropertyUtils</code> to
                    make it easier to write a customizer version of
                    <code>AntProjectHelper.getStandardPropertyEvaluator()</code>,
                    among other things.
                </p>
            </description>
            <class package="org.netbeans.spi.project.support.ant" name="FilterPropertyProvider"/>
            <class package="org.netbeans.spi.project.support.ant" name="PropertyUtils"/>
            <issue number="49636"/>
        </change>
        
        <change id="ReferenceHelper.addReference-change-of-target-property-file">
            <api name="general"/>
            <summary>Semantic changes in the ReferenceHelper behavior</summary>
            <version major="1" minor="10"/>
            <date day="28" month="8" year="2005"/>
            <author login="tzezula"/>
            <compatibility modification="yes" semantic="incompatible"/>
            <description>
                The ReferenceHelper was changed to support better sharability of
                projects. The collocated references are stored both into the project
                properties (as relative) and private properties (as absolute)
            </description>
            <issue number="63401"/>
        </change>

        <change id="delete-support">
            <api name="general"/>
            <summary>Basic Support SPI for Project Delete/Copy/Rename/Move</summary>
            <version major="1" minor="9"/>
            <date day="11" month="7" year="2005"/>
            <author login="jlahoda"/>
            <compatibility addition="yes"/>
            <description>
                Added <code>AntProjectHelper.notifyDeleted()</code>. Added <code>ReferenceHelper.fixReferences</code>.
            </description>
            <issue number="51468"/>
        </change>
        
        <change id="StoreGroup">
            <api name="general"/>
            <summary>Support SPI for creating/storing Swing models for simple Ant properties</summary>
            <version major="1" minor="6"/>
            <date day="16" month="1" year="2005"/>
            <author login="phrebejk"/>
            <compatibility addition="yes"/>
            <description>
                Introduced new class <code>StoreGroup</code> which
                is capable of creating Swing models for simple Ant project properties and
                storing modified values back into properties.
            </description>
            <class package="org.netbeans.spi.project.support.ant.ui" name="StoreGroup"/>
            <issue number="49648"/>
        </change>
     
        <change id="AntArtifact.misc">
            <api name="general"/>
            <summary>AntArtifact enhancements</summary>
            <version major="1" minor="5"/>
            <date day="13" month="1" year="2005"/>
            <author login="dkonecny"/>
            <compatibility addition="yes" deprecation="yes">
                <p>
                    New schema was defined, but upgrade from old schema to new
                    one is realized only after some new features are used. If
                    project's artifact does not define any properties for 
                    artifact nor produce multiple outputs and Ant script lies
                    under the project's directory then old schema is
                    always used. Once project start using some of these new 
                    features the schema will be upgraded automatically to new
                    version. This affects any project type which is using 
                    ant/project module.
                </p>
            </compatibility>
            <description>
                <p>
                    Several enhancements of <code>AntArtifact</code> were implemented:
                </p>
                <ol>
                    <li>execution of an artifact's target can be customized by properties</li>
                    <li>an artifact can produce several build outputs</li>
                    <li>an Ant script path is not persisted as a URI, but as a string possibly containing Ant properties</li>
                </ol>
                <p>
                    <code>ReferenceHelper</code> was simplified as part of the implementation.
                </p>
            </description>
            <class package="org.netbeans.api.project.ant" name="AntArtifact"/>
            <issue number="47788"/>
            <issue number="50484"/>
            <issue number="50092"/>
        </change>

         <change id="ReferenceHelper.createForeignFileReference.relative">
             <api name="general"/>
             <summary>Make ReferenceHelper.createForeignFileReference produce relative links based on properties</summary>
             <version major="1" minor="4"/>
             <date day="11" month="1" year="2005"/>
             <author login="dkonecny"/>
             <compatibility addition="yes"/>
             <description>
               <code>ReferenceHelper</code> should reuse external project folders as base
               directories for references it creates where appropriate. The
               new API allows addition or removal of these base folders.
             </description>
             <class package="org.netbeans.spi.project.support.ant" name="ReferenceHelper"/>
             <issue number="49550"/>
         </change>

        <change id="rel-vers-1">
            <api name="general"/>
            <summary>Switched to major release version 1</summary>
            <version major="1" minor="3"/>
            <date day="22" month="12" year="2004"/>
            <author login="jglick"/>
            <compatibility>
                <p>
                    Clients should begin requesting the new version to avoid a warning at startup.
                </p>
            </compatibility>
            <description>
                <p>
                    To indicate that this is now considered a stable API, the major release version was
                    incremented to 1 from 0.
                </p>
            </description>
            <issue number="51468"/>
        </change>

    </changes>

    <!-- Now the surrounding HTML text and document structure: -->

    <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <==============

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE ant/project/apichanges.xml

-->
    <head>
      <title>Change History for the Ant Project API</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the <a href="@org-netbeans-modules-project-ant@/index.html">Ant Project API</a>.</p>

<!-- The actual lists of changes, as summaries and details: -->
      <hr/>
      <standard-changelists module-code-name="org.netbeans.modules.project.ant/1"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>

</apichanges>
