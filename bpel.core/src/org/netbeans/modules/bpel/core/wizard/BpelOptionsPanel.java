/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

/*
 * PanelOptionsVisual1.java
 *
 * Created on January 26, 2006, 5:24 PM
 */

package org.netbeans.modules.bpel.core.wizard;


import javax.swing.JTextField;

import org.openide.WizardDescriptor;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;


/**
 *
 * @author  Praveen
 */
public class BpelOptionsPanel extends javax.swing.JPanel {
    
    private static final long serialVersionUID = 1L;
    
    private static final String DEFAULT_SERVICE_NAME =
            NbBundle.getMessage(BpelOptionsPanel.class,
            "TXT_defaultServiceName");                              //NOI18N
    private static final String TARGET_URL_PREFIX =
            NbBundle.getMessage(BpelOptionsPanel.class,"TXT_defaultTNS");   //NOI18N
    
    /** Creates new form PanelOptionsVisual1 */
    public BpelOptionsPanel(NewBpelFilePanel newBpelFilePanel) {
        initComponents();
        
        this.newBpelFilePanel = newBpelFilePanel;
        NameSpaceListener namespaceListener = new NameSpaceListener();
        namespaceTextField.getDocument().addDocumentListener(namespaceListener);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        Mnemonics.setLocalizedText(jLabel1, NbBundle.getMessage(BpelOptionsPanel.class, "LBL_Namespace"));
        namespaceTextField = new javax.swing.JTextField();

        jLabel1.setLabelFor(namespaceTextField);
        jLabel1.getAccessibleContext().setAccessibleName(java.util.ResourceBundle.getBundle("org/netbeans/modules/bpel/core/wizard/Bundle").getString("ACS_NamespaceLabel"));

        namespaceTextField.getAccessibleContext().setAccessibleName(java.util.ResourceBundle.getBundle("org/netbeans/modules/bpel/core/wizard/Bundle").getString("ACS_NamespaceTextField"));
        namespaceTextField.getAccessibleContext().setAccessibleDescription(java.util.ResourceBundle.getBundle("org/netbeans/modules/bpel/core/wizard/Bundle").getString("ACS_NamespaceTextFieldDescription"));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(namespaceTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(namespaceTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(198, 198, 198))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    boolean valid(WizardDescriptor wizardDescriptor) {
        return true;
    }
    
    void store(WizardDescriptor d) {
        // Set value for namespace
        d.putProperty(WizardProperties.NAMESPACE, namespaceTextField.getText());
    }
    
    void read(WizardDescriptor d) {
    }
    
    protected void setNamespaceTextField(String namespace) {
        namespaceTextField.setText(namespace);
    }
    
    protected String getNamespaceTextField() {
        return namespaceTextField.getText();
    }
    
    String getWsName() {
        if (fileNameTF!=null)
            return fileNameTF.getText();
        else
            return DEFAULT_SERVICE_NAME;
    }
    
    void attachFileNameListener(JTextField fileNameTF) {
        
        this.fileNameTF=fileNameTF;
        if (fileNameTF!=null) {
            namespaceTextField.setText(getPrefix()  +fileNameTF.getText());
            DocListener listener = new DocListener();
            javax.swing.text.Document doc = fileNameTF.getDocument();
            doc.addDocumentListener(listener);
        } else {
            namespaceTextField.setText(getPrefix() + DEFAULT_SERVICE_NAME);
        }
        
        // initialise.
        prevNamespace = namespaceTextField.getText();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField namespaceTextField;
    // End of variables declaration//GEN-END:variables
    
    NewBpelFilePanel newBpelFilePanel;
    private JTextField fileNameTF;
    private String prevNamespace;
        private boolean nameSpaceModifiedFlag = false;
    
    private void doUpdate() {
        if(namespaceTextField.getText()!=null && prevNamespace != null)
            if(!namespaceTextField.getText().equals(prevNamespace))
                nameSpaceModifiedFlag = true;
        
        if(!nameSpaceModifiedFlag) {
            namespaceTextField.setText(getPrefix() +fileNameTF.getText());
            prevNamespace = namespaceTextField.getText();
        }
    }
    
    private class DocListener implements javax.swing.event.DocumentListener {
        public void changedUpdate(javax.swing.event.DocumentEvent e) {
            doUpdate();
        }
        
        public void insertUpdate(javax.swing.event.DocumentEvent e) {
            doUpdate();
        }
        
        public void removeUpdate(javax.swing.event.DocumentEvent e) {
            doUpdate();
        }
    };
    
    private class NameSpaceListener implements javax.swing.event.DocumentListener {
        public void changedUpdate(javax.swing.event.DocumentEvent e) {
            checkValidNamespace();
            newBpelFilePanel.fireChange();
        }
        
        public void insertUpdate(javax.swing.event.DocumentEvent e) {
            checkValidNamespace();
            newBpelFilePanel.fireChange();
        }
        
        public void removeUpdate(javax.swing.event.DocumentEvent e) {
            checkValidNamespace();
            newBpelFilePanel.fireChange();
        }
    };
  
    
    private void checkValidNamespace() {
        if(newBpelFilePanel.getTemplateWizard() == null)
            return;
        
        if(namespaceTextField.getText().contains(" "))
           newBpelFilePanel.getTemplateWizard().putProperty("WizardPanel_errorMessage",  // NOI18N
                   NbBundle.getMessage(BpelOptionsPanel.class, "MSG_Namespace_Contains_Space")); // NOI18N
        else
           newBpelFilePanel.getTemplateWizard().putProperty("WizardPanel_errorMessage", null); //NOI18N
    }
    
    private String getPrefix() {
        return TARGET_URL_PREFIX;
    }
}
