<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->

<?xml-stylesheet href="../../nbbuild/javadoctools/apichanges.xsl" type="text/xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<!-- INFO FOR PEOPLE ADDING CHANGES:
[most of contents snipped - see openide's apichanges for how-to instructions]
<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>
-->

<apichanges>

<!-- First, a list of API names you may use: -->
<apidefs>
        <apidef name="ViewModelAPI">View Model API</apidef>
</apidefs>

<!-- ACTUAL CHANGES BEGIN HERE: -->

<changes>
    <change>
        <api name="ViewModelAPI"/>
        <summary>Support for pop-up menu actions fixed.</summary>
        <date day="29" month="4" year="2004"/>
        <author login="jjancura"/>
        <compatibility>
            <p>
                Incompatile changes (additions / removals).
            </p>
        </compatibility>
        <description>
            Support for different models in multiselection has been added. 
        </description>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>TreeModel.getChildrenCount (Object node) method added.</summary>
        <date day="23" month="7" year="2004"/>
        <author login="jjancura"/>
        <compatibility addition="yes"/>
        <description>
                TreeModel uses indexed approach (getChildren (Object node, int from, int to). But 
                the children count has not been accesible through the API. This was important problem.
        </description>
        <class package="org.netbeans.spi.viewmodel" name="TreeModel" />
        <issue number="46368"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>Support for synchronous and asynchronous ViewModels implementation fixed.</summary>
        <date day="7" month="1" year="2005"/>
        <author login="jjancura"/>
        <compatibility binary="incompatible" source="incompatible" deletion="yes" modification="yes"/>
        <description>
                Support for synchronous and asynchronous ViewModels implementations is one of the major 
                ViewModel API requirements. During fixing of #46614 (toString update should not run 
                in AWT thread) I have realized, that current support for asynchronous ViewModels 
                implementations is not usable. This change fixes the problem:
                    1) ComputingException, and NoInformationException removed - as completely useless.
                    2) All methods throwing these exceptions changed.
                    3) New ViewModel implementation supports asynchronous model only. Its fast and safe.
                How to update your code using these exceptions:
                    Old code:
                    public Object getValueAt (Object row, String columnId) throws ComputingException {
                        if (....)
                            throw new ComputingException ();
                        ...
                    }
                    
                    Fixed code:
                    public Object getValueAt (Object row, String columnId) {
                        if (....)
                            return "Computing";
                        ...
                    }
        </description>
        <issue number="53073"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>Access to tree node expansion added.</summary>
        <date day="13" month="1" year="2005"/>
        <author login="jjancura"/>
        <compatibility binary="incompatible" source="incompatible" deletion="yes" addition="yes" modification="yes"/>
        <description>
                This change has been done to cover user requirement #46167.
                List of changes:
                    1) new TreeExpansionModel introduced
                    2) new class Models.TreeFeatures contains tree expansion methods.
                During implementation of this user requirement I have discovered important problem in ViewModel API. 
                There is no possibility to add a new model to it. List of changes fixing this problem:
                    1) Models.createView (...) and Models.setModelsToView (...) methods do not use fixed set of models as parameters,
                       but they use Models.CompoundModel.
                    2) Models.CompoundModel is final class implementing all currently supported models. The only way how to create
                       a new instance of it is Models.createCompoundModel (List listOfModels). It allows future additions of new
                       models.
                    3) Methods Models.createCompoundTreeModel (...), Models.createCompoundNodeModel (...), 
                       Models.createCompoundTableModel (...), Models.createCompoundNodeActionsProvider (...), and field
                       Models.EMPTY_TREE_MODEL has been removed as useless.
                How to update your code using these exceptions:
                    No changes required for most of clients. You should change your code only if you are providing some 
                    new view based on ViewModel. In this case you should put all your model instances to one list, 
                    and call Models.createCompountModel (list), in place of calling create*Model* methods.
        </description>
        <class package="org.netbeans.spi.viewmodel" name="Models" />
        <class package="org.netbeans.spi.viewmodel" name="TreeExpansionModel" />
        <issue number="46167"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>I need to add TreeModelEvent to ViewModelAPI.</summary>
        <date day="31" month="3" year="2005"/>
        <author login="jjancura"/>
        <compatibility binary="incompatible" source="incompatible" deletion="yes" addition="yes" modification="yes"/>
        <description>
            NB4.0 version of ViewModelAPI had several event firing related issues:

            1) It supported two types of changes only:
                i) whole tree has been changed notification
                ii) node and all subnodes change notification
                There where no support for small grained changes (one table cell change).

            2) The same listener type (TreeModelListener) has been used for all model types (TreeModel, NodeModel, ...)
            3) There was no TreeModelEvent, so evolving of this api was problematic.

            I have done folowing incompatible api change, to fix this problem:

            1) TreeModelListener has been renamed to ModelListener (Because its used for other models too).
            2) ModelEvent class has been added.
            3) Two methods removed from TreeModelListener:
                public void treeNodeChanged (Object node);
                public void treeNodeChanged (TreeModelEvent event);
            and replaced by folowing method:
                public void modelChanged (ModelEvent event);
            4) three innerclasses added to ModelEvent
                TreeChanged
                TableValueChanged
                NodeChanged
            These three innerclasses are designed to support firing of all kinds of model changes.
            TreeChanged - Designed to notify about chages of whole tree content / structure. This event has no parameters.
            TableValueChanged - Designed to notify about chages of one cell in table. Two parameters: Object row, String columnID
            NodeChanged - Designed to notify about chages of one node - icon and display name. One parameter: Object node.
        </description>
        <issue number="57273"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>ModelEvent enhanced with more fine-grained changes</summary>
        <version major="1" minor="6"/>
        <date day="21" month="7" year="2005"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" deletion="no" addition="yes" modification="no"/>
        <description>
            NodeChanged events need to distinguish what node property has changed. Mask constant were added for
            display name, icon, short description and children properties. By default, mask that aggregates all
            these properties is used - to assure compatibility.
        </description>
        <class package="org.netbeans.spi.viewmodel" name="ModelEvent" />
        <issue number="60499"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>CompoundModel enhanced with a possibility to set help ID.</summary>
        <version major="1" minor="7"/>
        <date day="25" month="8" year="2005"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" deletion="no" addition="yes" modification="no"/>
        <description>
            In order to have a help ID defined for the GUI component that is
            created from the compound model, it's necessary to be able to set
            that help ID on the compound model instance.
            Two methods are added for that purpose:
            <code>CompoundModel Models.createCompoundModel (List, String)</code>
            and <code>String CompoundModel.getHelpId()</code>.
        </description>
        <class package="org.netbeans.spi.viewmodel" name="Models" />
        <issue number="62617"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>getDisplayedMnemonic() method added to ColumnModel.</summary>
        <version major="1" minor="11"/>
        <date day="30" month="1" year="2006"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" deletion="no" addition="yes" modification="no"/>
        <description>
            In order to be able to provide mnemonics for columns in tree table views,
            <code>Character ColumnModel.getDisplayedMnemonic()</code> method was
            added to ColumnModel class.
        </description>
        <class package="org.netbeans.spi.viewmodel" name="ColumnModel" />
        <issue number="71858"/>
    </change>
    <change>
        <api name="ViewModelAPI"/>
        <summary>Extension to NodeModel.</summary>
        <version major="1" minor="12"/>
        <date day="6" month="6" year="2007"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" deletion="no" addition="yes" modification="no"/>
        <description>
            Add ability to in-place rename and copy/paste functionality to nodes
            in debugger views. Also, the models needs to have a way to provide
            an icon with arbitrary extension. Therefore following methods are
            provided with new <code>ExtendedNodeModel</code> and <code>ExtendedNodeModelFilter</code> interfaces
            and are also added into <code>CompoundModel</code>:
            <code>canRename()</code>, <code>canCopy()</code>, <code>canCut()</code>,
            <code>clipboardCopy()</code>, <code>clipboardCut()</code>, <code>getPasteTypes()</code>,
            <code>setName()</code>, <code>getIconBaseWithExtension()</code>.
        </description>
        <class package="org.netbeans.spi.viewmodel" name="ExtendedNodeModel" />
        <class package="org.netbeans.spi.viewmodel" name="ExtendedNodeModelFilter" />
        <class package="org.netbeans.spi.viewmodel" name="Models" />
        <issue number="104281"/>
    </change>
    

</changes>

  <!-- Now the surrounding HTML text and document structure: -->

  <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <======================

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE xml/api/doc/changes/apichanges.xml

-->
    <head>
      <title>View Model API changes by date</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the View Model APIs. Please ask on the 
    <code>nbdev@netbeans.org</code>
    mailing list if you have any questions about the details of a
    change, or are wondering how to convert existing code to be compatible.
</p>

      <hr/><standard-changelists module-code-name="org.netbeans.spi.viewmodel/2"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>
</apichanges>
