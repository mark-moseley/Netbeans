# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

CreatorJavaPalette/ApplicationData=&Application Data
CreatorJavaPalette/WebAppFunctions=&Web App Functions
CreatorJavaPalette/JavaBasics=&Java Basics
CreatorJavaPalette/JavaScript=&JavaScript

CreatorJavaPalette5/ApplicationData=&Application Data
CreatorJavaPalette5/WebAppFunctions=&Web App Functions
CreatorJavaPalette5/JavaBasics=&Java Basics
CreatorJavaPalette5/JavaScript=&JavaScript

# Get JavaBean Property
NAME_java-AccessJavaBean=Get JavaBean Property
HINT_java-AccessJavaBean=Returns JavaBean property
AccessJavaBean=Accessing a JavaBean
Param_Bean_Class=Bean_Class
Param_property_Name=Property

# Compare Substrings
NAME_java-CompareSubStrings=Compare Substrings
HINT_java-CompareSubStrings=Compares substrings
CompareSubStrings1=Compare to Substring
CompareSubStrings2=This clip shows how to compare one string
CompareSubStrings3=with part of another
CompareSubStrings4=TODO: set string1 and string2
CompareSubStrings5=String Comparison
CompareSubStrings6=show the result in a component on the page

# Variable Used by multiple codeclips.
Param_First_String=First_String
Param_Second_String=Second_String
Param_OutputField=Output_Field

# Concatenate Strings
NAME_java-ConcatenateStrings=Concatenate Strings
HINT_java-ConcatenateStrings=Concatenate Strings
ConcatenateStrings1=Concatenating Strings
ConcatenateStrings2=This clip shows how to concatenate two strings in Java
ConcatenateStrings3=and places the result in an text field component
ConcatenateStrings4=TODO: set string1 and string2
ConcatenateStrings5=show the result in a component on the page

# Convert Integer to String
NAME_java-ConvertIntegerString=Convert Integer to String
HINT_java-ConvertIntegerString=Convert Integer to String
ConvertIntegerString1=Convert Integer to String
ConvertIntegerString2=This clip shows how to convert an Integer to
ConvertIntegerString3=a String
ConvertIntegerString4=TODO: define a String and an Integer
ConvertIntegerString5=convert the integer to a string
Param_Enter_any_Number=Enter_any_Number

# Convert String to Integer
NAME_java-ConvertStringInteger=Convert String to Integer
HINT_java-ConvertStringInteger=Convert String to Integer
ConvertStringInteger1=Convert String to Integer
ConvertStringInteger2=This clip shows how to convert a string to
ConvertStringInteger3=an integer value
ConvertStringInteger4=TODO: define a String and an Integer
ConvertStringInteger5=convert the string to an integer
Param_Enter_any_String=Enter_any_String

# Current Date
NAME_jsp-CurrentDate=Show current date
HINT_jsp-CurrentDate=This displays the current date and the time
CurrentDate1=This displays the current date and the time

# For Loop
NAME_java-ForLoop=For Loop
HINT_java-ForLoop=For Loop
ForLoop1=For Loop
ForLoop2=This clip includes a for loop construct
ForLoop3=which adds items to a Listbox component
ForLoop4=TODO: Add a Listbox and a Button to the page
ForLoop5=then place this code in the button action method
ForLoop6=add new items to the list

# Get Cookie
NAME_jsp-GetCookie=Get Cookie
HINT_jsp-GetCookie=Returns all cookies for the page
GetCookie1=Read the cookie property. This returns all cookies for this document
GetCookie2=Look for the start of the cookie named "version"
GetCookie3=If we find a cookie by that name, extract and use its value
GetCookie4=Start of the cookie value
GetCookie5=End of the cookie value
GetCookie6=Extract the value
GetCookie7=Decode it
GetCookie8=Now that we have the cookie value, we can use it.
GetCookie9=In this case, this cookie we previously set to the modification
GetCookie10=date of the document, so we can use it to see if the document has
GetCookie11=changed since the user last visited.

# If-Then-Else
NAME_java-IfThenElse=If-Then-Else
HINT_java-IfThenElse=If-Then-Else
IfThenElse1=If Then Else
IfThenElse2=Demonstrates the use of the if-then-else construct in Java
IfThenElse3=TODO: drag a Text Field, a Static Text and a Button to the page
IfThenElse4=then add this code to the button action method 
IfThenElse5=test condition\n\t
IfThenElse6=if the condition is true, then do the following
IfThenElse7=otherwise do the following
IfThenElse8=end if
Param_String=String
Param_Subject=Subject
Param_User_name=Username
Param_Password=Password

# Array Iterator
NAME_java-Iterator=Array Iterator
HINT_java-Iterator=Iterates through an ArrayList
Iterator1=Iterator 
Iterator2=This clip illustrates how to populate a text area
Iterator3=from an array of values by using an iterator
Iterator4=TODO: The page should have a multi-line text area
Iterator5=and a button.  This code goes in the button_action method
Iterator6=Create a list of items
Iterator7=Initialize the iterator and other variables
Iterator8=Loop through the items, adding each to the text area
Iterator9=end while
IteratorSampleText1=Item1
IteratorSampleText2=Item2
IteratorSampleText3=Item3
IteratorSampleText4=My Items

# Log Messages
NAME_java-LogMessages=Log Messages
HINT_java-LogMessages=Prints message to server log
LogMessage1=Print Message to Server Log
LogMessage2=This clip shows how to put a message 
LogMessage3=in the application server log file
LogMessage4=You can check for this message using the View Server Log
LogMessage5=action on the Deployment Server node in the Server Navigator
Param_Message=Message

# Retrieve Value from Application
NAME_java-RetValFromApplication=Retrieve Value from Application
HINT_java-RetValFromApplication=Retrieves value from Application bean
RetValFromApplication1=Retrieve Value from Application
RetValFromApplication2=An example of retrieving an object's value from the Application scope
RetValFromApplication3=This retrieves the String object myAppValue using the key "name" from the Application

# Retrieve value from request
NAME_java-RetValFromRequest=Retrieve Value from Request
HINT_java-RetValFromRequest=Retrieves value from Request bean
RetValFromRequest1=Retrieve Value from Application
RetValFromRequest2=An example of retrieving an object's value from the Request scope
RetValFromRequest3=This retrieves the String object myReqValue using the key "name" from the Application  

# Retrieve value from Session
NAME_java-RetValFromSession=Retrieve Value from Session
HINT_java-RetValFromSession=Retrieves value from Session bean
RetValFromSession1=Retrieve Value from Session
RetValFromSession2=An example of retrieving an object's value from the Session scope
RetValFromSession3=This retrieves the String object mySessionValue using the key "name" from the Session

# Set cookie
NAME_jsp-SetCookie=Set Cookie
HINT_jsp-SetCookie=This creates a cookie that persists for a year
SetCookie1=This creates a cookie that persists for a year

# Sent email
NAME_java-SendEmail=Send Email
HINT_java-SendEmail=Sends Email
SendEmail1=Send Email
SendEmail2=This clip can be used in a button action
SendEmail3=method to send an e-mail via SMTP
SendEmail4=(if no authentication is required from the mailserver)
SendEmail5=TODO: Create a Text Area component on the page and 
SendEmail6=a Button, place this code in the Button's action method 
SendEmail7=TODO: set the from, to addresses and the mail server
SendEmail8=to address 
SendEmail9=from address 
SendEmail10=the subject line
SendEmail11=the body of the message 
SendEmail12=SMTP server
SendEmail13=user ID
SendEmail14=password
SendEmail15=Get a Session object
SendEmail16=Construct the message
SendEmail17=Set message details
SendEmail18=Send the thing off
Param_From_Address=From
Param_To_Address=To
Param_SMTP_mail_server_name=Server
Smtp_Send_Failed=SMTP send failed
Address_Failed=Address failed
Address=Address
Command=Command
Return_Code=Return Code
Response=Response
Address_Succeeded=Address succeeded
Log_Success=Mail was sent successfully.
Log_Exception=Got Exception 

#Store Value In Application
NAME_java-StoreValInApplication=Store Value in Application
HINT_java-StoreValInApplication=Stores value in Application bean
StoreVallnApplication1=Store Value in Application
StoreVallnApplication2=An example of storing an object value in the Application scope
StoreVallnApplication3=This stores the String "value" with the key "name" in the Application 

#Store Value in Request
NAME_java-StoreValInRequest=Store Value in Request
HINT_java-StoreValInRequest=Stores value in Request bean
StoreVallnRequest1=Store Value in Request 
StoreVallnRequest2=An example of storing an object value in the Request scope
StoreVallnRequest3=This stores the String "value" with the key "name" in the Request

#Store Value in Session
NAME_java-StoreValInSession=Store Value in Session
HINT_java-StoreValInSession=Stores value in Session bean
StoreVallnSession1=Store Value in Session 
StoreVallnSession2=An example of storing an object value in the Session scope
StoreVallnSession3=This stores the String "value" with the key "name" in the Session 

# Switch Statement
NAME_java-SwitchStatement=Switch Statement
HINT_java-SwitchStatement=Switch Statement
SwitchStatement1=TODO: Place a Static Text and a Dropdown on the page
SwitchStatement2=then drag the Travel/PERSON table on to the dropdown list
#SwitchStatement3=Add an integer converter using the Converter property on the
SwitchStatement4=Click the "Auto-submit on change" context menu
SwitchStatement5=item on the dropdown list.
SwitchStatement6=TODO: Place this code in the dropdown1_processValueChange method
SwitchStatement7=Switch statements work only with integers, so define an integer
SwitchStatement8=Now switch based on the names in the list
SwitchStatement9=end switch
SwitchCase1=You chose item 1
SwitchCase2=You chose item 2
SwitchCase3=You chose item 3
SwitchCase4=You chose item 4
SwitchCase5=You chose item 5
SwitchDefault=You chose another item

# Try Catch Exception
NAME_java-TryCatchException=Try Catch Exception
HINT_java-TryCatchException=Try Catch Exception
TryCatchException1=Try Catch Exception
TryCatchException2=This clip shows how to create a try/catch
TryCatchException3=statement to handle possible exceptions
TryCatchException4=TODO: Insert logic that may cause an exception
TryCatchException5=for example, performing database logic or file access
TryCatchException6=print exception information in the server log
TryCatchException7=view log messages using View Server Log menu item 
TryCatchException8=on the Deployment Server node in the Server Navigator
TryCatchException9=TODO: either handle the exception or pass it to the Faces layer
TryCatchException10=throw new FacesException(e);
TryCatchExceptionMessage=Exception Message!!!

# While loop
NAME_java-WhileLoop=While Loop
HINT_java-WhileLoop=While Loop
WhileLoop1=While Loop
WhileLoop2=Using a while loop to perform an action until a
WhileLoop3=condition is satisfied 
WhileLoop4=TODO: Drag a Static Text and a Button to the page
WhileLoop5=TODO: Place this code in the button1_action method
WhileLoop6=Define a control variable
WhileLoop7=Set the condition (i is less than 10)
WhileLoop8=increment i by 1
WhileLoop9=end while
WhileLoop10=Make sure the static text field is empty

