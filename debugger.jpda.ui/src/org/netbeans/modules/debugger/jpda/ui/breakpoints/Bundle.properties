    # The contents of this file are subject to the terms of the Common Development
    # and Distribution License (the License). You may not use this file except in
    # compliance with the License.
#
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html
    # or http://www.netbeans.org/cddl.txt.
    #
    # When distributing Covered Code, include this CDDL Header Notice in each file
    # and include the License file at http://www.netbeans.org/cddl.txt.
    # If applicable, add the following below the CDDL Header, with the fields
    # enclosed by brackets [] replaced by your own identifying information:
    # "Portions Copyrighted [year] [name of copyright owner]"
#
# The Original Software is NetBeans. The Initial Developer of the Original
    # Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.

#BreakpointTypes
    CTL_Java_breakpoint_events_cathegory_name=Java

    CTL_Class_event_type_name=Class
    CTL_Method_event_type_name=Method
    CTL_Exception_event_name_type_name=Exception
    CTL_Variable_event_type_name=Variable
    CTL_Thread_event_type_name=Thread

#ActionsPanel
    L_Actions_Panel_Suspend=&Suspend\:
    ASCD_L_Actions_Panel_Suspend=

    ASCD_CB_Actions_Panel_Suspend=
    LBL_CB_Actions_Panel_Suspend_None=No thread (continue)
    LBL_CB_Actions_Panel_Suspend_Current=Breakpoint thread
    LBL_CB_Actions_Panel_Suspend_All=All threads
    TTT_CB_Actions_Panel_Suspend=

    L_Actions_Panel_Print_Text=Print &Text\:

    ACSD_TF_Actions_Panel_Print_Text=
    TTT_TF_Actions_Panel_Print_Text=Text to be printed when breakpoint occurres.

#ClassBreakpointPanel
    CTL_Class_Breakpoint_Print_Text=Class breakpoint hit for class {className}.

    L_Class_Breakpoint_filter_hint=Class Filter (Set exclusion / non-exclusion filter for classes)
    ACSD_L_Class_Breakpoint_filter_hint=

    L_Class_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Class_Breakpoint_Package_Name=

    TTT_TF_Class_Breakpoint_Package_Name=Specify name of package.
    ACSD_TF_Class_Breakpoint_Package_Name=

    L_Class_Breakpoint_Class_Name=&Class Name\:
    ACSD_L_Class_Breakpoint_Class_Name=

    TTT_TF_Class_Breakpoint_Class_Name=Specify class name or use '*' for all classes from package.
    ACSD_TF_Class_Breakpoint_Class_Name=

    CB_Class_Breakpoint_Exclusion_Filter=&Exclusion Filter
    ACSD_CB_Class_Breakpoint_Exclusion_Filter=
    TTT_CB_Class_Breakpoint_Exclusion_Filter=

    L_Class_Breakpoint_Type=B&reakpoint Set On\:
    ASCD_L_Class_Breakpoint_Type=

    ACSD_CB_Class_Breakpoint_Type=
    TTT_CB_Class_Breakpoint_Type=Select type of event this breakpoint should stop on.
    LBL_Class_Breakpoint_Type_Prepare=Class Prepare
    LBL_Class_Breakpoint_Type_Unload=Class Unload
    LBL_Class_Breakpoint_Type_Prepare_or_Unload=Class Prepare or Unload

    MSG_No_Class_Name_Spec=Class Name should be specified.

#ExceptionBreakpointPanel
    CTL_Exception_Breakpoint_Print_Text=Exception breakpoint hit in {className} at line {lineNumber} by thread {threadName}.

    L_Exception_Breakpoint_filter_hint=(Enter full name of class of exception or error, e.g.\: java.lang.InternalError)
    ACSD_L_Exception_Breakpoint_filter_hint=

    L_Exception_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Exception_Breakpoint_Package_Name=
    ACSD_TF_Exception_Breakpoint_Package_Name=Package name input line

    TTT_CB_Exception_Breakpoint_Package_Name=Type name of package here.

    L_Exception_Breakpoint_Class_Name=&Exception Class Name\:
    ACSD_L_Exception_Breakpoint_Class_Name=

    TTT_CB_Exception_Breakpoint_Class_Name=Select name of exception class here.
    ACSD_CB_Exception_Breakpoint_Class_Name=

    L_Exception_Breakpoint_Type=Stop &On\:
    ASCD_L_Exception_Breakpoint_Type=

    TTT_CB_Exception_Breakpoint_Type=Select type of event this breakpoint should stop on.
    ACSD_CB_Exception_Breakpoint_Type=
    LBL_Exception_Breakpoint_Type_Catched=Caught
    LBL_Exception_Breakpoint_Type_Uncatched=Uncaught
    LBL_Exception_Breakpoint_Type_Catched_or_Uncatched=Caught or Uncaught

    L_Exception_Breakpoint_Condition=&Condition\:
    ACSD_L_Exception_Breakpoint_Condition=

    TTT_TF_Exception_Breakpoint_Condition=Write Java expression here.
    ACSD_TF_Exception_Breakpoint_Condition=

    MSG_No_Exception_Class_Name_Spec=Exception Class Name should be specified.

#MethodBreakpointPanel
    CTL_Method_Breakpoint_Print_Text=Method breakpoint hit in {className}.{methodName} at line {lineNumber} by thread {threadName}.

    L_Method_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Method_Breakpoint_Package_Name=

    ACSD_TF_Method_Breakpoint_Package_Name=
    TTT_TF_Method_Breakpoint_Package_Name=Enter name of package here.

    L_Method_Breakpoint_Class_Name=&Class Name\:
    ACSD_L_Method_Breakpoint_Class_Name=

    ACSD_TF_Method_Breakpoint_Class_Name=
    TTT_TF_Method_Breakpoint_Class_Name=Enter name of class here.

    L_Method_Breakpoint_Method_Name=&Method Name\:
    ACSD_L_Method_Breakpoint_Method_Name=
    Method_Breakpoint_ALL_METHODS=<all methods>

    TTT_TF_Method_Breakpoint_Method_Name=Enter name of method here.
    ACSD_TF_Method_Breakpoint_Method_Name=

    ACSD_CB_Method_Breakpoint_All_Methods=
    TTT_CB_Method_Breakpoint_All_Methods=Check if you would like to stop in all methods in given class.
    CB_Method_Breakpoint_All_Methods=All Methods for &Given Classes

    
    LBL_CB_MethodEntry=Stop On Method &Entry
    TTT_CB_MethodEntry=Stop when the method is entered

    LBL_CB_MethodExit=Stop On Method E&xit
    TTT_CB_MethodExit=Stop when the method is to be returned from


    ACSD_L_Method_Breakpoint_Condition=
    L_Method_Breakpoint_Condition=Co&ndition\:

    TTT_TF_Method_Breakpoint_Condition=Write Java expression here. A special "return" variable name can be used to reference returned value from method exit breakpoints.
    ACSD_TF_Method_Breakpoint_Condition=

    MSG_No_Class_or_Method_Name_Spec=Class Name and Method Name should be specified.

#FieldBreakpointPanel
    CTL_Field_Breakpoint_Print_Text=Field breakpoint hit at line {lineNumber} in class {className} by thread {threadName}.

    L_Field_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Field_Breakpoint_Package_Name=

    ACSD_TF_Field_Breakpoint_Package_Name=
    TTT_TF_Field_Breakpoint_Package_Name=Enter name of package here.

    L_Field_Breakpoint_Class_Name=&Class Name\:
    ACSD_L_Field_Breakpoint_Class_Name=

    ACSD_TF_Field_Breakpoint_Class_Name=
    TTT_TF_Field_Breakpoint_Class_Name=Enter name of class here.

    L_Field_Breakpoint_Field_Name=&Field Name\:
    ACSD_L_Field_Breakpoint_Field_Name=

    TTT_TF_Field_Breakpoint_Field_Name=Enter name of field here.
    ACSD_TF_Field_Breakpoint_Field_Name=

    L_Field_Breakpoint_Type=Stop &On\:
    ACSD_L_Field_Breakpoint_Type=

    TTT_CB_Field_Breakpoint_Type=Select type of breakpoint here.
    ACSD_CB_Field_Breakpoint_Type=
    LBL_Field_Breakpoint_Type_Access=Variable Access
    LBL_Field_Breakpoint_Type_Modification=Variable Modification

    L_Field_Breakpoint_Condition=Co&ndition\:
    ACSD_L_Field_Breakpoint_Condition=

    ACSD_TF_Field_Breakpoint_Condition=
    TTT_TF_Field_Breakpoint_Condition=Write Java expression here.

    MSG_No_Class_or_Field_Name_Spec=Class Name and Field Name should be specified.

#ThreadBreakpointPanel
    CTL_Thread_Breakpoint_Print_Text=Thread breakpoint hit by thread {threadName}.

    L_Thread_Breakpoint_Type=Set Breakpoint &On\:
    ACSD_L_Thread_Breakpoint_Type=

    TTT_CB_Thread_Breakpoint_Type=Select type of breakpoint here.
    ACSD_CB_Thread_Breakpoint_Type=
    LBL_Thread_Breakpoint_Type_Start=Thread Start
    LBL_Thread_Breakpoint_Type_Death=Thread Death
    LBL_Thread_Breakpoint_Type_Start_or_Death=Thread Start or Death


#LineBreakpointPanel
    #L_Line_Breakpoint_Project_Name=Project\:
    #MN_L_Line_Breakpoint_Project_Name=P
    #ASCD_L_Line_Breakpoint_Project_Name=Project
    #ASCD_TF_Line_Breakpoint_Project_Name=Project
    #TTT_TF_Line_Breakpoint_Project_Name=Project

    CTL_Line_Breakpoint_Print_Text=Breakpoint hit at line {lineNumber} in class {className} by thread {threadName}.

    L_Line_Breakpoint_File_Name=&File\:
    ACSD_L_Line_Breakpoint_File_Name=File
    ACSD_TF_Line_Breakpoint_File_Name=File
    TTT_TF_Line_Breakpoint_File_Name=File Name

    L_Line_Breakpoint_Line_Number=L&ine number\:
    ACSD_L_Line_Breakpoint_Line_Number=Line number
    ACSD_TF_Line_Breakpoint_Line_Number=Line number
    TTT_TF_Line_Breakpoint_Line_Number=Line number to stop at

    L_Line_Breakpoint_Condition=Co&ndition:
    ACSD_L_Line_Breakpoint_Condition=Condition
    ACSD_TF_Line_Breakpoint_Condition=Condition
    TTT_TF_Line_Breakpoint_Condition=Breakpoint hits if the expression evaluates to true

    MSG_No_Line_Number_Spec=Line number should be specified.
    MSG_TooBig_Line_Number_Spec=The line number {0} is too big. Maximum line number is {1}.
    MSG_NonPositive_Line_Number_Spec=A positive line number should be specified.

L_Actions_Panel_BorderTitle=Actions

L_Class_Breakpoint_BorderTitle=Settings

L_Exception_Breakpoint_BorderTitle=Settings

L_Field_Breakpoint_BorderTitle=Settings

L_Line_Breakpoint_BorderTitle=Settings

L_Method_Breakpoint_BorderTitle=Settings

L_Thread_Breakpoint_BorderTitle=Settings

