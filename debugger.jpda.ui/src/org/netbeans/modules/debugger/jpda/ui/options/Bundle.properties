# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2009 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2009 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

LBL_JavaDebugger=Java Debugger
HINT_JavaDebugger=Options for Java Debugger
KW_JavaDebugger=debug

CategoryPanelGeneral.stopOnExceptionsCheckBox.text=Stop on uncaught &exceptions
CategoryPanelGeneral.applyCodeChangesCheckBox.text=&Apply code changes after save (in "Compile on Save" mode only)
CategoryPanelGeneral.breakpointsSuspendLabel.text=New breakpoints &suspend
CategoryPanelGeneral.breakpointsSuspendCB.allThreads=all threads
CategoryPanelGeneral.breakpointsSuspendCB.breakpointThread=breakpoint thread
CategoryPanelGeneral.breakpointsSuspendCB.noThread=no thread (logging)
CategoryPanelGeneral.stepsResumeLabel.text=Steps &resume
CategoryPanelGeneral.stepsResumeCB.allThreads=all threads
CategoryPanelGeneral.stepsResumeCB.currentThread=current thread only

CategoryPanelStepFilters.useStepFiltersCheckBox.text=&Do not step into
CategoryPanelStepFilters.filterSyntheticCheckBox.text=&synthetic methods
CategoryPanelStepFilters.filterStaticInitCheckBox.text=static &initializers
CategoryPanelStepFilters.filterConstructorsCheckBox.text=&constructors
CategoryPanelStepFilters.filterClassesLabel.text=classes &matching:
CategoryPanelStepFilters.stepThroughFiltersCheckBox.text=Step &through the filters to reach unfiltered code
CategoryPanelStepFilters.filterAddButton.text=&Add...
CategoryPanelStepFilters.filterRemoveButton.text=&Remove
CategoryPanelStepFilters.filtersCheckAllButton.text=C&heck All
CategoryPanelStepFilters.filtersUncheckAllButton.text=U&ncheck All

CategoryPanelFormatters.formattersAddButton.text=&Add...
CategoryPanelFormatters.formattersRemoveButton.text=&Remove
CategoryPanelFormatters.formattersRemoveButton.tooltip=Default formatters can not be removed. Uncheck them instead.
CategoryPanelFormatters.copyButton.text=&Copy
CategoryPanelFormatters.editButton.text=&Edit...
CategoryPanelFormatters.editButton.tooltip=Default formatters can not be edited. Use Copy to make modifications.
CategoryPanelFormatters.formattersMoveUpButton.text=Move &Up
CategoryPanelFormatters.formattersMoveDownButton.text=Move &Down
CategoryPanelFormatters.formatterNameLabel.text=Formatter Details
CategoryPanelFormatters.formatterClassTypesLabel.text=C&lass Types:
CategoryPanelFormatters.formatValueLabel.text=&Value formatted as a result of code snippet:
CategoryPanelFormatters.formatChildrenLabel.text=C&hildren displayed if
CategoryPanelFormatters.formatChildrenLabelNoTestCode.text=C&hildren displayed as a result of code snippet:
CategoryPanelFormatters.formatChildrenLabelNoTestVars.text=C&hildren displayed as a list of variables:
CategoryPanelFormatters.formatChildrenListTable.Name=Name
CategoryPanelFormatters.formatChildrenListTable.Value=Value
CategoryPanelFormatters.addDLG.nameLabel=Name:
CategoryPanelFormatters.addDLG.title=Add Variable Formatter
TTL_AddFormatter=Add Variable Formatter
TTL_EditFormatter=Edit Variable Formatter

JavaDebuggerPanel.categoriesLabel.text=Categories:
JavaDebuggerPanel.categoryRadioButtonGeneral.text=General
JavaDebuggerPanel.categoryRadioButtonStepFilters.text=Step Filters
JavaDebuggerPanel.categoryRadioButtonFormatters.text=Variable Formatters
CategoryPanelGeneral.openDebuggerConsoleCheckBox.text=Open Debugger &Console for debugging session
VariableFormatterEditPanel.nameLabel.text=Formatter &Name:
VariableFormatterEditPanel.nameTextField.text=
VariableFormatterEditPanel.classTypesLabel.text=&Class types:
VariableFormatterEditPanel.classTypesTextField.text=
VariableFormatterEditPanel.subtypesCheckBox.text=including &subtypes
VariableFormatterEditPanel.valueFormatCheckBox.text=&Value formatted as a result of code snippet:
VariableFormatterEditPanel.childrenFormatCheckBox.text=C&hildren displayed as
VariableFormatterEditPanel.childrenCodeRadioButton.text=result of c&ode snippet:
VariableFormatterEditPanel.childrenVariablesRadioButton.text=&list of variables:
VariableFormatterEditPanel.addVarButton.text=&Add
VariableFormatterEditPanel.removeVarButton.text=&Remove
VariableFormatterEditPanel.moveUpVarButton.text=Move &Up
VariableFormatterEditPanel.moveDownVarButton.text=Move &Down
VariableFormatterEditPanel.testChildrenCheckBox.text=&Test expression if variable can be expanded:
VariableFormatterEditPanel.testChildrenCheckBox.tooltip=No children if expression evaluates to false.
MSG_EmptyFormatterName=A formatter name needs to be provided.
MSG_EmptyClassName=A class name needs to be provided.
MSG_InvalidClassNameAtPos=Invalid class name at position {0}.
MSG_ExistingFormatterName=Formatter of this name already exists.
MSG_NoFormatSelected=Either Value, Children or both need to be formatted.
CategoryPanelFormatters.subtypesLabel.text=(including subtypes)
CategoryPanelFormatters.formatChildrenLabelIf.text=is true
CategoryPanelFormatters.childrenCodeLabel.text=as a result of c&ode snippet:
CategoryPanelFormatters.childrenVarsLabel.text=as &list of variables:
CategoryPanelFormatters.testChildrenTextField.text=
CategoryPanelFormatters.formattersMoveButtons.tooltip=Allows to change order - first applicable formatter from the top of the list is used.
VariableFormatterEditPanel.classTypesLabel.tooltip=Comma-separated list of fully qualified class names, whose instances are formatted.
CategoryPanelStepFilters.filterClassesLabel.a11y.name=Matching Classes
CategoryPanelStepFilters.filterClassesLabel.a11y.description=Do not step into classes matching items in this list.
CategoryPanelFormatters.formattersList.a11y.name=Formatters List
CategoryPanelFormatters.formattersList.a11y.description=List of variable formatters.
VariableFormatterEditPanel.childrenVariablesTable.a11y.name=List of Variables
VariableFormatterEditPanel.childrenVariablesTable.a11y.description=Children displayed as this list of variables.
