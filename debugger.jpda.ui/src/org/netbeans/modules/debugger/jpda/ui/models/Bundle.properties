    # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
    #
    # Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
    #
    # The contents of this file are subject to the terms of either the GNU
    # General Public License Version 2 only ("GPL") or the Common
    # Development and Distribution License("CDDL") (collectively, the
    # "License"). You may not use this file except in compliance with the
    # License. You can obtain a copy of the License at
    # http://www.netbeans.org/cddl-gplv2.html
    # or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
    # specific language governing permissions and limitations under the
    # License.  When distributing the software, include this License Header
    # Notice in each file and include the License file at
    # nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
    # particular file as subject to the "Classpath" exception as provided
    # by Sun in the GPL Version 2 section of the License file that
    # accompanied this code. If applicable, add the following below the
    # License Header, with the fields enclosed by brackets [] replaced by
    # your own identifying information:
    # "Portions Copyrighted [year] [name of copyright owner]"
    #
    # Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
    # Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
    #
    # If you wish your version of this file to be governed by only the CDDL
    # or only the GPL Version 2, indicate your decision by adding
    # "[Contributor] elects to include this software in this distribution
    # under the [CDDL or GPL Version 2] license." If you do not indicate a
    # single choice of license, a recipient has the option to distribute
    # your version of this file under either the CDDL, the GPL Version 2 or
    # to extend the choice of license to its licensees as provided above.
    # However, if you add GPL Version 2 code and therefore, elected the GPL
    # Version 2 license, then the option applies only if the new code is
    # made subject to such option by the copyright holder.



#BreakpointActionsProvider
CTL_Breakpoint_Customizer_Title=Customize Breakpoint
ACSD_Breakpoint_Customizer_Dialog=Customize this breakpoint's properties

#BreakpointsNodeModel
CTL_Line_Breakpoint=Line {0}:{1}
CTL_Thread_Started_Breakpoint=Thread started
CTL_Thread_Death_Breakpoint=Thread death
CTL_Thread_Breakpoint=Thread start / death
CTL_Field_Access_Breakpoint=Field {0}.{1} access
CTL_Field_Modification_Breakpoint=Field {0}.{1} modification
CTL_Field_Access_or_Modification_Breakpoint=Field {0}.{1} access or modification
CTL_Method_Breakpoint=Method {0}.{1}
CTL_All_Methods_Breakpoint=Methods {0}
CTL_Class_Loaded_Breakpoint=Class {0} prepare
CTL_Class_Unloaded_Breakpoint=Class {0} unload
CTL_Class_Breakpoint=Class {0} prepare / unload
CTL_Exception_Catched_Breakpoint=Exception {0} caught
CTL_Exception_Uncatched_Breakpoint=Exception {0} uncaught
CTL_Exception_Breakpoint=Exception {0}

CTL_APPEND_BP_Valid=[Submitted]
CTL_APPEND_BP_Invalid=[Invalid]
CTL_APPEND_BP_Invalid_with_reason=[Invalid, reason: {0}]


#WatchesActionsProvider
CTL_WatchAction_AddNew = New watch ...
CTL_WatchAction_DeleteAll = Delete All
CTL_WatchAction_Delete = Delete
CTL_WatchAction_Customize = Customize
CTL_Edit_Watch_Dialog_Title=Customize - {0}
CTL_New_Watch_Dialog_Title=New watch expression


#LocalsDisplayFilter
CTL_Variable_DisplayAs_Popup = Display As
CTL_Variable_DisplayAs_Decimal = Decimal
CTL_Variable_DisplayAs_Hexadecimal = Hexadecimal
CTL_Variable_DisplayAs_Octal = Octal
CTL_Variable_DisplayAs_Binary = Binary
CTL_Variable_DisplayAs_Character = Character

#SessionsView
CTL_Session_Resume_Threads = Scope
CTL_Session_Resume_All_Threads = Debug All Threads
CTL_Session_Resume_Current_Thread = Debug Current Thread
CTL_Session_Popup_Language = Language

#BreakpointsActionsProvider
CTL_Breakpoint_Customize_Label = Customize

#ThreadsTableModel
CTL_Thread_State_OnMonitor = On Monitor
CTL_Thread_State_NotStarted = Not Started
CTL_Thread_State_Running = Running
CTL_Thread_State_Sleeping = Sleeping
CTL_Thread_State_Unknown = Unknown
CTL_Thread_State_Waiting = Waiting
CTL_Thread_State_Zombie = Zombie
CTL_ThreadAction_Interrupt_Label=Interrupt

#CallStackTableModel
MSG_Callstack_NoInformation = no info
NoCurrentThread=There is no current thread to display the call stack for.
ThreadIsRunning=The current thread is running - no call stack is available.

MSG_NoSourceInfo=No source information is available.

#SessionsTableModel
MSG_Session_State_Disconnected = Disconnected
MSG_Session_State_Running = Running
MSG_Session_State_Starting = Starting
MSG_Session_State_Stopped = Stopped

#CallStackNodeModel
CTL_CallstackModel_Column_Name_Name = Name
CTL_CallstackModel_Column_Name_Desc = Name of stack frame

#ClassesActionsProvider
LBL_change_package_type=&View Packages as
ChangePackageViewTypeAction_list=&List
ChangePackageViewTypeAction_tree=&Tree

#ClassesNodeModel
CTL_ClassesModel_Column_Name_Name = Name
CTL_ClassesModel_Column_Name_Mnc=N
CTL_ClassesModel_Column_Name_Desc = Name of class or package
CTL_ClassesModel_Column_Name_AppClassLoader = Application Class Loader
CTL_ClassesModel_Column_Name_ClassLoader = Class Loader {0}
CTL_ClassesModel_Column_Name_SystemClassLoader = System Class Loader
CTL_ClassesModel_Column_Name_Package = Package {0}
CTL_ClassesModel_Column_Name_Class = Class {0}
CTL_ClassesModel_Column_Name_Interface = Interface {0}
CTL_ClassesModel_Column_Name_LoadedBy = loaded by {0}

#MonitorModel
CTL_MonitorModel_Column_ContendedMonitor = Contended Monitor: {0} ({1})
CTL_MonitorModel_Column_OwnedMonitors = Owned Monitors
CTL_MonitorModel_Column_Monitor = Monitor {0} ({1})

#SourcesModel
CTL_SourcesModel_Column_Name_Name=Source Root / Filter
CTL_SourcesModel_Column_Name_Name_Mnc=S
CTL_SourcesModel_Column_Name_Desc=Sources origin
CTL_SourcesModel_Column_Debugging_Name = Use for debugging
CTL_SourcesModel_Column_Debugging_Name_Mnc=U
CTL_SourcesModel_Column_Debugging_Desc = Should this source root be used for debugging?
CTL_SourcesModel_Action_AddFilter = Add Class Exclusion Filter
CTL_SourcesModel_NewFilter_Filter_Label = Class Exclusion &Filter:
CTL_SourcesModel_NewFilter_Title = Add Class Exclusion Filter Dialog
CTL_SourcesModel_Action_Delete = Delete
CTL_SourcesModel_Name_DoNotStopIn = Do not stop in: 
CTL_SourcesModel_Action_AddSrc = Add Source Root
CTL_SourcesModel_AddSrc_Chooser_Filter_Description = Directories
CTL_SourcesModel_AddSrc_Btn = Add

#ThreadsModel
CTL_ThreadsModel_Column_Name_Name = Name
CTL_ThreadsModel_Column_Name_Desc = Displayes all threads for current session
CTL_ThreadsModel_State_Unknown = Unknown
CTL_ThreadsModel_State_Monitor = Waiting on synchronized block
CTL_ThreadsModel_State_ConcreteMonitor = Waiting on synchronized block ({0})
CTL_ThreadsModel_State_NotStarted = Not Started
CTL_ThreadsModel_State_Running = Running
CTL_ThreadsModel_State_Sleeping = Sleeping
CTL_ThreadsModel_State_Waiting = Waiting
CTL_ThreadsModel_State_WaitingOn = Waiting on {0}
CTL_ThreadsModel_State_Zombie = State Zombie

#WatchesModel
CTL_WatchesModel_Column_Name_Name = Name

#ThreadsActionsProvider
CTL_ThreadAction_MakeCurrent_Label = Make Current
CTL_ThreadAction_GoToSource_Label = Go To Source
CTL_ThreadAction_Suspend_Label = Suspend
CTL_ThreadAction_Resume_Label = Resume

#ThreadsActionsProvider
CTL_CallstackAction_MakeCurrent_Label = Make Current
CTL_CallstackAction_PopToHere_Label = Pop To Here
CTL_CallstackAction_Copy2CLBD_Label = Copy Stack
 
#VariablesTreeModelFilterSI
MSG_VariablesFilter_StaticNode = Static
MSG_VariablesFilter_InheritedNode = Inherited

#VariablesNodeModel
CTL_LocalsModel_Column_Name_Desc = Locals Root
CTL_LocalsModel_Column_Name_Name = Name
CTL_LocalsModel_Column_Name_SubArray = [{0} - {1}]
CTL_LocalsModel_Column_Descr_SubArray = Array elements from {0} to {1}.
NoCurrentThreadVar=There is no current thread to display the variables for.
CTL_No_Info=Variable information is not available, source compiled without -g option.
CTL_No_Info_descr=Variable information is not available (assure that the code is compiled with -g option).
TTP_NewWatch=Write or paste a new watch expression.

MSG_VariablesFilter_StaticNode_descr = The static context
MSG_VariablesFilter_Class_descr = The current class object
MSG_VariablesFilter_Return_descr = The return value of ''{0}'' method.
beforeOperation=Before call to ''{0}()''
beforeOperation_descr=The program is suspended right before the call to ''{0}()'' method.
afterOperation=After return from ''{0}()''
afterOperation_descr=The program is suspended right after return from ''{0}()'' method.
lastOperationsNode = Return values history
MSG_LastOperations_descr = The values of sub-expressions stepped over by expression step.
operationArgumentsNode = Arguments
operationArgumentsNode_descr = Arguments that are passed to ''{0}'' method.
NativeMethod = No arguments available for native methods
NativeMethod_descr = It is not possible to retrieve arguments for native methods.

#VariablesTableModel
# When the information is not available
MSG_NA=N/A

#VariablesActionProvider
CTL_GoToSource=Go to Source

