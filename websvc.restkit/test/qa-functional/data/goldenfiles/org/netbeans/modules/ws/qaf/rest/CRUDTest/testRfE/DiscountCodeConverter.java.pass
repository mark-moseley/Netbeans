/*
 *  DiscountCodeConverter
 *
 * Created on July 8, 2008, 10:54 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package o.n.m.ws.qaf.rest.crud.converter;

import java.math.BigDecimal;
import java.net.URI;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlAttribute;
import javax.ws.rs.core.UriBuilder;
import o.n.m.ws.qaf.rest.crud.DiscountCode;
import o.n.m.ws.qaf.rest.crud.service.PersistenceService;


/**
 *
 * @author lukas
 */

@XmlRootElement(name = "discountCode")
public class DiscountCodeConverter {
    private DiscountCode entity;
    private URI uri;
    private int expandLevel;
    
    /** Creates a new instance of DiscountCodeConverter */
    public DiscountCodeConverter() {
    }

    /**
     * Creates a new instance of DiscountCodeConverter.
     *
     * @param entity associated entity
     * @param uri associated uri
     * @param expandLevel indicates the number of levels the entity graph should be expanded@param isUriExtendable indicates whether the uri can be extended
     */
    public DiscountCodeConverter(DiscountCode entity, URI uri, int expandLevel, boolean isUriExtendable) {
        this.entity = entity;
        this.uri = (isUriExtendable) ? UriBuilder.fromUri(uri).path(entity.getDiscountCode() + "/").build() : uri;
        this.expandLevel = expandLevel;
    }

    /**
     * Creates a new instance of DiscountCodeConverter.
     *
     * @param entity associated entity
     * @param uri associated uri
     * @param expandLevel indicates the number of levels the entity graph should be expanded
     */
    public DiscountCodeConverter(DiscountCode entity, URI uri, int expandLevel) {
        this(entity, uri, expandLevel, false);
    }

    /**
     * Getter for discountCode.
     *
     * @return value for discountCode
     */
    @XmlElement
    public Character getDiscountCode() {
        return (expandLevel > 0) ? getEntity().getDiscountCode() : null;
    }

    /**
     * Setter for discountCode.
     *
     * @param value the value to set
     */
    public void setDiscountCode(Character value) {
        getEntity().setDiscountCode(value);
    }

    /**
     * Getter for rate.
     *
     * @return value for rate
     */
    @XmlElement
    public BigDecimal getRate() {
        return (expandLevel > 0) ? getEntity().getRate() : null;
    }

    /**
     * Setter for rate.
     *
     * @param value the value to set
     */
    public void setRate(BigDecimal value) {
        getEntity().setRate(value);
    }

    /**
     * Getter for customerCollection.
     *
     * @return value for customerCollection
     */
    @XmlElement
    public CustomersConverter getCustomerCollection() {
        if (expandLevel > 0) {
            if (getEntity().getCustomerCollection() != null) {
                return new CustomersConverter(getEntity().getCustomerCollection(), uri.resolve("customerCollection/"), expandLevel - 1);
            }
        }
        return null;
    }

    /**
     * Setter for customerCollection.
     *
     * @param value the value to set
     */
    public void setCustomerCollection(CustomersConverter value) {
        getEntity().setCustomerCollection((value != null) ? value.getEntities() : null);
    }

    /**
     * Returns the URI associated with this converter.
     *
     * @return the uri
     */
    @XmlAttribute
    public URI getUri() {
        return uri;
    }

    /**
     * Sets the URI for this reference converter.
     *
     */
    public void setUri(URI uri) {
        this.uri = uri;
    }

    /**
     * Returns the DiscountCode entity.
     *
     * @return an entity
     */
    @XmlTransient
    public DiscountCode getEntity() {
        if (entity == null) {
            entity = new DiscountCode();
        }
        return entity;
    }

    /**
     * Returns the resolved DiscountCode entity.
     *
     * @return an resolved entity
     */
    public DiscountCode resolveEntity() {
        if (entity != null) {
            return PersistenceService.getInstance().resolveEntity(DiscountCode.class, entity.getDiscountCode());
        } else {
            return (DiscountCode) UriResolver.getInstance().resolve(DiscountCodeConverter.class, uri);
        }
    }
}
