/*
 * SemanticHighlightingOptionsPanel.java
 *
 * Created on December 10, 2007, 4:12 PM
 */

package org.netbeans.modules.cnd.highlight.semantic.options;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.openide.util.NbBundle;

/**
 *
 * @author  Sergey Grinev
 */
public class SemanticHighlightingOptionsPanel extends javax.swing.JPanel implements ActionListener{
    
    public SemanticHighlightingOptionsPanel() {
        initComponents();
        cbKeepMarks.addActionListener(this);
        setName("TAB_SemanticHighlightingTab"); // NOI18N (used as a pattern...)
    }

    // for OptionsPanelSupport
    private boolean isChanged = false;
    
    void applyChanges() {
        SemanticHighlightingOptions.setEnableMarkOccurences(cbMarkOccurrences.isSelected());
        SemanticHighlightingOptions.setKeepMarks(cbKeepMarks.isSelected());
        isChanged = false;
    }

    void update() {
        cbMarkOccurrences.setSelected(SemanticHighlightingOptions.getEnableMarkOccurences());
        cbKeepMarks.setSelected(SemanticHighlightingOptions.getKeepMarks());
        updateValidation();
    }
    
    void cancel() {
        isChanged = false;
    }

    boolean isChanged() {
        return isChanged;
    }

    public void actionPerformed(ActionEvent e) {
        isChanged = true;
    }
    
    private void updateValidation() {
        cbKeepMarks.setEnabled(cbMarkOccurrences.isSelected());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbKeepMarks = new javax.swing.JCheckBox();
        cbMarkOccurrences = new javax.swing.JCheckBox();

        cbKeepMarks.setText(getString("KeepMarks"));

        cbMarkOccurrences.setText(getString("EnableMarkOccurrences"));
        cbMarkOccurrences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMarkOccurrencesActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(cbKeepMarks))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(cbMarkOccurrences)))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(cbMarkOccurrences)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbKeepMarks)
                .addContainerGap(238, Short.MAX_VALUE))
        );

        cbMarkOccurrences.getAccessibleContext().setAccessibleName(getString("EnableMarkOccurrences_AccessibleName"));
    }// </editor-fold>//GEN-END:initComponents

    private void cbMarkOccurrencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMarkOccurrencesActionPerformed
        this.actionPerformed(null);
        updateValidation();
    }//GEN-LAST:event_cbMarkOccurrencesActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbKeepMarks;
    private javax.swing.JCheckBox cbMarkOccurrences;
    // End of variables declaration//GEN-END:variables

    private static String getString(String key) {
        return NbBundle.getMessage(SemanticHighlightingOptionsPanel.class, key);
    }
}
