package com.foo.bar;

import javax.management.*;
import java.util.*;
import java.lang.reflect.Constructor;

public class Dynamic4 extends Dynamic4Support
{
    /* Creates a new instance of Dynamic4 */
    public Dynamic4()
    {
        buildDynamicMBeanInfo();
    }
    
    /**
     * Gets the value of the specified attribute of the DynamicMBean.
     * @param attributeName The attribute name
     */
    public Object getAttribute(String attributeName)
    throws AttributeNotFoundException,
            MBeanException,
            ReflectionException  {

        throw new AttributeNotFoundException("Unknown Attribute "
            + attributeName);
    }
    
    /**
     * Sets the value of the specified attribute of the DynamicMBean.
     * @param attribute The attribute to set
     */
    public void setAttribute(Attribute attribute)
    throws AttributeNotFoundException,
            InvalidAttributeValueException,
            MBeanException,
            ReflectionException  {

        throw new AttributeNotFoundException("Unknown Attribute "
            + attribute.getName());
    }
    
    /**
     * Allows an operation to be invoked on the DynamicMBean.
     */
    public Object invoke(String operationName,
            Object params[],
            String signature[])
            throws MBeanException, ReflectionException  {

        throw new MBeanException(
            new IllegalArgumentException("Unknown Operation " +
            operationName));
    }
    
    /**
     * Create the MBeanInfoConstructors.
     * WARNING : if you add constructors to Dynamic4 class,
     * you will have to update this method.
     */
    private MBeanConstructorInfo[] createConstructors() {
        return super.createConstructors(getClass());
    }
    
    /**
     * you shouldn't update the following code.
     */
    public MBeanInfo getMBeanInfo() {
        return dMBeanInfo;
    }
    
    /**
     * Build the private dMBeanInfo field,
     * which represents the management interface exposed by the MBean,
     * that is, the set of attributes, constructors, operations and
     * notifications which are available for management.
     *
     * A reference to the dMBeanInfo object is returned by the getMBeanInfo()
     * method of the DynamicMBean interface. Note that, once constructed,
     * an MBeanInfo object is immutable.
     */
    private void buildDynamicMBeanInfo()  {
        MBeanAttributeInfo[] dAttributes = new MBeanAttributeInfo[] {
        };
        MBeanConstructorInfo[] dConstructors = createConstructors();
        MBeanOperationInfo[] dOperations = new MBeanOperationInfo[] {
        };
        dMBeanInfo = new MBeanInfo("Dynamic4",
            "Dynamic4 Description",
            dAttributes,
            dConstructors,
            dOperations,
            getNotificationInfo());
    }
    
    public  MBeanNotificationInfo[] getNotificationInfo() {
        return new MBeanNotificationInfo[] {};
    }
    
    private MBeanInfo dMBeanInfo;
}
