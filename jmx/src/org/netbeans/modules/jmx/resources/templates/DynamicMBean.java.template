/**
 * __NAME__.java
 *
 * Created on __DATE__, __TIME__
 */
package Template.Classes;
import javax.management.*;
import java.lang.reflect.Constructor;

/**
 * __NAME__ Dynamic MBean
 * {0}
 * @author __USER__
 */
public class __NAME__ extends __NAME__DynamicSupport
{
   /* Creates a new instance of __NAME__ */
    public __NAME__()
    {
        buildDynamicMBeanInfo();
    }

   /**
    * Gets the value of the specified attribute of the DynamicMBean.
    * @param attributeName The attribute name
    */
   public Object getAttribute(String attributeName)
       throws AttributeNotFoundException,
              MBeanException,
              ReflectionException {
        throw new AttributeNotFoundException("Unknown Attribute "
                      + attributeName);
   }

   /**
    * Sets the value of the specified attribute of the DynamicMBean.
    * @param attribute The attribute to set
    */
   public void setAttribute(Attribute attribute)
       throws AttributeNotFoundException,
              InvalidAttributeValueException,
              MBeanException,
              ReflectionException {
        throw new AttributeNotFoundException("Unknown Attribute "
                      + attribute.getName());
   }

   /**
    * Allows an operation to be invoked on the DynamicMBean.
    */
   public Object invoke(String operationName,
                        Object params[],
                        String signature[])
       throws MBeanException, ReflectionException {
       throw new MBeanException(
              new IllegalArgumentException("Unknown Operation " +
                                           operationName));
   }

   /**
    * Create the MBeanInfoConstructors.
    * WARNING : if you add constructors to __NAME__ class,
    * you will have to update this method.
    */
   // <editor-fold defaultstate="collapsed" desc=" MBeanInfo Support Code ">
   private MBeanConstructorInfo[] createConstructors() {
       return super.createConstructors(getClass());
   }

   /**
    * you shouldn't update the following code.
    */
   public MBeanInfo getMBeanInfo() {
       return dMBeanInfo;
   }

   /**
    * Build the private dMBeanInfo field,
    * which represents the management interface exposed by the MBean,
    * that is, the set of attributes, constructors, operations and
    * notifications which are available for management.
    *
    * A reference to the dMBeanInfo object is returned by the getMBeanInfo()
    * method of the DynamicMBean interface. Note that, once constructed,
    * an MBeanInfo object is immutable.
    */
   private void buildDynamicMBeanInfo() {
       MBeanAttributeInfo[] dAttributes = new MBeanAttributeInfo[] {0};
       MBeanConstructorInfo[] dConstructors = createConstructors();
       {1}MBeanOperationInfo[] dOperations = new MBeanOperationInfo[] {2};
       dMBeanInfo = new MBeanInfo("__NAME__",
                                  "{3}",
                                  dAttributes,
                                  dConstructors,
                                  dOperations,
                                  getNotificationInfo());
   }
   // </editor-fold>

    public  MBeanNotificationInfo[] getNotificationInfo() {
         return new MBeanNotificationInfo[] {};
    } 

    private MBeanInfo dMBeanInfo;
}
