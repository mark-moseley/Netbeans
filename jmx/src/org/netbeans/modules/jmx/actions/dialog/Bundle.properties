#                 Sun Public License Notice
#
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
#
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 2004-2005 Sun
# Microsystems, Inc. All Rights Reserved.

#
# for dialogs of popup actions
#
LBL_RegisterMBeanAction.Title=Instantiate and Register MBean
LBL_Action_AddMBeanRegistrationIntf.Title=Implement MBeanRegistration Interface
LBL_AddAttributesAction.Title=Add MBean Attributes
LBL_AddOperationsAction.Title=Add MBean Operations
LBL_AddNotifAction.Title=Implement NotificationEmitter Interface
LBL_GenJUnitTestAction.Title=Create JUnit Test
LBL_MBean_Class_Info=Select an MBean class from the list of the currently discovered MBeans in the project,\n\
or type in a new one.
LBL_MBean_Class=&MBean Class:
LBL_Class=&Java Class:
LBL_ObjectName=&ObjectName:
LBL_StandardMBean_ObjectName=MBean O&bjectName:
LBL_RegisterUserMBean=&Register an Existing MBean
LBL_RegisterStandardMBean=Register Java Object wrapped in a &StandardMBean
LBL_Constructor=Cons&tructor:
LBL_Attributes=A&ttributes:
LBL_Operations=&Operations:
LBL_StandardMBean_Constructor=Co&nstructor:
LBL_Interface=Management &Interface:
LBL_Keep_References=&Generate private fields for preRegister parameters
LBL_Button_RemoveAttribute=&Remove Attribute
LBL_Button_AddNotification=&Add Notification
LBL_Button_RemoveNotification=&Remove Notification
LBL_Button_AddAttribute=&Add Attribute
LBL_Button_AddOperation=&Add Operation
LBL_Button_RemoveOperation=&Remove Operation
LBL_NoAttribute=You must specify at least one attribute.
LBL_NoOperation=You must specify at least one operation.
LBL_MBeanRegistration_Informations= will implement MBeanRegistration interface.\n\
The following methods will be added:\n\
- preRegister\n\
- postRegister\n\
- preDeregister\n\
- postDeregister
LBL_AttrMethodsAlreadyExist_begin=Attribute(s) implementation already exist in 
LBL_AttrMethodsAlreadyExist_middle=MBean will be updated with new attributes.\n
LBL_AttrMethodsAlreadyExist_end= class will be NOT updated with following methods :\n
LBL_OpMethodsAlreadyExist_begin=Operation(s) implementation already exist in 
LBL_OpMethodsAlreadyExist_middle=MBean will be updated with new operations.\n
LBL_OpMethodsAlreadyExist_end= class will be NOT updated with following methods :\n
LBL_ClassNotExist=Specified Java Class does not exist.
LBL_NotMBeanClass=This class is not a MBean Class.
LBL_ClassWithNoInterface=Specified Class can't be wrapped, no Management Interface to expose.
LBL_ClassWithNoConstructor=This class has no public constructor.
LBL_GeneratedInterface=Apply JMX Design Pattern Management Interface
LBL_StandardMBeanDefaultConstructor=Object Instantiation Not Generated
LBL_Notifications=\ &Notifications:
LBL_GenBroadcasterDelegation=\ Generate &Delegation to Broadcaster
LBL_GenSeqNumberField=\ Generate Private &Seq Number and Accessor
LBL_OK=OK
#LBL_DefaultConstructor=Object Instantiation Not Generated

#
# For JUnit Test generation 
#
LBL_ClassToTest=Class to Test:
LBL_TestClass=Created Test Class:
LBL_Project=Project:
LBL_Location=&Location:
LBL_CreatedFile=Created File:
LBL_MBean_Constructor=MBean Cons&tructor:
MSG_ClassToTestDoesNotExist=
MSG_InvalidClassName=Invalid class name
MSG_Test_Class_File_already_exists=Test Class file already exists. It will be replaced by the new version.
LBL_OptionalCode=\ Optional code to be added to the test class:
LBL_OptionalComments=\ Optional comments to be added to the test class:
LBL_DefaultMethodBodies=\ Default &Method Bodies
#LBL_SrcCodeHints=\ Source Code H&ints
LBL_JavaDoc=\ &Javadoc Comments

# Error message
LBL_State_Same_Attribute_Name=Two or more attributes have the same name.
LBL_State_Same_Operation=Two or more operations have the same name and parameter types.

# for accesibility
ACCESS_ATTRIBUTES_TABLE=Attributes table
ACCESS_ATTRIBUTES_TABLE_DESCRIPTION=This table is used to declare MBean attributes
ACCESS_ADD_ATTRIBUTE=Add attribute
ACCESS_ADD_ATTRIBUTE_DESCRIPTION=Click on this button to add a table row
ACCESS_REMOVE_ATTRIBUTE=Remove attribute
ACCESS_REMOVE_ATTRIBUTE_DESCRIPTION=Click on this button to remove a table row

ACCESS_OPERATIONS_TABLE=Operations table
ACCESS_OPERATIONS_TABLE_DESCRIPTION=This table is used to declare MBean operations
ACCESS_ADD_OPERATION=Add operation
ACCESS_ADD_OPERATION_DESCRIPTION=Click on this button to add a table row
ACCESS_REMOVE_OPERATION=Remove operation
ACCESS_REMOVE_OPERATION_DESCRIPTION=Click on this button to remove a table row

ACCESS_GEN_DELEG_BROADCAST=Generate Delegation to Broadcaster
ACCESS_GEN_DELEG_BROADCAST_DESCRIPTION=Select this option if you want to generate a delegation to broadcaster.
ACCESS_GEN_SEQ_NUMBER=Generate Sequence Number
ACCESS_GEN_SEQ_NUMBER_DESCRIPTION=Select this option if you want to generate a sequence number and its accessor.
ACCESS_ADD_NOTIFICATION=Add notification
ACCESS_ADD_NOTIFICATION_DESCRIPTION=Click on this button to add a table row
ACCESS_REMOVE_NOTIFICATION=Remove notification
ACCESS_REMOVE_NOTIFICATION_DESCRIPTION=Click on this button to add a table row
ACCESS_NOTIFICATION_TABLE=Notification table
ACCESS_NOTIFICATION_TABLE_DESCRIPTION=This table is used to add notifications.

ACCESS_REGISTRATION_KEEP=Keep preRegister parameters
ACCESS_REGISTRATION_KEEP_DESCRIPTION=Select this option if you want this MBean to keep a reference on preRegister parameters

ACCESS_REGISTER_USER_MBEAN=Register your MBean
ACCESS_REGISTER_USER_MBEAN_DESCRIPTION=Register an Existing MBean.
ACCESS_REGISTER_MBEAN_CLASS=MBean Class
ACCESS_REGISTER_MBEAN_CLASS_DESCRIPTION=MBean Class to use for instantiation.
ACCESS_REGISTER_OBJECTNAME=ObjectName for user MBean
ACCESS_REGISTER_OBJECTNAME_DESCRIPTION=ObjectName use to register your MBean.
ACCESS_REGISTER_CONSTRUCTOR=MBean constructor
ACCESS_REGISTER_CONSTRUCTOR_DESCRIPTION=constructor used to instantiate your MBean.
ACCESS_REGISTER_STANDARD_MBEAN=Register Java Object wrapped in a StandardMBean
ACCESS_REGISTER_STANDARD_MBEAN_DESCRIPTION=Construct a StandardMBean which wraps your Java Object and Register it.
ACCESS_REGISTER_STDMBEAN_CLASSNAME=Java Class name
ACCESS_REGISTER_STDMBEAN_CLASSNAME_DESCRIPTION=Wrapped Java Object class name.
ACCESS_REGISTER_STDMBEAN_BROWSE_CLASSNAME=Java Class Browse
ACCESS_REGISTER_STDMBEAN_BROWSE_CLASSNAME_DESCRIPTION=Wrapped Java Object class browsing Project Classes.
ACCESS_REGISTER_STDMBEAN_OBJECTNAME=ObjectName for wrapped class as MBean
ACCESS_REGISTER_STDMBEAN_OBJECTNAME_DESCRIPTION=ObjectName use to register the MBean which wraps your class.
ACCESS_REGISTER_STDMBEAN_INTERFACE=Management Interface
ACCESS_REGISTER_STDMBEAN_INTERFACE_DESCRIPTION=Mangement interface for your wrapped class MBean.
ACCESS_REGISTER_STDMBEAN_CONSTRUCTOR=Java Class Constructor
ACCESS_REGISTER_STDMBEAN_CONSTRUCTOR_DESCRIPTION=Wrapped class constructor used to instantiate the wrapped Java Object.

ACCESS_JUNIT_CLASS=Class to test
ACCESS_JUNIT_CLASS_DESCRIPTION=Class to test
ACCESS_JUNIT_TEST_CLASS=Test class
ACCESS_JUNIT_TEST_CLASS_DESCRIPTION=Test class
ACCESS_JUNIT_PROJECT=Project name
ACCESS_JUNIT_PROJECT_DESCRIPTION=Project name
ACCESS_JUNIT_LOCATION=Project location
ACCESS_JUNIT_LOCATION_DESCRIPTION=Project location
ACCESS_JUNIT_CREATED_FILE=Created File
ACCESS_JUNIT_CREATED_FILE_DESCRIPTION=Test created file
ACCESS_JUNIT_CONSTRUCTOR=Constructor
ACCESS_JUNIT_CONSTRUCTOR_DESCRIPTION=MBean constructor to use in JUnit tests.
ACCESS_JUNIT_METHOD_BODY=Default method bodies
ACCESS_JUNIT_METHOD_BODY_DESCRIPTION=Generate default method bodies
ACCESS_JUNIT_JAVADOC=Javadoc
ACCESS_JUNIT_JAVADOC_DESCRIPTION=Generate Javadoc
#ACCESS_JUNIT_HINT=Source code Hints
#ACCESS_JUNIT_HINT_DESCRIPTION=Generate source code hints