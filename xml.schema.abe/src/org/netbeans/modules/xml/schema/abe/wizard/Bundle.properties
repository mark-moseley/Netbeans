# ABE wizard properties file

##################################################################
# Schema Transform (into a given design pattern)
##################################################################
SchemaTransform_PatternSelection=Select Design Pattern

TITLE_SchemaTransform=Apply Design Pattern
LBL_SchemaTransform_GlobalElement=Global Element
HINT_SchemaTransform_GlobalElement=Global Element
LBL_SchemaTransform_SingleGlobalElement=Create a &Single Global Element
HINT_SchemaTransform_SingleGlobalElement=Select to create a single global element.
LBL_SchemaTransform_MultipleGlobalElement=Create &Multiple Global Elements
HINT_SchemaTransform_MultipleGlobalElement=Select to create more than one global element.
LBL_SchemaTransform_Type=Type
HINT_SchemaTransform_Type=Type
LBL_SchemaTransform_ReusableTypes=Create &Type(s)
HINT_SchemaTransform_ReusableTypes=Select to create reusable types.
LBL_SchemaTransform_No_ReusableTypes=&Do not Create Type(s)
HINT_SchemaTransform_No_ReusableTypes=Do not Create Type(s).
LBL_SchemaTransform_Selected_DesignPattern_Desc=Selected Design Pattern:
HINT_SchemaTransform_Selected_DesignPattern_Desc=This shows selected design pattern.
LBL_SchemaTransform_Selected_DesignPattern_Text=<html><b>{0}</b></html>
LBL_SchemaTransform_Existing_DesignPattern_Desc=Current Design Pattern:
HINT_SchemaTransform_Existing_DesignPattern_Desc=This shows current design pattern.
LBL_SchemaTransform_Existing_DesignPattern_Text={0}
LBL_SchemaTransform_DesignPattern_Example=Example:
HINT_SchemaTransform_DesignPattern_Example=This shows an example of selected design pattern.

# Design Pattern descriptions
MSG_SchemaTransform_Example=Example
HINT_SchemaTransform_Example=This shows an example of the selected design pattern.
MSG_SchemaTransform_Desc=Description
HINT_SchemaTransform_Desc=This shows the description of the selected design pattern.
LBL_SchemaTransform_RUSSIAN_DOLL=Russian Doll
MSG_SchemaTransform_RUSSIAN_DOLL_Desc=In the Russian Doll design, there is a single global element; all other elements are local. \n\
Element declarations are nested within a single global declaration and element declarations can \n\
only be used once. Only the root element must be defined within the global namespace.
MSG_SchemaTransform_RUSSIAN_DOLL_Example=<schema>\n    <element name="Line">\n        <complexType>\n            <sequence>\n                <element name="PointA"/>\n                    <complexType>\n                        <attribute name="x" type="xsd:integer"/>\n                        <attribute name="y" type="xsd:integer"/>\n                    </complexType>\n                </element>\n                <element name="PointB">\n                    <complexType>\n                        <attribute name="x" type="xsd:integer"/>\n                        <attribute name="y" type="xsd:integer"/>\n                    </complexType>\n                </element>\n            </sequence>\n        </complexType>\n    </element>\n</schema>

LBL_SchemaTransform_SALAMI_SLICE=Salami Slice
MSG_SchemaTransform_SALAMI_SLICE_Desc=In the Salami Slice design, all elements are global. There is no nesting of element declarations \n\
and element declarations can be reused throughout the schema. All elements must be defined \n\
within the global namespace. 
MSG_SchemaTransform_SALAMI_SLICE_Example=<schema>\n    <element name="PointA">\n        <complexType>\n            <attribute name="x" type="integer"/>\n            <attribute name="y" type="integer"/>\n        </complexType>\n    </element>\n    <element name="PointB">\n        <complexType>\n            <attribute name="x" type="integer"/>\n            <attribute name="y" type="integer"/>\n        </complexType>\n    </element>\n    <element name="Line">\n        <complexType>\n            <sequence>\n                <element ref="PointA"/>\n                <element ref="PointB"/>\n            </sequence>\n        </complexType>\n    </element>\n</schema>

LBL_SchemaTransform_VENITIAN_BLIND=Venetian Blind
MSG_SchemaTransform_VENITIAN_BLIND_Desc=In the Venetian Blind design, there is a single global element; all other elements are local. \n\
Element declarations are nested within a single global declaration, using named complex types \n\
and element groups. Complex types and element groups can be reused throughout the schema. \n\
Only the root element must be defined within the global namespace.
MSG_SchemaTransform_VENITIAN_BLIND_Example=<schema>\n    <complexType name="PointType">\n        <simpleContent>\n            <restriction base="xsd:date"/>\n        </simpleContent>\n    </complexType>\n    <element name="Line">\n        <complexType>\n            <sequence>\n                <element name="PointA" type="PointType"/>\n                <element name="PointB" type="PointType"/>\n            </sequence>\n        </complexType>\n    </element>\n</schema>

LBL_SchemaTransform_GARDEN_OF_EDEN=Garden of Eden
MSG_SchemaTransform_GARDEN_OF_EDEN_Desc=The Garden of Eden design is a combination of the Venetian Blind and Salami Slice designs. \n\
All elements and types are defined in the global namespace with the elements referenced \n\
as needed.
MSG_SchemaTransform_GARDEN_OF_EDEN_Example=<schema>\n    <complexType name="PointType">\n        <attribute name="x" type="integer"/>\n        <attribute name="y" type="integer"/>\n    </complexType>\n    <complexType name="LineType">\n        <sequence>\n            <element ref="PointA"/>\n            <element ref="PointB"/>\n        </sequence>\n    </complexType>\n    <element name="PointA" type="PointType"/>\n    <element name="PointB" type="PointType"/>\n    <element name="Line" type="LineType"/>\n</schema>

LBL_SchemaTransform_MIXED=Mixed
MSG_SchemaTransform_MIXED_Desc=Mixed
MSG_SchemaTransform_MIXED_Example=<schema>\n    <complexType name="PointType">\n        <attribute name="x" type="integer"/>\n        <attribute name="y" type="integer"/>\n    </complexType>\n    <complexType name="LineType">\n        <sequence>\n            <element ref="PointA"/>\n            <element ref="PointB"/>\n        </sequence>\n    </complexType>\n    <element name="PointA" type="PointType"/>\n    <element name="PointB" type="PointType"/>\n    <element name="Line" type="LineType"/>\n</schema>

MSG_SchemaTransform_Error_INVALID_SCHEMA=<html>You can only apply a design pattern to a valid schema. The selected schema is not valid because the XML is not well-formed or invalid. Fix the schema and then try again.</html>
MSG_SchemaTransform_Error_SAME_DESIGN_PATTERN=<html>The design pattern you selected, \"{0}\", is the current design pattern of the schema. If you do not want to change the design pattern, click Cancel.</html>
MSG_SchemaTransform_Error_NO_GLOBAL_ELEMENTS=<html>The wizard cannot apply the design pattern you selected, \"{0}\", because the schema does not contain any global elements.</html>
MSG_SchemaTransform_Error_GLOBAL_ELEMENTS_HAVE_NO_CHILD_ELEMENTS=<html>The wizard cannot apply the design pattern you selected, \"{0}\", because the global elements in the schema do not contain child elements.</html>
MSG_SchemaTransform_Error_GLOBAL_ELEMENTS_HAVE_NO_CHILD_ATTRIBUTES=<html>The wizard cannot apply the design pattern you selected, \"{0}\", because the global elements in the schema do not contain child attributes.</html>
MSG_SchemaTransform_Error_GLOBAL_ELEMENTS_HAVE_NO_CHILD_ELEMENTS_AND_ATTRIBUTES=<html>The wizard cannot apply the design pattern you selected, \"{0}\", because the global elements in the schema do not contain child elements or child attributes.</html>
MSG_SchemaTransform_Error_GLOBAL_ELEMENTS_HAVE_NO_GRAND_CHILDREN=<html>The wizard cannot apply the design pattern you selected, \"{0}\", because the global elements in the schema do not contain grandchild elements or grandchild attributes.</html>
MSG_SchemaTransform_Error_CANNOT_REMOVE_GLOBAL_ELEMENTS=<html>The wizard cannot apply the design pattern you selected, \"{0}\." The following design pattern can be applied to the schema: \"{1}\".</html>
MSG_SchemaTransform_Warning_WILL_REMOVE_TYPES=<html>Click Finish to apply the \"{0}\" design pattern and replace all existing types in the schema.</html>
MSG_SchemaTransform_Warning_WILL_REMOVE_GLOBAL_ELEMENTS=<html>Click Finish to apply the \"{0}\" design pattern and replace all existing global elements in the schema.</html>
MSG_SchemaTransform_Warning_WILL_REMOVE_GLOBAL_ELEMENTS_AND_TYPES=<html>Click Finish to apply the \"{0}\" design pattern and replace all existing global elements and types in the schema.</html>

# Schema Transform Progress panel
MSG_SchemaTransform_Progress=Applying Design Pattern \"{0}\"...
MSG_SchemaTransform_ProgressMessage=Applying Design Pattern \"{0}\"

MSG_SchemaTransform_ProgressPanel=Applying Design Pattern \"{0}\"...
HINT_SchemaTransform_ProgressPanel=Applying Design Pattern \"{0}\"...
MSG_SchemaTransform_ProgressPanelMessage=Applying Design Pattern, please wait...
HINT_SchemaTransform_ProgressPanelMessage=Applying Design Pattern, please wait...

