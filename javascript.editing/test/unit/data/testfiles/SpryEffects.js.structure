setupHighlight:METHOD:[]:ESCAPED{setupHighlight}(PARAMETERS{ESCAPED{element}, ESCAPED{effect}}) : ESCAPED{void}:
finishHighlight:METHOD:[]:ESCAPED{finishHighlight}(PARAMETERS{ESCAPED{element}, ESCAPED{effect}}) : ESCAPED{void}:
compositeColorHex:GLOBAL:[]:ESCAPED{compositeColorHex}:
dimensions:GLOBAL:[]:ESCAPED{dimensions}:
Spry.Effect.Registry:CLASS:[]:ESCAPED{Spry.Effect.Registry}:
  Registry:CONSTRUCTOR:[STATIC]:ESCAPED{Registry} : ESCAPED{Spry.Effect.Registry}:
  effectsAreTheSame:METHOD:[]:ESCAPED{effectsAreTheSame}(PARAMETERS{ESCAPED{effectA}, ESCAPED{effectB}}) : ESCAPED{Boolean}:
  elements:PROPERTY:[]:ESCAPED{elements} : ESCAPED{Array}:
  getIndexOfElement:METHOD:[]:ESCAPED{getIndexOfElement}(PARAMETERS{ESCAPED{element}}):
  getRegisteredEffect:METHOD:[]:ESCAPED{getRegisteredEffect}(PARAMETERS{ESCAPED{element}, ESCAPED{effect}}):
Spry.Effect.Utils.Position:CLASS:[]:ESCAPED{Spry.Effect.Utils.Position}:
  Position:CONSTRUCTOR:[STATIC]:ESCAPED{Position} : ESCAPED{Spry.Effect.Utils.Position}:
  x:PROPERTY:[]:ESCAPED{x} : ESCAPED{Number}:
  y:PROPERTY:[]:ESCAPED{y} : ESCAPED{Number}:
Spry.Effect.Utils.Rectangle:CLASS:[]:ESCAPED{Spry.Effect.Utils.Rectangle}:
  Rectangle:CONSTRUCTOR:[STATIC]:ESCAPED{Rectangle} : ESCAPED{Spry.Effect.Utils.Rectangle}:
  height:PROPERTY:[]:ESCAPED{height} : ESCAPED{Number}:
  width:PROPERTY:[]:ESCAPED{width} : ESCAPED{Number}:
Spry.Effect.Utils.PositionedRectangle:CLASS:[]:ESCAPED{Spry.Effect.Utils.PositionedRectangle}:
  PositionedRectangle:CONSTRUCTOR:[STATIC]:ESCAPED{PositionedRectangle} : ESCAPED{Spry.Effect.Utils.PositionedRectangle}:
  position:PROPERTY:[]:ESCAPED{position} : ESCAPED{Spry.Effect.Utils.Position}:
  rectangle:PROPERTY:[]:ESCAPED{rectangle} : ESCAPED{Spry.Effect.Utils.Rectangle}:
Spry.Effect.Utils:CLASS:[]:ESCAPED{Spry.Effect.Utils}:
  camelize:METHOD:[STATIC]:ESCAPED{camelize}(PARAMETERS{ESCAPED{stringToCamelize}}):
  getFirstChildElement:METHOD:[STATIC]:ESCAPED{getFirstChildElement}(PARAMETERS{ESCAPED{node}}):
  getPercentValue:METHOD:[STATIC]:ESCAPED{getPercentValue}(PARAMETERS{ESCAPED{value}}):
  getPixelValue:METHOD:[STATIC]:ESCAPED{getPixelValue}(PARAMETERS{ESCAPED{value}}):
  hexToInt:METHOD:[STATIC]:ESCAPED{hexToInt}(PARAMETERS{ESCAPED{hexStr}}):
  intToHex:METHOD:[STATIC]:ESCAPED{intToHex}(PARAMETERS{ESCAPED{integerNum}}):
  isPercentValue:METHOD:[STATIC]:ESCAPED{isPercentValue}(PARAMETERS{ESCAPED{value}}):
  optionsAreIdentical:METHOD:[STATIC]:ESCAPED{optionsAreIdentical}(PARAMETERS{ESCAPED{optionsA}, ESCAPED{optionsB}}) : ESCAPED{Boolean}:
  rgb:METHOD:[STATIC]:ESCAPED{rgb}(PARAMETERS{ESCAPED{redInt}, ESCAPED{greenInt}, ESCAPED{blueInt}}):
Spry.Effect:CLASS:[]:ESCAPED{Spry.Effect}:
  cleanWhitespace:METHOD:[STATIC]:ESCAPED{cleanWhitespace}(PARAMETERS{ESCAPED{element}}) : ESCAPED{void}:
  enforceVisible:METHOD:[STATIC]:ESCAPED{enforceVisible}(PARAMETERS{ESCAPED{element}}) : ESCAPED{void}:
  getDimensions:METHOD:[STATIC]:ESCAPED{getDimensions}(PARAMETERS{ESCAPED{element}}):
  getElement:METHOD:[STATIC]:ESCAPED{getElement}(PARAMETERS{ESCAPED{ele}}):
  getOffsetPosition:METHOD:[STATIC]:ESCAPED{getOffsetPosition}(PARAMETERS{ESCAPED{element}}):
  getStyleProp:METHOD:[STATIC]:ESCAPED{getStyleProp}(PARAMETERS{ESCAPED{element}, ESCAPED{prop}}):
  makeClipping:METHOD:[STATIC]:ESCAPED{makeClipping}(PARAMETERS{ESCAPED{element}}) : ESCAPED{void}:
  makePositioned:METHOD:[STATIC]:ESCAPED{makePositioned}(PARAMETERS{ESCAPED{element}}) : ESCAPED{void}:
  setStyleProp:METHOD:[STATIC]:ESCAPED{setStyleProp}(PARAMETERS{ESCAPED{element}, ESCAPED{prop}, ESCAPED{value}}):
Spry.Effect.Animator:CLASS:[]:ESCAPED{Spry.Effect.Animator}:
  Animator:CONSTRUCTOR:[STATIC]:ESCAPED{Animator}(PARAMETERS{ESCAPED{options}}) : ESCAPED{Spry.Effect.Animator}:
  animate:METHOD:[]:ESCAPED{animate}(PARAMETERS{ESCAPED{position}}) : ESCAPED{void}:
  cancel:METHOD:[]:ESCAPED{cancel} : ESCAPED{void}:
  direction:PROPERTY:[]:ESCAPED{direction}:
  doToggle:METHOD:[]:ESCAPED{doToggle} : ESCAPED{void}:
  drawEffect:METHOD:[]:ESCAPED{drawEffect} : ESCAPED{void}:
  getElapsedMilliseconds:METHOD:[]:ESCAPED{getElapsedMilliseconds}:
  interval:PROPERTY:[]:ESCAPED{interval} : ESCAPED{Number}:
  isFinished:PROPERTY:[]:ESCAPED{isFinished} : ESCAPED{Boolean}:
  nextEffect:PROPERTY:[]:ESCAPED{nextEffect}:
  options:PROPERTY:[]:ESCAPED{options}:
  repeat:PROPERTY:[]:ESCAPED{repeat} : ESCAPED{String}:
  setOptions:METHOD:[]:ESCAPED{setOptions}(PARAMETERS{ESCAPED{options}}) : ESCAPED{void}:
  start:METHOD:[]:ESCAPED{start}(PARAMETERS{ESCAPED{queue}}) : ESCAPED{void}:
  startMilliseconds:PROPERTY:[]:ESCAPED{startMilliseconds} : ESCAPED{Number}:
  stop:METHOD:[]:ESCAPED{stop} : ESCAPED{void}:
  timer:PROPERTY:[]:ESCAPED{timer}:
options:CLASS:[]:ESCAPED{options}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration} : ESCAPED{Number}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  duration:PROPERTY:[]:ESCAPED{duration}:
  finish:PROPERTY:[]:ESCAPED{finish}:
  finish:PROPERTY:[]:ESCAPED{finish}:
  finish:PROPERTY:[]:ESCAPED{finish}:
  finish:PROPERTY:[]:ESCAPED{finish}:
  finish:PROPERTY:[]:ESCAPED{finish}:
  finish:PROPERTY:[]:ESCAPED{finish}:
  from:PROPERTY:[]:ESCAPED{from}:
  from:PROPERTY:[]:ESCAPED{from}:
  from:PROPERTY:[]:ESCAPED{from}:
  from:PROPERTY:[]:ESCAPED{from}:
  from:PROPERTY:[]:ESCAPED{from}:
  from:PROPERTY:[]:ESCAPED{from}:
  from:PROPERTY:[]:ESCAPED{from}:
  restoreBackgroundImage:PROPERTY:[]:ESCAPED{restoreBackgroundImage}:
  restoreColor:PROPERTY:[]:ESCAPED{restoreColor}:
  scaleContent:PROPERTY:[]:ESCAPED{scaleContent}:
  scaleContent:PROPERTY:[]:ESCAPED{scaleContent}:
  scaleContent:PROPERTY:[]:ESCAPED{scaleContent}:
  scaleContent:PROPERTY:[]:ESCAPED{scaleContent}:
  scaleContent:PROPERTY:[]:ESCAPED{scaleContent}:
  scaleContent:PROPERTY:[]:ESCAPED{scaleContent}:
  setup:PROPERTY:[]:ESCAPED{setup}:
  setup:PROPERTY:[]:ESCAPED{setup}:
  setup:PROPERTY:[]:ESCAPED{setup}:
  setup:PROPERTY:[]:ESCAPED{setup}:
  setup:PROPERTY:[]:ESCAPED{setup}:
  setup:PROPERTY:[]:ESCAPED{setup}:
  to:PROPERTY:[]:ESCAPED{to}:
  to:PROPERTY:[]:ESCAPED{to}:
  to:PROPERTY:[]:ESCAPED{to}:
  to:PROPERTY:[]:ESCAPED{to}:
  to:PROPERTY:[]:ESCAPED{to}:
  to:PROPERTY:[]:ESCAPED{to}:
  to:PROPERTY:[]:ESCAPED{to}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle} : ESCAPED{Boolean}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  toggle:PROPERTY:[]:ESCAPED{toggle}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
  transition:PROPERTY:[]:ESCAPED{transition}:
Spry.Effect.Move:CLASS:[]:ESCAPED{Spry.Effect.Move}:
  Move:CONSTRUCTOR:[STATIC]:ESCAPED{Move}(PARAMETERS{ESCAPED{element}, ESCAPED{fromPos}, ESCAPED{toPos}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Move}:
  animate:METHOD:[]:ESCAPED{animate}(PARAMETERS{ESCAPED{position}}) : ESCAPED{void}:
  element:PROPERTY:[]:ESCAPED{element}:
  name:PROPERTY:[]:ESCAPED{name} : ESCAPED{String}:
  rangeMoveX:PROPERTY:[]:ESCAPED{rangeMoveX}:
  rangeMoveY:PROPERTY:[]:ESCAPED{rangeMoveY}:
  reset:METHOD:[]:ESCAPED{reset} : ESCAPED{void}:
  startX:PROPERTY:[]:ESCAPED{startX}:
  startY:PROPERTY:[]:ESCAPED{startY}:
  stopX:PROPERTY:[]:ESCAPED{stopX}:
  stopY:PROPERTY:[]:ESCAPED{stopY}:
Spry.Effect.MoveSlide:CLASS:[]:ESCAPED{Spry.Effect.MoveSlide}:
  MoveSlide:CONSTRUCTOR:[STATIC]:ESCAPED{MoveSlide}(PARAMETERS{ESCAPED{element}, ESCAPED{fromPos}, ESCAPED{toPos}, ESCAPED{options}}) : ESCAPED{Spry.Effect.MoveSlide}:
  animate:METHOD:[]:ESCAPED{animate}(PARAMETERS{ESCAPED{position}}) : ESCAPED{void}:
  element:PROPERTY:[]:ESCAPED{element}:
  firstChildElement:PROPERTY:[]:ESCAPED{firstChildElement}:
  name:PROPERTY:[]:ESCAPED{name} : ESCAPED{String}:
  rangeMoveX:PROPERTY:[]:ESCAPED{rangeMoveX}:
  rangeMoveY:PROPERTY:[]:ESCAPED{rangeMoveY}:
  reset:METHOD:[]:ESCAPED{reset} : ESCAPED{void}:
  startHeight:PROPERTY:[]:ESCAPED{startHeight}:
  startX:PROPERTY:[]:ESCAPED{startX}:
  startY:PROPERTY:[]:ESCAPED{startY}:
  stopX:PROPERTY:[]:ESCAPED{stopX}:
  stopY:PROPERTY:[]:ESCAPED{stopY}:
Spry.Effect.Size:CLASS:[]:ESCAPED{Spry.Effect.Size}:
  Size:CONSTRUCTOR:[STATIC]:ESCAPED{Size}(PARAMETERS{ESCAPED{element}, ESCAPED{fromRect}, ESCAPED{toRect}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Size}:
  animate:METHOD:[]:ESCAPED{animate}(PARAMETERS{ESCAPED{position}}) : ESCAPED{void}:
  element:PROPERTY:[]:ESCAPED{element}:
  heightRange:PROPERTY:[]:ESCAPED{heightRange}:
  name:PROPERTY:[]:ESCAPED{name} : ESCAPED{String}:
  originalWidth:PROPERTY:[]:ESCAPED{originalWidth}:
  reset:METHOD:[]:ESCAPED{reset} : ESCAPED{void}:
  startHeight:PROPERTY:[]:ESCAPED{startHeight}:
  startWidth:PROPERTY:[]:ESCAPED{startWidth}:
  stopHeight:PROPERTY:[]:ESCAPED{stopHeight}:
  stopWidth:PROPERTY:[]:ESCAPED{stopWidth}:
  widthRange:PROPERTY:[]:ESCAPED{widthRange}:
Spry.Effect.Opacity:CLASS:[]:ESCAPED{Spry.Effect.Opacity}:
  Opacity:CONSTRUCTOR:[STATIC]:ESCAPED{Opacity}(PARAMETERS{ESCAPED{element}, ESCAPED{startOpacity}, ESCAPED{stopOpacity}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Opacity}:
  animate:METHOD:[]:ESCAPED{animate}(PARAMETERS{ESCAPED{position}}) : ESCAPED{void}:
  element:PROPERTY:[]:ESCAPED{element}:
  name:PROPERTY:[]:ESCAPED{name} : ESCAPED{String}:
  opacityRange:PROPERTY:[]:ESCAPED{opacityRange}:
  reset:METHOD:[]:ESCAPED{reset} : ESCAPED{void}:
  startOpacity:PROPERTY:[]:ESCAPED{startOpacity}:
  stopOpacity:PROPERTY:[]:ESCAPED{stopOpacity}:
Spry.Effect.Color:CLASS:[]:ESCAPED{Spry.Effect.Color}:
  Color:CONSTRUCTOR:[STATIC]:ESCAPED{Color}(PARAMETERS{ESCAPED{element}, ESCAPED{startColor}, ESCAPED{stopColor}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Color}:
  animate:METHOD:[]:ESCAPED{animate}(PARAMETERS{ESCAPED{position}}) : ESCAPED{void}:
  blueColorRange:PROPERTY:[]:ESCAPED{blueColorRange}:
  element:PROPERTY:[]:ESCAPED{element}:
  greenColorRange:PROPERTY:[]:ESCAPED{greenColorRange}:
  name:PROPERTY:[]:ESCAPED{name} : ESCAPED{String}:
  redColorRange:PROPERTY:[]:ESCAPED{redColorRange}:
  reset:METHOD:[]:ESCAPED{reset} : ESCAPED{void}:
  startBlueColor:PROPERTY:[]:ESCAPED{startBlueColor}:
  startColor:PROPERTY:[]:ESCAPED{startColor}:
  startGreenColor:PROPERTY:[]:ESCAPED{startGreenColor}:
  startRedColor:PROPERTY:[]:ESCAPED{startRedColor}:
  stopBlueColor:PROPERTY:[]:ESCAPED{stopBlueColor}:
  stopColor:PROPERTY:[]:ESCAPED{stopColor}:
  stopGreenColor:PROPERTY:[]:ESCAPED{stopGreenColor}:
  stopRedColor:PROPERTY:[]:ESCAPED{stopRedColor}:
Spry.Effect.ClusteredEffect:CLASS:[]:ESCAPED{Spry.Effect.ClusteredEffect}:
  ClusteredEffect:CONSTRUCTOR:[STATIC]:ESCAPED{ClusteredEffect}(PARAMETERS{ESCAPED{effect}, ESCAPED{kind}}) : ESCAPED{Spry.Effect.ClusteredEffect}:
  effect:PROPERTY:[]:ESCAPED{effect}:
  kind:PROPERTY:[]:ESCAPED{kind}:
Spry.Effect.Cluster:CLASS:[]:ESCAPED{Spry.Effect.Cluster}:
  Cluster:CONSTRUCTOR:[STATIC]:ESCAPED{Cluster} : ESCAPED{Spry.Effect.Cluster}:
  addNextEffect:METHOD:[]:ESCAPED{addNextEffect}(PARAMETERS{ESCAPED{effect}}) : ESCAPED{void}:
  addParallelEffect:METHOD:[]:ESCAPED{addParallelEffect}(PARAMETERS{ESCAPED{effect}}) : ESCAPED{void}:
  cancel:METHOD:[]:ESCAPED{cancel} : ESCAPED{void}:
  clusterIsFinished:PROPERTY:[]:ESCAPED{clusterIsFinished} : ESCAPED{Boolean}:
  currIdx:PROPERTY:[]:ESCAPED{currIdx} : ESCAPED{Number}:
  direction:PROPERTY:[]:ESCAPED{direction}:
  doToggle:METHOD:[]:ESCAPED{doToggle} : ESCAPED{void}:
  effectsArray:PROPERTY:[]:ESCAPED{effectsArray} : ESCAPED{Array}:
  getNextEffect:METHOD:[]:ESCAPED{getNextEffect}:
  name:PROPERTY:[]:ESCAPED{name} : ESCAPED{String}:
  options:PROPERTY:[]:ESCAPED{options}:
  reset:METHOD:[]:ESCAPED{reset} : ESCAPED{void}:
  resetIndex:METHOD:[]:ESCAPED{resetIndex} : ESCAPED{void}:
  setToggle:METHOD:[]:ESCAPED{setToggle}(PARAMETERS{ESCAPED{doToggle}}) : ESCAPED{void}:
  start:METHOD:[]:ESCAPED{start} : ESCAPED{void}:
  startNextEffect:METHOD:[]:ESCAPED{startNextEffect} : ESCAPED{void}:
Spry.Effect.AnimatedElement:CLASS:[]:ESCAPED{Spry.Effect.AnimatedElement}:
  AnimatedElement:CONSTRUCTOR:[STATIC]:ESCAPED{AnimatedElement}(PARAMETERS{ESCAPED{element}}) : ESCAPED{Spry.Effect.AnimatedElement}:
  currentEffect:PROPERTY:[]:ESCAPED{currentEffect} : ESCAPED{Number}:
  effectArray:PROPERTY:[]:ESCAPED{effectArray} : ESCAPED{Array}:
  element:PROPERTY:[]:ESCAPED{element}:
Spry.Effect.AppearFade:CLASS:[]:ESCAPED{Spry.Effect.AppearFade}:
  AppearFade:CONSTRUCTOR:[STATIC]:ESCAPED{AppearFade}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.AppearFade}:
Spry.Effect.Blind:CLASS:[]:ESCAPED{Spry.Effect.Blind}:
  Blind:CONSTRUCTOR:[STATIC]:ESCAPED{Blind}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Blind}:
Spry.Effect.Highlight:CLASS:[]:ESCAPED{Spry.Effect.Highlight}:
  Highlight:CONSTRUCTOR:[STATIC]:ESCAPED{Highlight}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Highlight}:
Spry.Effect.Slide:CLASS:[]:ESCAPED{Spry.Effect.Slide}:
  Slide:CONSTRUCTOR:[STATIC]:ESCAPED{Slide}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Slide}:
Spry.Effect.GrowShrink:CLASS:[]:ESCAPED{Spry.Effect.GrowShrink}:
  GrowShrink:CONSTRUCTOR:[STATIC]:ESCAPED{GrowShrink}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.GrowShrink}:
initialProps2:CLASS:[]:ESCAPED{initialProps2}:
  left:PROPERTY:[]:ESCAPED{left}:
  top:PROPERTY:[]:ESCAPED{top}:
Spry.Effect.Shake:CLASS:[]:ESCAPED{Spry.Effect.Shake}:
  Shake:CONSTRUCTOR:[STATIC]:ESCAPED{Shake}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Shake}:
Spry.Effect.Squish:CLASS:[]:ESCAPED{Spry.Effect.Squish}:
  Squish:CONSTRUCTOR:[STATIC]:ESCAPED{Squish}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Squish}:
Spry.Effect.Pulsate:CLASS:[]:ESCAPED{Spry.Effect.Pulsate}:
  Pulsate:CONSTRUCTOR:[STATIC]:ESCAPED{Pulsate}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Pulsate}:
Spry.Effect.Puff:CLASS:[]:ESCAPED{Spry.Effect.Puff}:
  Puff:CONSTRUCTOR:[STATIC]:ESCAPED{Puff}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Puff}:
Spry.Effect.DropOut:CLASS:[]:ESCAPED{Spry.Effect.DropOut}:
  DropOut:CONSTRUCTOR:[STATIC]:ESCAPED{DropOut}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.DropOut}:
Spry.Effect.Fold:CLASS:[]:ESCAPED{Spry.Effect.Fold}:
  Fold:CONSTRUCTOR:[STATIC]:ESCAPED{Fold}(PARAMETERS{ESCAPED{element}, ESCAPED{options}}) : ESCAPED{Spry.Effect.Fold}:
Spry:CLASS:[]:ESCAPED{Spry}:
SpryRegistry:CLASS:[]:ESCAPED{SpryRegistry}:
