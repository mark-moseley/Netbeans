/*
* Support js for __CONTAINER_NAME__
*/

function __CONTAINER_NAME__(uri_) {
    this.uri = uri_;
    this.items = new Array();
    this.initialized = false;
}

__CONTAINER_NAME__.prototype = {

   getUri : function() {
      return this.uri;
   },

   getItems : function() {
      if(!this.initialized)
          this.init();
      return this.items;
   },

   addItem : function(item) {
      this.items[this.items.length+1] = item;
   },

   removeItem : function(item) {
      var status = item.delete_();
      if(status != '-1')
        this.init(); //re-read items
      return status;
   },

   init : function() {
      var remote = new __CONTAINER_NAME__Remote(this.uri);
      var c = remote.getJson();
      if(c != -1) {
         var myObj = eval('('+c+')');
         var __CONTAINER_PATH_NAME__ = myObj.__CONTAINER_PATH_NAME__;
         if(__CONTAINER_PATH_NAME__ == null || __CONTAINER_PATH_NAME__ == undefined) {
            rjsSupport.debug('__CONTAINER_PATH_NAME__ is undefined, so skipping init of __CONTAINER_NAME__');
            return;
         }
         var refs = __CONTAINER_PATH_NAME__.__CONTAINER_ITEM_PATH_NAME__;
         if(refs != undefined) {
             if(refs.length == undefined) {
                 this.initChild(refs, 0);
             } else {
                 var j = 0;
                 for(j=0;j<refs.length;j++) {
                    var ref = refs[j];
                    this.initChild(ref, j);
                 }
             }
         } else {
            rjsSupport.debug('__CONTAINER_ITEM_PATH_NAME__ is undefined, so skipping initChild for __CONTAINER_NAME__');
         }
         this.initialized = true;
      }
   },

   initChild : function(ref, j) {
      var uri2 = ref['@uri'];
      this.items[j] = new __CONTAINER_ITEM_NAME__(uri2);
   },

   flush : function() {
      var remote = new __CONTAINER_NAME__Remote(this.uri);
      remote.postJson('{'+this.toString()+'}');
   },

   flush : function(__CONTAINER_ITEM_PATH_NAME__) {
      var remote = new __CONTAINER_NAME__Remote(this.uri);
      return remote.postJson('{'+__CONTAINER_ITEM_PATH_NAME__.toString()+'}');
   },

   toString : function() {
      if(!this.initialized)
         this.init();
      var s = '';
      var j = 0;
      if(this.items.length > 1)
          s = s + '[';
      for(j=0;j<this.items.length;j++) {
         var c = this.items[j];
         if(j<this.items.length-1)
            s = s + '{"@uri":"'+c.getUri()+'", "__CONTAINER_ITEM_PATH_NAME__Id":"'+rjsSupport.findIdFromUrl(c.getUri())+'"},';
         else
            s = s + '{"@uri":"'+c.getUri()+'", "__CONTAINER_ITEM_PATH_NAME__Id":"'+rjsSupport.findIdFromUrl(c.getUri())+'"}';
      }
      if(this.items.length > 1)
          s = s + ']';
      var myObj = '';
      if(s == '') {
          myObj = '"__CONTAINER_PATH_NAME__":{"@uri":"'+this.getUri()+'"}';
      } else {
          myObj = 
            '"__CONTAINER_PATH_NAME__":{'+'"@uri":"'+this.getUri()+'",'+'"__CONTAINER_ITEM_PATH_NAME__":'+s+''+'}';
      }
      return myObj;
   }

}

function __CONTAINER_NAME__Remote(uri_) {
    this.uri = uri_;
}

__CONTAINER_NAME__Remote.prototype = {

__STUB_METHODS__
}
