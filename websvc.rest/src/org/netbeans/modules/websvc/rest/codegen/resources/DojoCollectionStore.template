djd43.provide("rdj.data.__CONTAINER_NAME__Store");
djd43.require("djd43.data.core.RemoteStore");
djd43.require("djd43.lang.declare");
djd43.require("djd43.io.ScriptSrcIO");
djd43.declare("rdj.data.__CONTAINER_NAME__Store", djd43.data.core.RemoteStore, {initializer:function (kwArgs) {
	if (!kwArgs) {
		kwArgs = {};
	}
	this._serverQueryUrl = kwArgs.serviceUrl || "";
	this._serverSaveUrl = kwArgs.serviceUrl || "";
	this._deleted = {};
	this._changed = {};
	this._added = {};
	this._results = {};
	this._data = {};
	this._numItems = 0;
        this._ref__CONTAINER_ITEM_NAME__ = null;
        this._refData = {};
},
    _setupQueryRequest:function (result, requestKw) {
	var start = 1;
	var count = 1;
	if (result) {
		start = result.start || start;
		count = result.count || count;
	}
	requestKw.url = this._serverQueryUrl;
        var method = "GET";
        if(method == 'GET') {
            requestKw.headers = {"Accept" : "application/json"};
        }
}, _resultToQueryMetadata:function (json) {
        var myObj = eval('('+json+')');
	return myObj.__CONTAINER_PATH_NAME__.__CONTAINER_ITEM_PATH_NAME__Ref;
}, _resultToQueryData:function (json) {
        var myObj = eval('('+json+')');
        var __CONTAINER_PATH_NAME__ = myObj.__CONTAINER_PATH_NAME__;
        var refs = __CONTAINER_PATH_NAME__.__CONTAINER_ITEM_PATH_NAME__Ref;
	var data = {};
	for (var i = 0; i < refs.length; ++i) {
		var record = refs[i];
                var url2 = record['@uri'];
		var item = {};
                var ci = new __CONTAINER_ITEM_NAME__(url2);
                ci.init();
                var fields = ci.getFields();//first field is Id, second is uri
                item['Id'] = [ci[fields[0]]];
                for(var j=1;j<fields.length;j++) {
                    var f = fields[j];
                    item[f] = [ci[f]];
                }
                data[i] = item;
	}
        if(refs.length > 0) {
            _ref__CONTAINER_ITEM_NAME__ = new __CONTAINER_ITEM_NAME__(refs[0]['@uri']);
            _ref__CONTAINER_ITEM_NAME__.init();
            _refData = data[0];
        }
	return data;
}, _setupSaveRequest:function (saveKeywordArgs, requestKw) {
        var id = 1000+this.getSize()+1;
        var method = "put";
        var data = null;
        if(saveKeywordArgs) {
            var id = saveKeywordArgs.Id || id;
            method = saveKeywordArgs.method || method;
            data = saveKeywordArgs.data || data;
        }
        var jsonStr = '';
        if(method == 'put') {
             var ci = new __CONTAINER_ITEM_NAME__(this._serverSaveUrl+id+'/');
             ci.init();
             var fields = ci.getFields();//first field is Id, second is uri
             for(var j=1;j<fields.length;j++) {
                var f = fields[j];
                ci[f] = data[f];
             }
             
             //Hack: Since djd43 0.4.3 do not support PUT and DELETE methods, we are
            //using the generated Javascript to achieve these instead of djd43.io.bind
            var status = ci.flush();
            if(status) {
                alert('Update succeeded for __CONTAINER_ITEM_PATH_NAME__ with Id: \''+id+'\'.');
            } else {
                alert('Update failed for __CONTAINER_ITEM_PATH_NAME__ with Id: \''+id+'\'.');
            }
            requestKw.url = this._serverSaveUrl+id+'/';
            method = 'get';
            requestKw.headers = {"Accept" : "application/json"};
            /*requestKw.contentType = 'text/json';
            requestKw.headers = {
                "Content-Type" : "application/json",
                "Content-Length": jsonStr.length,//TODO - put actual length
                "Connection": "close"//,
                //"X-Method-Override" : "PUT"
            };*/  
            requestKw.mimetype = "application/json";          
        } else {
            for(var item in this._added) {
                 var ci = _ref__CONTAINER_ITEM_NAME__;
                 ci.initialized = true;
                 ci.uri = this._serverSaveUrl+id+'/';
                 var fields = ci.getFields();//first field is Id, second is uri
                 ci[fields[0]] = id;
                 for(var j=1;j<fields.length;j++) {
                    var f = fields[j];
                    ci[f] = _refData[f];
                 }
                 jsonStr += ci.toString();
            }            
            requestKw.url = this._serverSaveUrl;
            requestKw.headers = {
                "Content-Type" : "application/json",
                "Content-Length": jsonStr.length,//TODO - put actual length
                "Connection": "close"
            };   
            requestKw.postContent = jsonStr;//TODO  
            requestKw.method = method;     
            requestKw.mimetype = "application/json";  
        }        
}, deleteItem:function (item) {
        var id = item['Id'];
	var ci = new __CONTAINER_ITEM_NAME__(this._serverSaveUrl+id+'/');
        ci.delete_();
}});