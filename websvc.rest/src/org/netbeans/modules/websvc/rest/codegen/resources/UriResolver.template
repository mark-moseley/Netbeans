/*
 * UriResolver.java
 *
 * Created on __DATE__, __TIME__
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package Templates.Classes;

import com.sun.ws.rest.api.WebApplicationException;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.JAXBContext;

/**
 *
 * @author __USER__
 */
public class UriResolver {
    private static Map<Thread, UriResolver> resolverMap = new HashMap<Thread, UriResolver>();

    private boolean inProgress = false;
    
    /** Creates a new instance of UriResolver */
    private UriResolver() {
    }
    
    public static synchronized UriResolver getInstance() {
        Thread thread = Thread.currentThread();
        UriResolver resolver = resolverMap.get(thread);

        if (resolver == null) {
            resolver = new UriResolver();
            resolverMap.put(thread, resolver);
        }

        return resolver;
    }

    private static synchronized void removeInstance() {
        resolverMap.remove(Thread.currentThread());
    }
    
    public <T> T resolve(Class<T> type, URI uri) {
        System.out.println("resolve uri = " + uri);
        
        if (inProgress) {
            System.out.println("skipping");
            return null;
        }
        
        inProgress = true;
           
        try {
            URL url = uri.toURL();
            HttpURLConnection conn = (HttpURLConnection)url.openConnection();
            conn.setRequestMethod("GET");
            
            int status = conn.getResponseCode();
            System.out.println("status = " + status);
            String mediaType = conn.getContentType();
            
            JAXBContext context = JAXBContext.newInstance(type);
            Object obj = context.createUnmarshaller().unmarshal(conn.getInputStream());
            
            System.out.println("obj = " + obj);
        
            return (T) obj;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new WebApplicationException(ex);
        } finally {
            removeInstance();
        }
    }
}
