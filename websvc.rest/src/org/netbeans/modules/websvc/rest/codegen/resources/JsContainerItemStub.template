/*
* Support js for __GENERIC_NAME__
*/

function __GENERIC_NAME__(uri_) {
    this.__GENERIC_NAME__(uri_, false);
}

function __GENERIC_NAME__(uri_, initialized_) {
    this.uri = uri_;
__FIELDS_DEFINITION__
    this.initialized = initialized_;
}

__GENERIC_NAME__.prototype = {

   getUri : function() {
      return this.uri;
   },

__GETTER_SETTER_METHODS__

   init : function() {
      var remote = new __GENERIC_NAME__Remote(this.uri);
      var c = remote.getJson();
      if(c != -1) {
         var myObj = eval('(' +c+')');
         var __GENERIC_PATH_NAME__ = myObj.__GENERIC_PATH_NAME__;
         this.uri = __GENERIC_PATH_NAME__['@uri'];
__FIELDS_INIT__
         this.initialized = true;
      }
   },

   flush : function() {
      var remote = new __GENERIC_NAME__Remote(this.uri);
      return remote.putJson(this.toString());
   },

   delete_ : function() {
      var remote = new __GENERIC_NAME__Remote(this.uri);
      return remote.delete_();
   },

   toString : function() {
      if(!this.initialized)
         this.init();
      var myObj = 
         '{"__GENERIC_PATH_NAME__":'+
         '{'+
         '"@uri":"'+this.uri+'",'+
         __FIELDS_TOSTRING__
         '}'+
      '}';
      return myObj;
   },

   getFields : function() {
      var fields = [];
__FIELD_NAMES_TOSTRING__
      return fields;
   }

}

function __GENERIC_NAME__Remote(uri_) {
    this.uri = uri_;
}

__GENERIC_NAME__Remote.prototype = {

__STUB_METHODS__
}
