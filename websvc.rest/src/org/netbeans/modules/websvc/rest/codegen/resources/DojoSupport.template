djd43.registerModulePath("rdj", "../../../../../dojo/rest/rdj"); //relative to djd43.js
__REQUIRE_DOJO_SCRIPTS__
djd43.require("rdj.widget.ResourcesTable");
djd43.hostenv.writeIncludes();

var ids = [];
var resourcesTable;
var restStore;
var table;
var actions;

djd43.provide("rdj.includeJS");
rdj.includeJS = function(file) {
    if(window.XMLHttpRequest)
    var req = new XMLHttpRequest();
    else
    var req = new ActiveXObject("Microsoft.XMLHTTP");
    req.open("GET", file,false);
    req.onreadystatechange = function(){
        if (req.readyState == 4)
        {
            window.eval(req.responseText);
        }
    }
    req.send(null);
}

djd43.provide("rdj.includeCSS");
rdj.includeCSS = function(file) {
    var scriptTag = document.createElement("link");
    scriptTag.setAttribute("rel", "stylesheet");
    scriptTag.setAttribute("type", "text/css");
    scriptTag.setAttribute("href", file);
    document.getElementsByTagName("head")[0].appendChild(scriptTag);
}

djd43.provide("rdj.displayResourcesTable");
rdj.displayResourcesTable = function(datastore, query, tableElement) {
    rdj.includeJS('../rjs/Support.js');
__INCLUDE_JS_SCRIPTS__
    rdj.includeCSS('../__CONTAINER_PATH_NAME__table/component.css');
    var dataInSimpleStoreFormat = [];
    var columnsInResourcesTableFormat = null;
    var addRow = function(item, result) {
            var object = {};
            var attributes = datastore.getAttributes(item);
            object["Id"] = item;
            for (var i in attributes) {
                    var attribute = attributes[i];
                    var value = datastore.get(item, attribute);
                    object[attribute] = value;
            }
            ids.push(object[attributes[0]]);
            dataInSimpleStoreFormat.push(object);
            if (!columnsInResourcesTableFormat) {
                    columnsInResourcesTableFormat = [];
                    for (var i in attributes) {
                            var attribute = attributes[i];
                            columnsInResourcesTableFormat.push({field: attribute});
                    }
            }
    };
    restStore = datastore;
    table = tableElement;
    var result = datastore.find({query:query, sync:true, onnext:addRow});	
    resourcesTable = djd43.widget.createWidget("rdj:ResourcesTable", {valueField:"Id"}, tableElement);
    for (var i in columnsInResourcesTableFormat) {
            var column = columnsInResourcesTableFormat[i];
            resourcesTable.columns.push(resourcesTable.createMetaData(column));
    }
    resourcesTable.store.setData(dataInSimpleStoreFormat);

    //Add actions Add, Update
    var body = tableElement.parentNode;
    actions = body.insertBefore(document.createElement('div'), tableElement);
    actions.id = 'actions';
    var actionTable = actions.appendChild(document.createElement('table'));
    var tr = actionTable.appendChild(document.createElement('tr'));
    var tab = ' background-image: url(../__CONTAINER_PATH_NAME__table/images/rtable.gif); width: 100px; border-right: #2574B7 1px solid; border-top: #2574B7 1px solid; border-left: #2574B7 1px solid; border-bottom: #2574B7 1px solid; color: #000000; text-align: center;';
    var text2 = 'color: #000000';
    var addActionStr = '<div style="'+tab+'"><a style="text-decoration: none" href="javascript:rdj.addResource()"><span style="'+text2+'">Add</span></a></div>';        
    var addAction = tr.appendChild(document.createElement('td'));
    addAction.innerHTML = addActionStr;

    var updActionStr = '<div style="'+tab+'"><a style="text-decoration: none" href="javascript:rdj.updateResource()"><span style="'+text2+'">Update</span></a></div>';
    var updAction = tr.appendChild(document.createElement('td'));
    updAction.innerHTML = updActionStr;   

    var delActionStr = '<div style="'+tab+'"><a style="text-decoration: none" href="javascript:rdj.deleteResource()"><span style="'+text2+'">Delete</span></a></div>';
    var delAction = tr.appendChild(document.createElement('td'));
    delAction.innerHTML = delActionStr;
}

djd43.provide("rdj.updateResource");
rdj.updateResource = function () {
    var a = resourcesTable.getSelectedData();
    restStore.save({sync: true, Id: a['Id'], method: "put", data: a});   
}

djd43.provide("rdj.deleteResource");
rdj.deleteResource = function () {
    var a = resourcesTable.getSelectedData();
    restStore.deleteItem(a);
    table.innerHTML = '';
    actions.innerHTML = '';
    rdj.displayResourcesTable(restStore, null, table);
    resourcesTable.selectByValue('1');
}

djd43.provide("rdj.addResource");
rdj.addResource = function () {
    var kwArgs = {        
        attribute: "Id"   
    }
    var id = 1000+restStore.getSize()+1;
    restStore.newItem({Id: id}, kwArgs);
    var result = restStore.save({sync: true, Id: id, method: "post"});
    if(result.results[0] == true) {
        alert('New item created with Id: \''+id+'\'.');
    } else {
        alert('Creating new item failed for Id: \''+id+'\'.');
    }
    table.innerHTML = '';
    actions.innerHTML = '';
    rdj.displayResourcesTable(restStore, null, table);
    resourcesTable.selectByValue('1');
} 
