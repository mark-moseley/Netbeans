<?xml version="1.0" encoding="UTF-8"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
Microsystems, Inc. All Rights Reserved.
-->

<mconfig name="tomcatint-tomcat5 unit test config">
   
    <!-- stable testbag  -->
    <testbag testattribs="stable" executor="ide" name="stable tests (ide)">
        <testset dir="unit/src">
            <patternset>
               <include name="**/*Test.class"/>
               <exclude name="**/DeploymentTest.class"/>
            </patternset>
        </testset>
    </testbag>
   
    <!-- stable testbag  -->
    <testbag testattribs="stablecode" executor="code" name="stable tests (no ide)">
        <testset dir="unit/src">
            <patternset>
            </patternset>
        </testset>
    </testbag>
    
    
    <!-- testbag with failing test (just one method)  -->
    <testbag testattribs="failing" executor="code" name="failing tests (no ide)" resultsprocessor="unit">
        <testset dir="unit/src">
            <patternset> 
            </patternset>
        </testset>
    </testbag>
    
    <!-- code excecutor - use this one if you plan to run your tests in standard 
                          JVM. You can also write your own executor, which will 
                          then call this one. It is handy when some servers (e.g. rmi registry)
                          have to be started before tests are run and stopped after
                          the run. -->
    <executor name="code" antfile="build-unit.xml" target="run-unit-test" />
    
    <!-- ide executor - use this one if you plan to run your tests inside IDE (internally).
                        Similarly as with code executor, you can create your own to 
                        prepare some neccessary stuff before running tests. -->
    <executor name="ide" antfile="build-unit.xml" target="runidetest"/>
    
    <!-- default compiler -->
    <compiler name="unit-compiler" antfile="build-unit.xml" target="default-compiler" default="true"/>
    
</mconfig>
