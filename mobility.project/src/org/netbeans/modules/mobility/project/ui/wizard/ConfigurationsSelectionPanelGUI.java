/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

/*
 * ConfigurationsSelectionPanelGUI.java
 *
 * Created on 17. May 2005, 14:15
 */
package org.netbeans.modules.mobility.project.ui.wizard;

import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import org.netbeans.modules.mobility.project.ui.customizer.VisualConfigSupport;
import org.openide.filesystems.FileObject;
import org.openide.util.NbBundle;

/**
 *
 * @author  Adam Sotona
 */
public class ConfigurationsSelectionPanelGUI extends JPanel {
    
    private static final String TEMPLATE_FILEOBJECT_PROPERTY = "template_fileobject"; //NOI18N
    
    /** Creates new form ConfigurationsSelectionPanelGUI */
    public ConfigurationsSelectionPanelGUI() {
        initComponents();
        FileObject ch[] = VisualConfigSupport.getConfigurationTemplates();
        if (ch.length > 0) {
            templatesPanel.setVisible(false);
            for (int i=0; i<ch.length; i++) {
                String name = ch[i].getName();
                final JCheckBox cb = new JCheckBox(name);
                cb.setToolTipText(name);
                cb.putClientProperty(TEMPLATE_FILEOBJECT_PROPERTY, ch[i]);
                templatesPanel.add(cb, new GridBagConstraints(0, GridBagConstraints.RELATIVE, GridBagConstraints.REMAINDER, 1, 1.0, 0.0, GridBagConstraints.NORTHWEST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0));
            }
            templatesPanel.add(new JPanel(), new GridBagConstraints(0, GridBagConstraints.RELATIVE, GridBagConstraints.REMAINDER, GridBagConstraints.REMAINDER, 1.0, 1.0, GridBagConstraints.NORTHWEST, GridBagConstraints.VERTICAL, new Insets(0, 0, 0, 0), 0, 0));
            templatesPanel.setVisible(true);
            templatesPanel.repaint();
            templatesPanel.validate();
        }
    }
    
    public void setSelectedTemplates(final List<Object> selected) {
        final Component c[] = templatesPanel.getComponents();
        for (int i=0; i<c.length; i++)
            if (c[i] instanceof JCheckBox) ((JCheckBox)c[i]).setSelected(selected.contains(((JCheckBox)c[i]).getClientProperty(TEMPLATE_FILEOBJECT_PROPERTY)));
    }
    
    public List<Object> getSelectedTemplates() {
        final ArrayList<Object> selected = new ArrayList<Object>();
        final Component c[] = templatesPanel.getComponents();
        for (int i=0; i<c.length; i++)
            if (c[i] instanceof JCheckBox && ((JCheckBox)c[i]).isSelected()) selected.add(((JCheckBox)c[i]).getClientProperty(TEMPLATE_FILEOBJECT_PROPERTY));
        return selected;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        templatesPanel = new javax.swing.JPanel();
        jCheckBoxSelectAll = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        setName(NbBundle.getMessage(ConfigurationsSelectionPanelGUI.class, "TITLE_ConfigurationsSelection"));
        setPreferredSize(new java.awt.Dimension(560, 350));
        jLabel1.setDisplayedMnemonic(NbBundle.getMessage(ConfigurationsSelectionPanelGUI.class, "MNM_ConfigurationsSelection").charAt(0));
        jLabel1.setLabelFor(templatesPanel);
        jLabel1.setText(NbBundle.getMessage(ConfigurationsSelectionPanelGUI.class, "LBL_ConfigurationsSelection"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel1, gridBagConstraints);

        templatesPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setViewportView(templatesPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jScrollPane1, gridBagConstraints);

        jCheckBoxSelectAll.setMnemonic(NbBundle.getMessage(ConfigurationsSelectionPanelGUI.class, "MNM_SelectAll").charAt(0));
        jCheckBoxSelectAll.setText(NbBundle.getMessage(ConfigurationsSelectionPanelGUI.class, "LBL_SelectAll"));
        jCheckBoxSelectAll.addActionListener(new java.awt.event.ActionListener() {
            @SuppressWarnings("synthetic-access")
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelectAllActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 0, 0);
        add(jCheckBoxSelectAll, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    
    private void jCheckBoxSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelectAllActionPerformed
        final boolean selected = jCheckBoxSelectAll.isSelected();
        final Component c[] = templatesPanel.getComponents();
        for (int i=0; i<c.length; i++)
            if (c[i] instanceof JCheckBox) ((JCheckBox)c[i]).setSelected(selected);
        
    }//GEN-LAST:event_jCheckBoxSelectAllActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxSelectAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel templatesPanel;
    // End of variables declaration//GEN-END:variables
}
