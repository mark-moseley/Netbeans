/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

/*
 * DeviceAnywhereCustomizerPanel.java
 *
 * Created on April 27, 2007, 4:34 PM
 */

package org.netbeans.modules.deployment.deviceanywhere;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.netbeans.modules.deployment.deviceanywhere.service.ApplicationAPIService;
import org.openide.util.NbBundle;

/**
 *
 * @author  suchys
 */
public class DeviceAnywhereGlobalCustomizerPanel extends javax.swing.JPanel {
        
    /**
     * Creates new form DeviceAnywhereCustomizerPanel
     */
    DeviceAnywhereGlobalCustomizerPanel() {
        initComponents(); 
        selectedService.setVisible(false);
        add(selectedService);
    }

    @Override
    public void addNotify() {        
        super.addNotify();
        for (int i = 0; i < ApplicationAPIService.SERVICE_LENGTH; i++){
            serviceType.addItem(NbBundle.getMessage(DeviceAnywhereCustomizerPanel.class, "Service_" + i));
        }        

        int index = 0;
        try {
            index = Integer.parseInt(selectedService.getText());
        } catch (Exception e){
        }       
        serviceType.setSelectedIndex(index);
        serviceType.addActionListener(L);
    }

    @Override
    public void removeNotify(){
        serviceType.removeActionListener(L);
        super.removeNotify();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectedService = new javax.swing.JTextField();
        selectedService.setName(DeviceAnywhereDeploymentPlugin.PROP_SERVICE);
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldUser = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        serviceType = new javax.swing.JComboBox();

        jLabel3.setLabelFor(jTextFieldUser);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DeviceAnywhereGlobalCustomizerPanel.class, "LBL_UserName")); // NOI18N

        jLabel4.setLabelFor(jPasswordField);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(DeviceAnywhereGlobalCustomizerPanel.class, "LBL_Password")); // NOI18N

        jTextFieldUser.setName(DeviceAnywhereDeploymentPlugin.PROP_USERID);

        jPasswordField.setName(DeviceAnywhereDeploymentPlugin.PROP_PASSWORD);

        jTextArea1.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);
        jTextArea1.setText(org.openide.util.NbBundle.getMessage(DeviceAnywhereGlobalCustomizerPanel.class, "MSG_PassWarning")); // NOI18N
        jTextArea1.setWrapStyleWord(true);

        jLabel1.setLabelFor(serviceType);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DeviceAnywhereGlobalCustomizerPanel.class, "LBL_Service")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTextArea1)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel3)
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                                .add(1, 1, 1))
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextFieldUser)
                            .add(jPasswordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                            .add(serviceType, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .add(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jTextFieldUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jPasswordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(serviceType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextArea1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JPasswordField jPasswordField;
    javax.swing.JTextArea jTextArea1;
    javax.swing.JTextField jTextFieldUser;
    private javax.swing.JTextField selectedService;
    private javax.swing.JComboBox serviceType;
    // End of variables declaration//GEN-END:variables
    
    private ActionListener L = new ActionListener(){
        public void actionPerformed(ActionEvent e) {
            selectedService.removeActionListener(L);
            selectedService.setText(String.valueOf(serviceType.getSelectedIndex()));
            selectedService.addActionListener(L);
        }        
    };        
}
