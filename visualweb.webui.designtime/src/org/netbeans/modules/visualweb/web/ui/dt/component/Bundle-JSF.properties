# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

# AddRemove
AddRemove_Description=Component that allows items from one list to be added to, or removed from, a second list
AddRemove_DisplayName=Add Remove List
AddRemove_addAllButton_Description=Use this facet to replace the standard "Add All" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_addAllButton</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> addAll()</code> function. See the section on JavaScript for details.
AddRemove_addAllButton_DisplayName=Add All Button
AddRemove_addButton_Description=Use this facet to replace the standard "Add" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_addButton</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> add()</code> function. See the section on JavaScript for details.
AddRemove_addButton_DisplayName=Add Button
AddRemove_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
AddRemove_attributes_DisplayName=Attributes Map
AddRemove_availableItemsLabel_Description=The label for the available list
AddRemove_availableItemsLabel_DisplayName=Available Items label
AddRemove_childCount_Description=The number of child components associated with this component.
AddRemove_childCount_DisplayName=Child Component Count
AddRemove_children_Description=A mutable List of the child components associated with this component.
AddRemove_children_DisplayName=Child Component List
AddRemove_converter_Description=Converter instance registered with this component.
AddRemove_converter_DisplayName=Converter
AddRemove_disabled_Description=Disables the component and prevents its value from being submitted
AddRemove_disabled_DisplayName=Disabled
AddRemove_duplicateSelections_Description=Allow duplicate entries in the selected list
AddRemove_duplicateSelections_DisplayName=Allow Duplicate Selections
AddRemove_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
AddRemove_facets_DisplayName=Facets Map
AddRemove_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
AddRemove_family_DisplayName=Component Family
AddRemove_footer_Description=Use this facet to create a footer for the component.
AddRemove_footer_DisplayName=Footer
AddRemove_header_Description=Use this facet to create a header for the component. The facet will replace the component label.
AddRemove_header_DisplayName=Header
AddRemove_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
AddRemove_id_DisplayName=Component Identifier
AddRemove_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
AddRemove_immediate_DisplayName=Immediate Action
AddRemove_items_Description=The object that represents the options from which the user can select
AddRemove_items_DisplayName=Items
AddRemove_labelLevel_Description=Set the style for the label property
AddRemove_labelLevel_DisplayName=Label Level
AddRemove_labelOnTop_Description=Put the integrated component label on top instead of on the left side
AddRemove_labelOnTop_DisplayName=Label on Top
AddRemove_label_Description=Label for the component
AddRemove_label_DisplayName=Label
AddRemove_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
AddRemove_localValueSet_DisplayName=Local Value Set
AddRemove_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
AddRemove_localValue_DisplayName=Local Value
AddRemove_moveButtons_Description=Show the Move Up and Move Down buttons
AddRemove_moveButtons_DisplayName=Move Buttons
AddRemove_moveDownButton_Description=Use this facet to replace the standard "Move Down" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_moveDownButton</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> moveDown()</code> function. See the section on JavaScript for details.
AddRemove_moveDownButton_DisplayName=Move Down Button
AddRemove_moveUpButton_Description=Use this facet to replace the standard "Move Up" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_moveUpButton</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> moveUp()</code> function. See the section on JavaScript for details.
AddRemove_moveUpButton_DisplayName=Move Up Button
AddRemove_onBlur_Description=Scripting code executed when this element loses focus.
AddRemove_onBlur_DisplayName=Blur Script
AddRemove_onChange_Description=Scripting code executed when the element value of this component is changed.
AddRemove_onChange_DisplayName=Value Change Script
AddRemove_onClick_Description=Scripting code executed when a mouse click occurs over this component.
AddRemove_onClick_DisplayName=Click Script
AddRemove_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
AddRemove_onDblClick_DisplayName=Double Click Script
AddRemove_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
AddRemove_onFocus_DisplayName=Focus Script
AddRemove_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
AddRemove_onKeyDown_DisplayName=Key Down Script
AddRemove_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
AddRemove_onKeyPress_DisplayName=Key Press Script
AddRemove_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
AddRemove_onKeyUp_DisplayName=Key Up Script
AddRemove_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
AddRemove_onMouseDown_DisplayName=Mouse Down Script
AddRemove_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
AddRemove_onMouseMove_DisplayName=Mouse Move Script
AddRemove_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
AddRemove_onMouseOut_DisplayName=Mouse Out Script
AddRemove_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
AddRemove_onMouseOver_DisplayName=Mouse In Script
AddRemove_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
AddRemove_onMouseUp_DisplayName=Mouse Up Script
AddRemove_onSelect_Description=Scripting code executed when some text in this component value is selected.
AddRemove_onSelect_DisplayName=Text Selected Script
AddRemove_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
AddRemove_parent_DisplayName=Parent Component
AddRemove_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
AddRemove_readOnly_DisplayName=Read-only
AddRemove_removeAllButton_Description=Use this facet to replace the standard "Remove All" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_removeAllButton</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> removeAll()</code> function. See the section on JavaScript for details.
AddRemove_removeAllButton_DisplayName=Remove All Button
AddRemove_removeButton_Description=Use this facet to replace the standard "Remove" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_removeButton</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> remove()</code> function. See the section on JavaScript for details.
AddRemove_removeButton_DisplayName=Remove Button
AddRemove_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
AddRemove_rendered_DisplayName=Rendered Flag
AddRemove_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
AddRemove_rendererType_DisplayName=Renderer Type
AddRemove_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
AddRemove_rendersChildren_DisplayName=Renders Children
AddRemove_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
AddRemove_required_DisplayName=Required Flag
AddRemove_rows_Description=The number of items to display
AddRemove_rows_DisplayName=Rows
AddRemove_selectAll_Description=Show the Add All and Remove All buttons
AddRemove_selectAll_DisplayName=Select All Buttons
AddRemove_selectedItemsLabel_Description=The label for the selected list
AddRemove_selectedItemsLabel_DisplayName=Selected Items label
AddRemove_selected_Description=The object that represents the selected value or values
AddRemove_selected_DisplayName=Selected
AddRemove_separators_Description=Adds separator lines between option groups defined in the items list
AddRemove_separators_DisplayName=Separators
AddRemove_sorted_Description=Sort the options in alphabetical order
AddRemove_sorted_DisplayName=Sorted
AddRemove_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
AddRemove_styleClass_DisplayName=CSS Style Class(es)
AddRemove_style_Description=CSS style(s) to be applied when this component is rendered.
AddRemove_style_DisplayName=CSS Style(s)
AddRemove_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
AddRemove_submittedValue_DisplayName=Submitted Value
AddRemove_tabIndex_Description=The position of this component in the tabbing order sequence
AddRemove_tabIndex_DisplayName=Tab Index
AddRemove_toolTip_Description=Display the text as a tooltip for this component
AddRemove_toolTip_DisplayName=Tool Tip
AddRemove_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
AddRemove_validator_DisplayName=Validator
AddRemove_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
AddRemove_valueChangeListener_DisplayName=Value Change Listener
AddRemove_value_Description=The current value of this component.
AddRemove_value_DisplayName=Value
AddRemove_vertical_Description=Use vertical layout instead of the default horizontal one
AddRemove_vertical_DisplayName=Vertical layout
AddRemove_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
AddRemove_visible_DisplayName=Visible

# Alarm
Alarm_Description=Represents a theme-specific alarm icon specified by it's severity or by the url.
Alarm_DisplayName=Alarm
Alarm_align_Description=Specifies the position of the image with respect to its context.
Alarm_align_DisplayName=Align
Alarm_alt_Description=Alternative text description used by screen reader tools
Alarm_alt_DisplayName=Alt Text
Alarm_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Alarm_attributes_DisplayName=Attributes Map
Alarm_border_Description=Specify the width of the image border in pixels
Alarm_border_DisplayName=Border
Alarm_childCount_Description=The number of child components associated with this component.
Alarm_childCount_DisplayName=Child Component Count
Alarm_children_Description=A mutable List of the child components associated with this component.
Alarm_children_DisplayName=Child Component List
Alarm_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Alarm_facets_DisplayName=Facets Map
Alarm_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Alarm_family_DisplayName=Component Family
Alarm_height_Description=Specify the height of the image to override its default height (not supported on some browsers)
Alarm_height_DisplayName=Height
Alarm_hspace_Description=Specify the amount of white space (in pixels) on the right and left of the image
Alarm_hspace_DisplayName=Horizontal Space
Alarm_icon_Description=The identifier of the desired theme image.
Alarm_icon_DisplayName=Icon
Alarm_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Alarm_id_DisplayName=Component Identifier
Alarm_longDesc_Description=A verbose description of this image
Alarm_longDesc_DisplayName=Long Description
Alarm_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Alarm_onClick_DisplayName=Click Script
Alarm_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Alarm_onDblClick_DisplayName=Double Click Script
Alarm_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Alarm_onKeyDown_DisplayName=Key Down Script
Alarm_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Alarm_onKeyPress_DisplayName=Key Press Script
Alarm_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Alarm_onKeyUp_DisplayName=Key Up Script
Alarm_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Alarm_onMouseDown_DisplayName=Mouse Down Script
Alarm_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Alarm_onMouseMove_DisplayName=Mouse Move Script
Alarm_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Alarm_onMouseOut_DisplayName=Mouse Out Script
Alarm_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Alarm_onMouseOver_DisplayName=Mouse In Script
Alarm_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Alarm_onMouseUp_DisplayName=Mouse Up Script
Alarm_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Alarm_parent_DisplayName=Parent Component
Alarm_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Alarm_rendered_DisplayName=Rendered Flag
Alarm_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Alarm_rendererType_DisplayName=Renderer Type
Alarm_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Alarm_rendersChildren_DisplayName=Renders Children
Alarm_severity_Description=Specifies the severity of the alarm. Valid values are\: critical, major, minor, down, ok. Note, a severity of ok renders no alarm icon. This is the default value.
Alarm_severity_DisplayName=Severity
Alarm_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Alarm_styleClass_DisplayName=CSS Style Class(es)
Alarm_style_Description=CSS style(s) to be applied when this component is rendered.
Alarm_style_DisplayName=CSS Style(s)
Alarm_toolTip_Description=Display the text as a tooltip for this component
Alarm_toolTip_DisplayName=Tool Tip
Alarm_url_Description=Absolute or relative URL to the image to be rendered.
Alarm_url_DisplayName=Url
Alarm_value_Description=The current path or URL to the image of this component.
Alarm_value_DisplayName=Value
Alarm_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Alarm_visible_DisplayName=Visible
Alarm_vspace_Description=Specify the amount of white space (in pixels) above and below the image
Alarm_vspace_DisplayName=Vertical Space
Alarm_width_Description=Specify the width of the image to override its default width (not supported on some browsers)
Alarm_width_DisplayName=Width

# Alert
Alert_Description=Displays a formatted alert message, usually located at the top of a page
Alert_DisplayName=Alert
Alert_alt_Description=Alternative text description used by screen reader tools
Alert_alt_DisplayName=Alt Text
Alert_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Alert_attributes_DisplayName=Attributes Map
Alert_childCount_Description=The number of child components associated with this component.
Alert_childCount_DisplayName=Child Component Count
Alert_children_Description=A mutable List of the child components associated with this component.
Alert_children_DisplayName=Child Component List
Alert_converter_Description=Converter instance registered with this component.
Alert_converter_DisplayName=Converter
Alert_detail_Description=Optional detailed message text for the alert
Alert_detail_DisplayName=Detail Message
Alert_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Alert_facets_DisplayName=Facets Map
Alert_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Alert_family_DisplayName=Component Family
Alert_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Alert_id_DisplayName=Component Identifier
Alert_linkAction_Description=Method binding representing a method that receives action from the embedded hyperlink component.
Alert_linkAction_DisplayName=Link Action
Alert_linkTarget_Description=The window (target) in which to load the link that is specified with linkText.
Alert_linkTarget_DisplayName=Link Target
Alert_linkText_Description=The text for an optional link that is appended to the detail message.
Alert_linkText_DisplayName=Link Text
Alert_linkToolTip_Description=ToolTip text for the hyperlink within the alert box
Alert_linkToolTip_DisplayName=Link Tooltip
Alert_linkURL_Description=Resource path(may be absolute, relative or context relative)
Alert_linkURL_DisplayName=Link URL
Alert_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Alert_localValue_DisplayName=Local Value
Alert_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Alert_parent_DisplayName=Parent Component
Alert_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Alert_rendered_DisplayName=Rendered Flag
Alert_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Alert_rendererType_DisplayName=Renderer Type
Alert_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Alert_rendersChildren_DisplayName=Renders Children
Alert_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Alert_styleClass_DisplayName=CSS Style Class(es)
Alert_style_Description=CSS style(s) to be applied when this component is rendered.
Alert_style_DisplayName=CSS Style(s)
Alert_summary_Description=Summary message text for the alert. This brief message is prominently displayed next to the icon.
Alert_summary_DisplayName=Summary Message
Alert_tabIndex_Description=The position of this component in the tabbing order sequence
Alert_tabIndex_DisplayName=Tab Index
Alert_type_Description=The type or category of alert. This type can be set to either "information", "success", "warning" or "error".
Alert_type_DisplayName=Alert Type
Alert_value_Description=The current value of this component.
Alert_value_DisplayName=Value
Alert_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Alert_visible_DisplayName=Visible

# Anchor
Anchor_Description=Marks a particular spot on a page to jump to from a hyperlink
Anchor_DisplayName=Anchor
Anchor_attributes_Description=
Anchor_attributes_DisplayName=
Anchor_childCount_Description=
Anchor_childCount_DisplayName=
Anchor_children_Description=
Anchor_children_DisplayName=
Anchor_facets_Description=
Anchor_facets_DisplayName=
Anchor_family_Description=
Anchor_family_DisplayName=
Anchor_id_Description=
Anchor_id_DisplayName=
Anchor_parent_Description=
Anchor_parent_DisplayName=
Anchor_rendered_Description=
Anchor_rendered_DisplayName=Rendered Flag
Anchor_rendererType_Description=
Anchor_rendererType_DisplayName=
Anchor_rendersChildren_Description=
Anchor_rendersChildren_DisplayName=
Anchor_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Anchor_styleClass_DisplayName=CSS Style Class(es)
Anchor_style_Description=CSS style(s) to be applied when this component is rendered.
Anchor_style_DisplayName=CSS Style(s)

# Body
Body_Description=The body element defines the documents' body. It contains all the contents of the document (like text, images, colors, graphics, etc.).
Body_DisplayName=Body
Body_attributes_Description=
Body_attributes_DisplayName=
Body_childCount_Description=
Body_childCount_DisplayName=
Body_children_Description=
Body_children_DisplayName=
Body_facets_Description=
Body_facets_DisplayName=
Body_family_Description=
Body_family_DisplayName=
Body_focus_Description=Specify the ID of the component that should receive focus when the page is loaded
Body_focus_DisplayName=Component to receive focus
Body_id_Description=
Body_id_DisplayName=
Body_imageURL_Description=Resource path of an image used to appear in the background
Body_imageURL_DisplayName=Image URL
Body_onBlur_Description=Scripting code executed when this element loses focus.
Body_onBlur_DisplayName=Blur Script
Body_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Body_onClick_DisplayName=Click Script
Body_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Body_onDblClick_DisplayName=Double Click Script
Body_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Body_onFocus_DisplayName=Focus Script
Body_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Body_onKeyDown_DisplayName=Key Down Script
Body_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Body_onKeyPress_DisplayName=Key Press Script
Body_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Body_onKeyUp_DisplayName=Key Up Script
Body_onLoad_Description=Scripting code executed when when this page is loaded in a browser.
Body_onLoad_DisplayName=Onload Script
Body_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Body_onMouseDown_DisplayName=Mouse Down Script
Body_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Body_onMouseMove_DisplayName=Mouse Move Script
Body_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Body_onMouseOut_DisplayName=Mouse Out Script
Body_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Body_onMouseOver_DisplayName=Mouse In Script
Body_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Body_onMouseUp_DisplayName=Mouse Up Script
Body_onUnload_Description=Scripting code executed when this page is unloaded from a browser as a user exits the page.
Body_onUnload_DisplayName=Unload Script
Body_parent_Description=
Body_parent_DisplayName=
Body_rendered_Description=
Body_rendered_DisplayName=Rendered Flag
Body_rendererType_Description=
Body_rendererType_DisplayName=
Body_rendersChildren_Description=
Body_rendersChildren_DisplayName=
Body_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Body_styleClass_DisplayName=CSS Style Class(es)
Body_style_Description=CSS style(s) to be applied when this component is rendered.
Body_style_DisplayName=CSS Style(s)
Body_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Body_visible_DisplayName=Visible

# Breadcrumbs
Breadcrumbs_Description=Displays a set of hyperlinks that represent a user's location within an application
Breadcrumbs_DisplayName=Breadcrumbs
Breadcrumbs_actionListener_Description=MethodBinding representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void.
Breadcrumbs_actionListener_DisplayName=Action Listener
Breadcrumbs_action_Description=MethodBinding representing the application action to invoke when this component is activated by the user. The expression must evaluate to a either a String or a public method that takes no parameters, and returns a String (the logical outcome) which is passed to the NavigationHandler for this application.
Breadcrumbs_action_DisplayName=Application Action
Breadcrumbs_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Breadcrumbs_attributes_DisplayName=Attributes Map
Breadcrumbs_childCount_Description=The number of child components associated with this component.
Breadcrumbs_childCount_DisplayName=Child Component Count
Breadcrumbs_children_Description=A mutable List of the child components associated with this component.
Breadcrumbs_children_DisplayName=Child Component List
Breadcrumbs_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Breadcrumbs_facets_DisplayName=Facets Map
Breadcrumbs_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Breadcrumbs_family_DisplayName=Component Family
Breadcrumbs_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Breadcrumbs_id_DisplayName=Component Identifier
Breadcrumbs_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
Breadcrumbs_immediate_DisplayName=Immediate Action
Breadcrumbs_pages_Description=Expression that refers to an array of components that represent the pages
Breadcrumbs_pages_DisplayName=Pages
Breadcrumbs_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Breadcrumbs_parent_DisplayName=Parent Component
Breadcrumbs_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Breadcrumbs_rendered_DisplayName=Rendered Flag
Breadcrumbs_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Breadcrumbs_rendererType_DisplayName=Renderer Type
Breadcrumbs_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Breadcrumbs_rendersChildren_DisplayName=Renders Children
Breadcrumbs_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Breadcrumbs_styleClass_DisplayName=CSS Style Class(es)
Breadcrumbs_style_Description=CSS style(s) to be applied when this component is rendered.
Breadcrumbs_style_DisplayName=CSS Style(s)
Breadcrumbs_tabIndex_Description=The position of this component in the tabbing order sequence
Breadcrumbs_tabIndex_DisplayName=Tab Index
Breadcrumbs_value_Description=The current value of this component.
Breadcrumbs_value_DisplayName=Value
Breadcrumbs_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Breadcrumbs_visible_DisplayName=Visible

# Button
Button_Description=Represents a button that may be used to submit a Form.
Button_DisplayName=Button
Button_actionListener_Description=Method binding invoked when an action occurs on this, and possibly other, components
Button_actionListener_DisplayName=Action Listener
Button_action_Description=Method binding invoked to process an action on the component
Button_action_DisplayName=Action
Button_alt_Description=Alternative text description used by screen reader tools
Button_alt_DisplayName=Alt Text
Button_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Button_attributes_DisplayName=Attributes Map
Button_childCount_Description=The number of child components associated with this component.
Button_childCount_DisplayName=Child Component Count
Button_children_Description=A mutable List of the child components associated with this component.
Button_children_DisplayName=Child Component List
Button_disabled_Description=Disables the component and prevents its value from being submitted
Button_disabled_DisplayName=Disabled
Button_escape_Description=Escape HTML markup in the button text
Button_escape_DisplayName=Escape
Button_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Button_facets_DisplayName=Facets Map
Button_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Button_family_DisplayName=Component Family
Button_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Button_id_DisplayName=Component Identifier
Button_imageURL_Description=Resource path of an image used to appear as the button
Button_imageURL_DisplayName=Image URL
Button_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
Button_immediate_DisplayName=Immediate Action
Button_mini_Description=Mini style is used for the button
Button_mini_DisplayName=Is Mini
Button_noTextPadding_Description=Do not add padding to the button text
Button_noTextPadding_DisplayName=No Text Padding
Button_onBlur_Description=Scripting code executed when this element loses focus.
Button_onBlur_DisplayName=Blur Script
Button_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Button_onClick_DisplayName=Click Script
Button_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Button_onDblClick_DisplayName=Double Click Script
Button_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Button_onFocus_DisplayName=Focus Script
Button_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Button_onKeyDown_DisplayName=Key Down Script
Button_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Button_onKeyPress_DisplayName=Key Press Script
Button_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Button_onKeyUp_DisplayName=Key Up Script
Button_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Button_onMouseDown_DisplayName=Mouse Down Script
Button_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Button_onMouseMove_DisplayName=Mouse Move Script
Button_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Button_onMouseOut_DisplayName=Mouse Out Script
Button_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Button_onMouseOver_DisplayName=Mouse In Script
Button_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Button_onMouseUp_DisplayName=Mouse Up Script
Button_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Button_parent_DisplayName=Parent Component
Button_primary_Description=Highlight this button by using the primary style
Button_primary_DisplayName=Is Primary
Button_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Button_rendered_DisplayName=Rendered Flag
Button_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Button_rendererType_DisplayName=Renderer Type
Button_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Button_rendersChildren_DisplayName=Renders Children
Button_reset_Description=Do not add padding to the button text
Button_reset_DisplayName=Is Reset
Button_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Button_styleClass_DisplayName=CSS Style Class(es)
Button_style_Description=CSS style(s) to be applied when this component is rendered.
Button_style_DisplayName=CSS Style(s)
Button_tabIndex_Description=The position of this component in the tabbing order sequence
Button_tabIndex_DisplayName=Tab Index
Button_text_Description=Text label (will not appear if imageURL is set)
Button_text_DisplayName=Button Text
Button_toolTip_Description=Display the text as a tooltip for this component
Button_toolTip_DisplayName=Tool Tip
Button_value_Description=The current value of this component.
Button_value_DisplayName=Value
Button_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Button_visible_DisplayName=Visible

# CalendarMonth
CalendarMonth_Description=
CalendarMonth_DisplayName=Calendar Month
CalendarMonth_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
CalendarMonth_attributes_DisplayName=Attributes Map
CalendarMonth_childCount_Description=The number of child components associated with this component.
CalendarMonth_childCount_DisplayName=Child Component Count
CalendarMonth_children_Description=A mutable List of the child components associated with this component.
CalendarMonth_children_DisplayName=Child Component List
CalendarMonth_converter_Description=Converter instance registered with this component.
CalendarMonth_converter_DisplayName=Converter
CalendarMonth_dateFormatPattern_Description=
CalendarMonth_dateFormatPattern_DisplayName=
CalendarMonth_dateFormat_Description=
CalendarMonth_dateFormat_DisplayName=
CalendarMonth_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
CalendarMonth_facets_DisplayName=Facets Map
CalendarMonth_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
CalendarMonth_family_DisplayName=Component Family
CalendarMonth_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
CalendarMonth_id_DisplayName=Component Identifier
CalendarMonth_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
CalendarMonth_localValue_DisplayName=Local Value
CalendarMonth_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
CalendarMonth_parent_DisplayName=Parent Component
CalendarMonth_popup_Description=Flag determining whether the component should be rendered in its popup version (as used by Calendar), or in the inline version used by Scheduler.
CalendarMonth_popup_DisplayName=Popup Version
CalendarMonth_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
CalendarMonth_rendered_DisplayName=Rendered Flag
CalendarMonth_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
CalendarMonth_rendererType_DisplayName=Renderer Type
CalendarMonth_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
CalendarMonth_rendersChildren_DisplayName=Renders Children
CalendarMonth_selectedDate_Description=
CalendarMonth_selectedDate_DisplayName=
CalendarMonth_styleClass_Description=
CalendarMonth_styleClass_DisplayName=
CalendarMonth_style_Description=
CalendarMonth_style_DisplayName=
CalendarMonth_tabIndex_Description=
CalendarMonth_tabIndex_DisplayName=
CalendarMonth_timeZone_Description=
CalendarMonth_timeZone_DisplayName=
CalendarMonth_toolTip_Description=
CalendarMonth_toolTip_DisplayName=
CalendarMonth_value_Description=The current value of this component.
CalendarMonth_value_DisplayName=Value
CalendarMonth_visible_Description=
CalendarMonth_visible_DisplayName=
CalendarMonth_yearsToShow_Description=
CalendarMonth_yearsToShow_DisplayName=

# Calendar
Calendar_Description=Represents a date input field with a pop up calendar
Calendar_DisplayName=Calendar
Calendar_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Calendar_attributes_DisplayName=Attributes Map
Calendar_childCount_Description=The number of child components associated with this component.
Calendar_childCount_DisplayName=Child Component Count
Calendar_children_Description=A mutable List of the child components associated with this component.
Calendar_children_DisplayName=Child Component List
Calendar_columns_Description=Number of character columns used to render this field.
Calendar_columns_DisplayName=Columns
Calendar_converter_Description=
Calendar_converter_DisplayName=
Calendar_dateFormatPatternHelp_Description=Message below the component that describes the format of the date string. Bind this attribute to a localized message when the <code>dateFormatPattern</code> property is set.
Calendar_dateFormatPatternHelp_DisplayName=Date Format Pattern Help
Calendar_dateFormatPattern_Description=The date format pattern to use (such as MM/dd/yyyy). If none is specified, a locale-relative default is assumed.
Calendar_dateFormatPattern_DisplayName=Date Format Pattern
Calendar_disabled_Description=Disables the component and prevents its value from being submitted
Calendar_disabled_DisplayName=Disabled
Calendar_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Calendar_facets_DisplayName=Facets Map
Calendar_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Calendar_family_DisplayName=Component Family
Calendar_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Calendar_id_DisplayName=Component Identifier
Calendar_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Calendar_immediate_DisplayName=Immediate Action
Calendar_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
Calendar_labelLevel_DisplayName=Label Level
Calendar_label_Description=Display this text in a label associated with the field
Calendar_label_DisplayName=Label
Calendar_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Calendar_localValueSet_DisplayName=Local Value Set
Calendar_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Calendar_localValue_DisplayName=Local Value
Calendar_maxDate_Description=A <code>java.util.Date</code> object representing the last selectable day. The default value is 4 years after the <code>minDate</code> property's value.
Calendar_maxDate_DisplayName=Last selectable date
Calendar_maxLength_Description=
Calendar_maxLength_DisplayName=
Calendar_minDate_Description=A <code>java.util.Date</code> object representing the first selectable day. The default value is today's date.
Calendar_minDate_DisplayName=First selectable date
Calendar_onBlur_Description=Scripting code executed when this element loses focus.
Calendar_onBlur_DisplayName=Blur Script
Calendar_onChange_Description=Scripting code executed when the element value of this component is changed.
Calendar_onChange_DisplayName=Value Change Script
Calendar_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Calendar_onClick_DisplayName=Click Script
Calendar_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Calendar_onDblClick_DisplayName=Double Click Script
Calendar_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Calendar_onFocus_DisplayName=Focus Script
Calendar_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Calendar_onKeyDown_DisplayName=Key Down Script
Calendar_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Calendar_onKeyPress_DisplayName=Key Press Script
Calendar_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Calendar_onKeyUp_DisplayName=Key Up Script
Calendar_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Calendar_onMouseDown_DisplayName=Mouse Down Script
Calendar_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Calendar_onMouseMove_DisplayName=Mouse Move Script
Calendar_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Calendar_onMouseOut_DisplayName=Mouse Out Script
Calendar_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Calendar_onMouseOver_DisplayName=Mouse In Script
Calendar_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Calendar_onMouseUp_DisplayName=Mouse Up Script
Calendar_onSelect_Description=Scripting code executed when some text in this component value is selected.
Calendar_onSelect_DisplayName=Text Selected Script
Calendar_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Calendar_parent_DisplayName=Parent Component
Calendar_readOnly_Description=Flag indicating that modification of this component by the user is not currently permitted, but that it will be included when the form is submitted.
Calendar_readOnly_DisplayName=Read Only
Calendar_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Calendar_rendered_DisplayName=Rendered Flag
Calendar_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Calendar_rendererType_DisplayName=Renderer Type
Calendar_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Calendar_rendersChildren_DisplayName=Renders Children
Calendar_required_Description=
Calendar_required_DisplayName=
Calendar_selectedDate_Description=A <code>java.util.Date</code> object representing the currently selected calendar date.
Calendar_selectedDate_DisplayName=Selected Date
Calendar_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Calendar_styleClass_DisplayName=CSS Style Class(es)
Calendar_style_Description=CSS style(s) to be applied when this component is rendered.
Calendar_style_DisplayName=CSS Style(s)
Calendar_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Calendar_submittedValue_DisplayName=Submitted Value
Calendar_tabIndex_Description=The position of this component in the tabbing order sequence
Calendar_tabIndex_DisplayName=Tab Index
Calendar_text_Description=Text value that will be displayed within this input field
Calendar_text_DisplayName=Text
Calendar_timeZone_Description=The <code>java.util.TimeZone</code> used with this component. Unless set, the default TimeZone for the locale in <code>javax.faces.component.UIViewRoot</code> is used.
Calendar_timeZone_DisplayName=Time Zone
Calendar_toolTip_Description=Display the text as a tooltip for this component
Calendar_toolTip_DisplayName=Tool Tip
Calendar_trim_Description=
Calendar_trim_DisplayName=
Calendar_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Calendar_validator_DisplayName=Validator
Calendar_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Calendar_valueChangeListener_DisplayName=Value Change Listener
Calendar_value_Description=The current value of this component.
Calendar_value_DisplayName=Value
Calendar_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Calendar_visible_DisplayName=Visible

# CheckboxGroup
CheckboxGroup_Description=A set of zero or more labelled checkboxes
CheckboxGroup_DisplayName=Checkbox Group
CheckboxGroup_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
CheckboxGroup_attributes_DisplayName=Attributes Map
CheckboxGroup_childCount_Description=The number of child components associated with this component.
CheckboxGroup_childCount_DisplayName=Child Component Count
CheckboxGroup_children_Description=A mutable List of the child components associated with this component.
CheckboxGroup_children_DisplayName=Child Component List
CheckboxGroup_columns_Description=The number of columns that may be used to lay out the checkboxes
CheckboxGroup_columns_DisplayName=Columns
CheckboxGroup_converter_Description=Converter instance registered with this component.
CheckboxGroup_converter_DisplayName=Converter
CheckboxGroup_disabled_Description=Disables the component and prevents its value from being submitted
CheckboxGroup_disabled_DisplayName=Disabled
CheckboxGroup_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
CheckboxGroup_facets_DisplayName=Facets Map
CheckboxGroup_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
CheckboxGroup_family_DisplayName=Component Family
CheckboxGroup_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
CheckboxGroup_id_DisplayName=Component Identifier
CheckboxGroup_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
CheckboxGroup_immediate_DisplayName=Immediate Action
CheckboxGroup_items_Description=The object that represents the options from which the user can select
CheckboxGroup_items_DisplayName=Items
CheckboxGroup_labelLevel_Description=Set the style for the label property
CheckboxGroup_labelLevel_DisplayName=Label Level
CheckboxGroup_label_Description=Label for the component
CheckboxGroup_label_DisplayName=Label
CheckboxGroup_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
CheckboxGroup_localValueSet_DisplayName=Local Value Set
CheckboxGroup_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
CheckboxGroup_localValue_DisplayName=Local Value
CheckboxGroup_onBlur_Description=Scripting code executed when this element loses focus.
CheckboxGroup_onBlur_DisplayName=Blur Script
CheckboxGroup_onChange_Description=Scripting code executed when the element value of this component is changed.
CheckboxGroup_onChange_DisplayName=Value Change Script
CheckboxGroup_onClick_Description=Scripting code executed when a mouse click occurs over this component.
CheckboxGroup_onClick_DisplayName=Click Script
CheckboxGroup_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
CheckboxGroup_onDblClick_DisplayName=Double Click Script
CheckboxGroup_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
CheckboxGroup_onFocus_DisplayName=Focus Script
CheckboxGroup_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
CheckboxGroup_onKeyDown_DisplayName=Key Down Script
CheckboxGroup_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
CheckboxGroup_onKeyPress_DisplayName=Key Press Script
CheckboxGroup_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
CheckboxGroup_onKeyUp_DisplayName=Key Up Script
CheckboxGroup_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
CheckboxGroup_onMouseDown_DisplayName=Mouse Down Script
CheckboxGroup_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
CheckboxGroup_onMouseMove_DisplayName=Mouse Move Script
CheckboxGroup_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
CheckboxGroup_onMouseOut_DisplayName=Mouse Out Script
CheckboxGroup_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
CheckboxGroup_onMouseOver_DisplayName=Mouse In Script
CheckboxGroup_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
CheckboxGroup_onMouseUp_DisplayName=Mouse Up Script
CheckboxGroup_onSelect_Description=Scripting code executed when some text in this component value is selected.
CheckboxGroup_onSelect_DisplayName=Text Selected Script
CheckboxGroup_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
CheckboxGroup_parent_DisplayName=Parent Component
CheckboxGroup_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
CheckboxGroup_readOnly_DisplayName=Read-only
CheckboxGroup_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
CheckboxGroup_rendered_DisplayName=Rendered Flag
CheckboxGroup_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
CheckboxGroup_rendererType_DisplayName=Renderer Type
CheckboxGroup_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
CheckboxGroup_rendersChildren_DisplayName=Renders Children
CheckboxGroup_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
CheckboxGroup_required_DisplayName=Required Flag
CheckboxGroup_selected_Description=The object that represents the selected value or values
CheckboxGroup_selected_DisplayName=Selected
CheckboxGroup_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
CheckboxGroup_styleClass_DisplayName=CSS Style Class(es)
CheckboxGroup_style_Description=CSS style(s) to be applied when this component is rendered.
CheckboxGroup_style_DisplayName=CSS Style(s)
CheckboxGroup_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
CheckboxGroup_submittedValue_DisplayName=Submitted Value
CheckboxGroup_tabIndex_Description=The position of this component in the tabbing order sequence
CheckboxGroup_tabIndex_DisplayName=Tab Index
CheckboxGroup_toolTip_Description=Display the text as a tooltip for this component
CheckboxGroup_toolTip_DisplayName=Tool Tip
CheckboxGroup_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
CheckboxGroup_validator_DisplayName=Validator
CheckboxGroup_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
CheckboxGroup_valueChangeListener_DisplayName=Value Change Listener
CheckboxGroup_value_Description=The current value of this component.
CheckboxGroup_value_DisplayName=Value
CheckboxGroup_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
CheckboxGroup_visible_DisplayName=Visible

# Checkbox
Checkbox_Description=A checkbox for a single, selectable option
Checkbox_DisplayName=Checkbox
Checkbox_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Checkbox_attributes_DisplayName=Attributes Map
Checkbox_childCount_Description=The number of child components associated with this component.
Checkbox_childCount_DisplayName=Child Component Count
Checkbox_children_Description=A mutable List of the child components associated with this component.
Checkbox_children_DisplayName=Child Component List
Checkbox_converter_Description=Converter instance registered with this component.
Checkbox_converter_DisplayName=Converter
Checkbox_disabled_Description=Disables the component and prevents its value from being submitted
Checkbox_disabled_DisplayName=Disabled
Checkbox_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Checkbox_facets_DisplayName=Facets Map
Checkbox_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Checkbox_family_DisplayName=Component Family
Checkbox_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Checkbox_id_DisplayName=Component Identifier
Checkbox_imageURL_Description=Resource path of an image used to appear in the component
Checkbox_imageURL_DisplayName=Image URL
Checkbox_image_Description=<p> The component, typically a<code>com.sun.rave.web.ui.component.ImageComponent</code> component that may appear with a checkbox or radio button.</p>
Checkbox_image_DisplayName=Control Image
Checkbox_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Checkbox_immediate_DisplayName=Immediate Action
Checkbox_items_Description=
Checkbox_items_DisplayName=
Checkbox_labelLevel_Description=Set the style level for the generated label (if provided)
Checkbox_labelLevel_DisplayName=Label Level
Checkbox_label_Description=Label for the component
Checkbox_label_DisplayName=Label
Checkbox_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Checkbox_localValueSet_DisplayName=Local Value Set
Checkbox_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Checkbox_localValue_DisplayName=Local Value
Checkbox_name_Description=Identifies the group of components to which this component belongs
Checkbox_name_DisplayName=Group Name
Checkbox_onBlur_Description=Scripting code executed when this element loses focus.
Checkbox_onBlur_DisplayName=Blur Script
Checkbox_onChange_Description=Scripting code executed when the element value of this component is changed.
Checkbox_onChange_DisplayName=Value Change Script
Checkbox_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Checkbox_onClick_DisplayName=Click Script
Checkbox_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Checkbox_onDblClick_DisplayName=Double Click Script
Checkbox_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Checkbox_onFocus_DisplayName=Focus Script
Checkbox_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Checkbox_onKeyDown_DisplayName=Key Down Script
Checkbox_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Checkbox_onKeyPress_DisplayName=Key Press Script
Checkbox_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Checkbox_onKeyUp_DisplayName=Key Up Script
Checkbox_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Checkbox_onMouseDown_DisplayName=Mouse Down Script
Checkbox_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Checkbox_onMouseMove_DisplayName=Mouse Move Script
Checkbox_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Checkbox_onMouseOut_DisplayName=Mouse Out Script
Checkbox_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Checkbox_onMouseOver_DisplayName=Mouse In Script
Checkbox_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Checkbox_onMouseUp_DisplayName=Mouse Up Script
Checkbox_onSelect_Description=Scripting code executed when some text in this component value is selected.
Checkbox_onSelect_DisplayName=Text Selected Script
Checkbox_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Checkbox_parent_DisplayName=Parent Component
Checkbox_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
Checkbox_readOnly_DisplayName=Read-only
Checkbox_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Checkbox_rendered_DisplayName=Rendered Flag
Checkbox_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Checkbox_rendererType_DisplayName=Renderer Type
Checkbox_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Checkbox_rendersChildren_DisplayName=Renders Children
Checkbox_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
Checkbox_required_DisplayName=Required Flag
Checkbox_selectedValue_Description=Indicates the value of this component when it is selected. If no value is assigned, the component value is a Boolean
Checkbox_selectedValue_DisplayName=
Checkbox_selected_Description=The object that represents the selected value or values
Checkbox_selected_DisplayName=Selected
Checkbox_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Checkbox_styleClass_DisplayName=CSS Style Class(es)
Checkbox_style_Description=CSS style(s) to be applied when this component is rendered.
Checkbox_style_DisplayName=CSS Style(s)
Checkbox_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Checkbox_submittedValue_DisplayName=Submitted Value
Checkbox_tabIndex_Description=The position of this component in the tabbing order sequence
Checkbox_tabIndex_DisplayName=Tab Index
Checkbox_toolTip_Description=Display the text as a tooltip for this component
Checkbox_toolTip_DisplayName=Tool Tip
Checkbox_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Checkbox_validator_DisplayName=Validator
Checkbox_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Checkbox_valueChangeListener_DisplayName=Value Change Listener
Checkbox_value_Description=The current value of this component.
Checkbox_value_DisplayName=Value
Checkbox_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Checkbox_visible_DisplayName=Visible

# DropDown
DropDown_Description=A drop-down menu from which the web application user may make at most one choice.
DropDown_DisplayName=Drop Down List
DropDown_actionListener_Description=Method binding invoked when an action occurs on this, and possibly other, components (submitForm property must be True)
DropDown_actionListener_DisplayName=Action Listener
DropDown_action_Description=Method binding invoked to process an action on the component (submitForm property must be True)
DropDown_action_DisplayName=Action
DropDown_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
DropDown_attributes_DisplayName=Attributes Map
DropDown_childCount_Description=The number of child components associated with this component.
DropDown_childCount_DisplayName=Child Component Count
DropDown_children_Description=A mutable List of the child components associated with this component.
DropDown_children_DisplayName=Child Component List
DropDown_converter_Description=Converter instance registered with this component.
DropDown_converter_DisplayName=Converter
DropDown_disabled_Description=Disables the component and prevents its value from being submitted
DropDown_disabled_DisplayName=Disabled
DropDown_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
DropDown_facets_DisplayName=Facets Map
DropDown_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
DropDown_family_DisplayName=Component Family
DropDown_forgetValue_Description=Display the component with no initial selection
DropDown_forgetValue_DisplayName=Do not display selected value
DropDown_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
DropDown_id_DisplayName=Component Identifier
DropDown_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
DropDown_immediate_DisplayName=Immediate Action
DropDown_items_Description=The object that represents the options from which the user can select
DropDown_items_DisplayName=Items
DropDown_labelLevel_Description=Set the style for the label property
DropDown_labelLevel_DisplayName=Label Level
DropDown_labelOnTop_Description=Put the integrated component label on top instead of on the left side
DropDown_labelOnTop_DisplayName=Label on Top
DropDown_label_Description=Label for the component
DropDown_label_DisplayName=Label
DropDown_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
DropDown_localValueSet_DisplayName=Local Value Set
DropDown_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
DropDown_localValue_DisplayName=Local Value
DropDown_navigateToValue_Description=Navigate using the action represented by the selected value (submitForm property must be True)
DropDown_navigateToValue_DisplayName=Navigate to Component Value
DropDown_onBlur_Description=Scripting code executed when this element loses focus.
DropDown_onBlur_DisplayName=Blur Script
DropDown_onChange_Description=Scripting code executed when the element value of this component is changed.
DropDown_onChange_DisplayName=Value Change Script
DropDown_onClick_Description=Scripting code executed when a mouse click occurs over this component.
DropDown_onClick_DisplayName=Click Script
DropDown_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
DropDown_onDblClick_DisplayName=Double Click Script
DropDown_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
DropDown_onFocus_DisplayName=Focus Script
DropDown_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
DropDown_onKeyDown_DisplayName=Key Down Script
DropDown_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
DropDown_onKeyPress_DisplayName=Key Press Script
DropDown_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
DropDown_onKeyUp_DisplayName=Key Up Script
DropDown_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
DropDown_onMouseDown_DisplayName=Mouse Down Script
DropDown_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
DropDown_onMouseMove_DisplayName=Mouse Move Script
DropDown_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
DropDown_onMouseOut_DisplayName=Mouse Out Script
DropDown_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
DropDown_onMouseOver_DisplayName=Mouse In Script
DropDown_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
DropDown_onMouseUp_DisplayName=Mouse Up Script
DropDown_onSelect_Description=Scripting code executed when some text in this component value is selected.
DropDown_onSelect_DisplayName=Text Selected Script
DropDown_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
DropDown_parent_DisplayName=Parent Component
DropDown_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
DropDown_readOnly_DisplayName=Read-only
DropDown_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
DropDown_rendered_DisplayName=Rendered Flag
DropDown_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
DropDown_rendererType_DisplayName=Renderer Type
DropDown_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
DropDown_rendersChildren_DisplayName=Renders Children
DropDown_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
DropDown_required_DisplayName=Required Flag
DropDown_rows_Description=The number of items to display
DropDown_rows_DisplayName=Rows
DropDown_selected_Description=The object that represents the selected value or values
DropDown_selected_DisplayName=Selected
DropDown_separators_Description=Adds separator lines between option groups defined in the items list
DropDown_separators_DisplayName=Separators
DropDown_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
DropDown_styleClass_DisplayName=CSS Style Class(es)
DropDown_style_Description=CSS style(s) to be applied when this component is rendered.
DropDown_style_DisplayName=CSS Style(s)
DropDown_submitForm_Description=Flag indicating that the form should be submitted when the value of the component changes.
DropDown_submitForm_DisplayName=Submit the Page on Change
DropDown_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
DropDown_submittedValue_DisplayName=Submitted Value
DropDown_tabIndex_Description=The position of this component in the tabbing order sequence
DropDown_tabIndex_DisplayName=Tab Index
DropDown_toolTip_Description=Display the text as a tooltip for this component
DropDown_toolTip_DisplayName=Tool Tip
DropDown_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
DropDown_validator_DisplayName=Validator
DropDown_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
DropDown_valueChangeListener_DisplayName=Value Change Listener
DropDown_value_Description=The current value of this component.
DropDown_value_DisplayName=Value
DropDown_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
DropDown_visible_DisplayName=Visible

# EditableList
EditableList_Description=Base component for UI components that allow the user to make a selection from a set of options.
EditableList_DisplayName=Editable List
EditableList_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
EditableList_attributes_DisplayName=Attributes Map
EditableList_childCount_Description=The number of child components associated with this component.
EditableList_childCount_DisplayName=Child Component Count
EditableList_children_Description=A mutable List of the child components associated with this component.
EditableList_children_DisplayName=Child Component List
EditableList_converter_Description=Converter instance registered with this component.
EditableList_converter_DisplayName=Converter
EditableList_disabled_Description=Disables the component and prevents its value from being submitted
EditableList_disabled_DisplayName=Disabled
EditableList_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
EditableList_facets_DisplayName=Facets Map
EditableList_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
EditableList_family_DisplayName=Component Family
EditableList_fieldLabel_Description=The label of the text field
EditableList_fieldLabel_DisplayName=Textfield Label
EditableList_fieldValidator_Description=<p> A validator which will be applied to entries made into the textfield. Specify this to be the <code>validate()</code> method of a <code>javax.faces.validator.Validator</code>, or to another method with the same argument structure and exceptions. </p>
EditableList_fieldValidator_DisplayName=Textfield Validator
EditableList_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
EditableList_id_DisplayName=Component Identifier
EditableList_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
EditableList_immediate_DisplayName=Immediate Action
EditableList_labelLevel_Description=Determines the style of the labels (default is 2, 1 is the strongest)
EditableList_labelLevel_DisplayName=Label Level
EditableList_listLabel_Description=The label of the list
EditableList_listLabel_DisplayName=List Label
EditableList_listOnTop_Description=Flag indicating whether the list should be on top of the textfield or vice versa. By default, the textfield is on top.
EditableList_listOnTop_DisplayName=Show List On Top
EditableList_listValidator_Description=<p> A validator which will be applied to the contents of the list (e.g. to verify that the list has a minimum number of entries). Specify this to be the <code>validate()</code> method of a <code>javax.faces.validator.Validator</code>, or to another method with the same argument structure and exceptions. </p>
EditableList_listValidator_DisplayName=List Validator
EditableList_list_Description=Object that represents the list of items
EditableList_list_DisplayName=List
EditableList_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
EditableList_localValueSet_DisplayName=Local Value Set
EditableList_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
EditableList_localValue_DisplayName=Local Value
EditableList_maxLength_Description=The maximum number of characters allowed for each string in the list.
EditableList_maxLength_DisplayName=Maximum String Length
EditableList_multiple_Description=Flag indicating that the application user may make select more than one option from the listbox .
EditableList_multiple_DisplayName=Multiple
EditableList_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
EditableList_parent_DisplayName=Parent Component
EditableList_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
EditableList_readOnly_DisplayName=Read-only
EditableList_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
EditableList_rendered_DisplayName=Rendered Flag
EditableList_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
EditableList_rendererType_DisplayName=Renderer Type
EditableList_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
EditableList_rendersChildren_DisplayName=Renders Children
EditableList_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
EditableList_required_DisplayName=Required Flag
EditableList_rows_Description=Number of items to display in the listbox
EditableList_rows_DisplayName=Number of Items to Display
EditableList_sorted_Description=Maintain list in sorted order
EditableList_sorted_DisplayName=Sorted
EditableList_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
EditableList_styleClass_DisplayName=CSS Style Class(es)
EditableList_style_Description=CSS style(s) to be applied when this component is rendered.
EditableList_style_DisplayName=CSS Style(s)
EditableList_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
EditableList_submittedValue_DisplayName=Submitted Value
EditableList_tabIndex_Description=The position of this component in the tabbing order sequence
EditableList_tabIndex_DisplayName=Tab Index
EditableList_toolTip_Description=Display the text as a tooltip for this component
EditableList_toolTip_DisplayName=Tool Tip
EditableList_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
EditableList_validator_DisplayName=Validator
EditableList_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
EditableList_valueChangeListener_DisplayName=Value Change Listener
EditableList_value_Description=The current value of this component.
EditableList_value_DisplayName=Value
EditableList_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
EditableList_visible_DisplayName=Visible

# Field
Field_Description=Represents an input field whose content will be included when the surrounding form is submitted.
Field_DisplayName=Field
Field_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Field_attributes_DisplayName=Attributes Map
Field_childCount_Description=The number of child components associated with this component.
Field_childCount_DisplayName=Child Component Count
Field_children_Description=A mutable List of the child components associated with this component.
Field_children_DisplayName=Child Component List
Field_columns_Description=Number of character columns used to render this field.
Field_columns_DisplayName=Columns
Field_converter_Description=Converter instance registered with this component.
Field_converter_DisplayName=Converter
Field_disabled_Description=Disables the component and prevents its value from being submitted
Field_disabled_DisplayName=Disabled
Field_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Field_facets_DisplayName=Facets Map
Field_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Field_family_DisplayName=Component Family
Field_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Field_id_DisplayName=Component Identifier
Field_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Field_immediate_DisplayName=Immediate Action
Field_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
Field_labelLevel_DisplayName=Label Level
Field_label_Description=Display this text in a label associated with the field
Field_label_DisplayName=Label
Field_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Field_localValueSet_DisplayName=Local Value Set
Field_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Field_localValue_DisplayName=Local Value
Field_maxLength_Description=The maximum number of characters that can be entered for this field.
Field_maxLength_DisplayName=Maximum Length
Field_onBlur_Description=Scripting code executed when this element loses focus.
Field_onBlur_DisplayName=Blur Script
Field_onChange_Description=Scripting code executed when the element value of this component is changed.
Field_onChange_DisplayName=Value Change Script
Field_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Field_onClick_DisplayName=Click Script
Field_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Field_onDblClick_DisplayName=Double Click Script
Field_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Field_onFocus_DisplayName=Focus Script
Field_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Field_onKeyDown_DisplayName=Key Down Script
Field_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Field_onKeyPress_DisplayName=Key Press Script
Field_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Field_onKeyUp_DisplayName=Key Up Script
Field_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Field_onMouseDown_DisplayName=Mouse Down Script
Field_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Field_onMouseMove_DisplayName=Mouse Move Script
Field_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Field_onMouseOut_DisplayName=Mouse Out Script
Field_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Field_onMouseOver_DisplayName=Mouse In Script
Field_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Field_onMouseUp_DisplayName=Mouse Up Script
Field_onSelect_Description=Scripting code executed when some text in this component value is selected.
Field_onSelect_DisplayName=Text Selected Script
Field_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Field_parent_DisplayName=Parent Component
Field_readOnly_Description=Flag indicating that modification of this component by the user is not currently permitted, but that it will be included when the form is submitted.
Field_readOnly_DisplayName=Read Only
Field_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Field_rendered_DisplayName=Rendered Flag
Field_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Field_rendererType_DisplayName=Renderer Type
Field_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Field_rendersChildren_DisplayName=Renders Children
Field_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
Field_required_DisplayName=Required Flag
Field_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Field_styleClass_DisplayName=CSS Style Class(es)
Field_style_Description=CSS style(s) to be applied when this component is rendered.
Field_style_DisplayName=CSS Style(s)
Field_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Field_submittedValue_DisplayName=Submitted Value
Field_tabIndex_Description=The position of this component in the tabbing order sequence
Field_tabIndex_DisplayName=Tab Index
Field_text_Description=Text value that will be displayed within this input field
Field_text_DisplayName=Text
Field_toolTip_Description=Display the text as a tooltip for this component
Field_toolTip_DisplayName=Tool Tip
Field_trim_Description=Trim any leading and trailing blanks when the value is submitted
Field_trim_DisplayName=Trim
Field_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Field_validator_DisplayName=Validator
Field_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Field_valueChangeListener_DisplayName=Value Change Listener
Field_value_Description=The current value of this component.
Field_value_DisplayName=Value
Field_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Field_visible_DisplayName=Visible

# Form
Form_Description=Represents an input form whose contents may be submitted by the user, or via a client side script.
Form_DisplayName=Form
Form_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Form_attributes_DisplayName=Attributes Map
Form_autoComplete_Description=Control the auto completion feature in certain browsers
Form_autoComplete_DisplayName=Auto Complete
Form_childCount_Description=The number of child components associated with this component.
Form_childCount_DisplayName=Child Component Count
Form_children_Description=A mutable List of the child components associated with this component.
Form_children_DisplayName=Child Component List
Form_enctype_Description=The content type of the HTTP request generated by the form
Form_enctype_DisplayName=Content Type of the Request
Form_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Form_facets_DisplayName=Facets Map
Form_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Form_family_DisplayName=Component Family
Form_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Form_id_DisplayName=Component Identifier
Form_internalVirtualForms_Description=An array of virtual forms used internally by components within this literal form
Form_internalVirtualForms_DisplayName=Internal Virtual Form Descriptors
Form_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Form_onClick_DisplayName=Click Script
Form_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Form_onDblClick_DisplayName=Double Click Script
Form_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Form_onKeyDown_DisplayName=Key Down Script
Form_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Form_onKeyPress_DisplayName=Key Press Script
Form_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Form_onKeyUp_DisplayName=Key Up Script
Form_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Form_onMouseDown_DisplayName=Mouse Down Script
Form_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Form_onMouseMove_DisplayName=Mouse Move Script
Form_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Form_onMouseOut_DisplayName=Mouse Out Script
Form_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Form_onMouseOver_DisplayName=Mouse In Script
Form_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Form_onMouseUp_DisplayName=Mouse Up Script
Form_onReset_Description=Scripting code executed when this form is reset.
Form_onReset_DisplayName=Form Reset Script
Form_onSubmit_Description=Scripting code executed when this form is submitted.
Form_onSubmit_DisplayName=Form Submit Script
Form_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Form_parent_DisplayName=Parent Component
Form_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Form_rendered_DisplayName=Rendered Flag
Form_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Form_rendererType_DisplayName=Renderer Type
Form_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Form_rendersChildren_DisplayName=Renders Children
Form_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Form_styleClass_DisplayName=CSS Style Class(es)
Form_style_Description=CSS style(s) to be applied when this component is rendered.
Form_style_DisplayName=CSS Style(s)
Form_submitted_Description=Flag indicating whether or not this form was the one submitted by the user. If this flag is not set, child input components are not processed.
Form_submitted_DisplayName=Submitted Flag
Form_target_Description=The form's target window.
Form_target_DisplayName=Target
Form_virtualFormsConfig_Description=The configuration of the virtual forms within this literal form
Form_virtualFormsConfig_DisplayName=Virtual Forms Configuration
Form_virtualForms_Description=An array of virtual forms within this literal form
Form_virtualForms_DisplayName=Virtual Form Descriptors
Form_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Form_visible_DisplayName=Visible

# FrameSet
FrameSet_Description=Represents an entire frameset Frameset for a web application. This is not for use in portlet applications.
FrameSet_DisplayName=Frame Set
FrameSet_attributes_Description=
FrameSet_attributes_DisplayName=
FrameSet_borderColor_Description=The bordercolor attribute allows you to set the color of the frame borders using a hex value or a color name.
FrameSet_borderColor_DisplayName=Border Color
FrameSet_border_Description=The width, in pixels, of the space around frames. The frameSpacing attribute and the border attribute set the same property in different browsers. Set frameSpacing and border to the same value.
FrameSet_border_DisplayName=border
FrameSet_childCount_Description=
FrameSet_childCount_DisplayName=
FrameSet_children_Description=
FrameSet_children_DisplayName=
FrameSet_cols_Description=Defines the number and size of columns in a frameset. The size can be specified in pixels, percentage of the page width, or with an asterisk (*). Specifying * causes the columns to use available space. See the HTML specification for the frameset element for more details.
FrameSet_cols_DisplayName=Number of Columns
FrameSet_facets_Description=
FrameSet_facets_DisplayName=
FrameSet_family_Description=
FrameSet_family_DisplayName=
FrameSet_frameBorder_Description=Flag indicating whether frames should have borders or not. If frameBorder is true, decorative borders are drawn. If frameBorder is false, a space between frames shows up as the background color of the page. To show no border or space between frames, you should set frameBorder to false, and set frameSpacing and border to 0.
FrameSet_frameBorder_DisplayName=Frame Border
FrameSet_frameSpacing_Description=The width, in pixels, of the space around frames. The frameSpacing attribute and the border attribute set the same property in different browsers. Set frameSpacing and border to the same value.
FrameSet_frameSpacing_DisplayName=Frame Spacing
FrameSet_id_Description=
FrameSet_id_DisplayName=
FrameSet_parent_Description=
FrameSet_parent_DisplayName=
FrameSet_rendered_Description=
FrameSet_rendered_DisplayName=Rendered Flag
FrameSet_rendererType_Description=
FrameSet_rendererType_DisplayName=
FrameSet_rendersChildren_Description=
FrameSet_rendersChildren_DisplayName=
FrameSet_rows_Description=Defines the number and size of rows in a frameset. The size can be specified in pixels, percentage of the page length, or with an asterisk (*). Specifying * causes the rows to use available space. See the HTML specification for the frameset element for more details.
FrameSet_rows_DisplayName=Number of Rows
FrameSet_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
FrameSet_styleClass_DisplayName=CSS Style Class(es)
FrameSet_style_Description=CSS style(s) to be applied when this component is rendered.
FrameSet_style_DisplayName=CSS Style(s)
FrameSet_toolTip_Description=Display the text as a tooltip for this component
FrameSet_toolTip_DisplayName=Tool Tip

# Frame
Frame_Description=Renders an HTML frame tag
Frame_DisplayName=Frame
Frame_attributes_Description=
Frame_attributes_DisplayName=
Frame_childCount_Description=
Frame_childCount_DisplayName=
Frame_children_Description=
Frame_children_DisplayName=
Frame_facets_Description=
Frame_facets_DisplayName=
Frame_family_Description=
Frame_family_DisplayName=
Frame_frameBorder_Description=Set the value of the frameBorder attribute to "true" when a border is needed around the frame.
Frame_frameBorder_DisplayName=Frame Border
Frame_id_Description=
Frame_id_DisplayName=
Frame_longDesc_Description=A URL to a long description of the frame contents. Use it for browsers that do not support frames
Frame_longDesc_DisplayName=Long Description
Frame_marginHeight_Description=Defines the top and bottom margins in the frame
Frame_marginHeight_DisplayName=Margin Height
Frame_marginWidth_Description=Defines the left and right margins in the frame
Frame_marginWidth_DisplayName=Margin Width
Frame_name_Description=Defines a unique name for the frame (to use in scripts)
Frame_name_DisplayName=Name
Frame_noResize_Description=Set the value of the noResize attribute to "true" when user is not allowed to resize the frame.
Frame_noResize_DisplayName=No Resize
Frame_parent_Description=
Frame_parent_DisplayName=
Frame_rendered_Description=
Frame_rendered_DisplayName=Rendered Flag
Frame_rendererType_Description=
Frame_rendererType_DisplayName=
Frame_rendersChildren_Description=
Frame_rendersChildren_DisplayName=
Frame_scrolling_Description=Determines scrollbar action (valid values are\: yes, no, auto)
Frame_scrolling_DisplayName=Scrolling
Frame_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Frame_styleClass_DisplayName=CSS Style Class(es)
Frame_style_Description=CSS style(s) to be applied when this component is rendered.
Frame_style_DisplayName=CSS Style(s)
Frame_toolTip_Description=Display the text as a tooltip for this component
Frame_toolTip_DisplayName=Tool Tip
Frame_url_Description=Defines the URL of the file to show in the frame.
Frame_url_DisplayName=URL

# Head
Head_Description=An implementation of the HTML head tag.
Head_DisplayName=Head
Head_attributes_Description=
Head_attributes_DisplayName=
Head_childCount_Description=
Head_childCount_DisplayName=
Head_children_Description=
Head_children_DisplayName=
Head_defaultBase_Description=Render a default HTML base tag on the page--if true, may affect anchors on the page
Head_defaultBase_DisplayName=Default Base
Head_facets_Description=
Head_facets_DisplayName=
Head_family_Description=
Head_family_DisplayName=
Head_id_Description=
Head_id_DisplayName=
Head_parent_Description=
Head_parent_DisplayName=
Head_profile_Description=A space separated list of URL's that contains meta data information about the page
Head_profile_DisplayName=Profile
Head_rendered_Description=
Head_rendered_DisplayName=Rendered Flag
Head_rendererType_Description=
Head_rendererType_DisplayName=
Head_rendersChildren_Description=
Head_rendersChildren_DisplayName=
Head_title_Description=Title of the document to be displayed in the browser title bar.
Head_title_DisplayName=title

# HelpInline
HelpInline_Description=Inline text associated with a page or field
HelpInline_DisplayName=Inline Help
HelpInline_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
HelpInline_attributes_DisplayName=Attributes Map
HelpInline_childCount_Description=The number of child components associated with this component.
HelpInline_childCount_DisplayName=Child Component Count
HelpInline_children_Description=A mutable List of the child components associated with this component.
HelpInline_children_DisplayName=Child Component List
HelpInline_converter_Description=Converter instance registered with this component.
HelpInline_converter_DisplayName=Converter
HelpInline_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
HelpInline_facets_DisplayName=Facets Map
HelpInline_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
HelpInline_family_DisplayName=Component Family
HelpInline_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
HelpInline_id_DisplayName=Component Identifier
HelpInline_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
HelpInline_localValue_DisplayName=Local Value
HelpInline_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
HelpInline_parent_DisplayName=Parent Component
HelpInline_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
HelpInline_rendered_DisplayName=Rendered Flag
HelpInline_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
HelpInline_rendererType_DisplayName=Renderer Type
HelpInline_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
HelpInline_rendersChildren_DisplayName=Renders Children
HelpInline_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
HelpInline_styleClass_DisplayName=CSS Style Class(es)
HelpInline_style_Description=CSS style(s) to be applied when this component is rendered.
HelpInline_style_DisplayName=CSS Style(s)
HelpInline_text_Description=The inline help text to display.
HelpInline_text_DisplayName=text
HelpInline_type_Description=The type of inline help - valid values are "page" or "field". Note that "page" is the default.
HelpInline_type_DisplayName=Type of Help
HelpInline_value_Description=The current value of this component.
HelpInline_value_DisplayName=Value
HelpInline_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
HelpInline_visible_DisplayName=Visible

# HiddenField
HiddenField_Description=Represents a hidden field whose content will be included when the surrounding form is submitted.
HiddenField_DisplayName=Hidden Field
HiddenField_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
HiddenField_attributes_DisplayName=Attributes Map
HiddenField_childCount_Description=The number of child components associated with this component.
HiddenField_childCount_DisplayName=Child Component Count
HiddenField_children_Description=A mutable List of the child components associated with this component.
HiddenField_children_DisplayName=Child Component List
HiddenField_converter_Description=Converter instance registered with this component.
HiddenField_converter_DisplayName=Converter
HiddenField_disabled_Description=Disables the component and prevents its value from being submitted
HiddenField_disabled_DisplayName=Disabled
HiddenField_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
HiddenField_facets_DisplayName=Facets Map
HiddenField_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
HiddenField_family_DisplayName=Component Family
HiddenField_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
HiddenField_id_DisplayName=Component Identifier
HiddenField_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
HiddenField_immediate_DisplayName=Immediate Action
HiddenField_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
HiddenField_localValueSet_DisplayName=Local Value Set
HiddenField_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
HiddenField_localValue_DisplayName=Local Value
HiddenField_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
HiddenField_parent_DisplayName=Parent Component
HiddenField_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
HiddenField_rendered_DisplayName=Rendered Flag
HiddenField_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
HiddenField_rendererType_DisplayName=Renderer Type
HiddenField_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
HiddenField_rendersChildren_DisplayName=Renders Children
HiddenField_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
HiddenField_required_DisplayName=Required Flag
HiddenField_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
HiddenField_submittedValue_DisplayName=Submitted Value
HiddenField_text_Description=Text value contained by the hidden field
HiddenField_text_DisplayName=Text
HiddenField_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
HiddenField_validator_DisplayName=Validator
HiddenField_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
HiddenField_valueChangeListener_DisplayName=Value Change Listener
HiddenField_value_Description=The current value of this component.
HiddenField_value_DisplayName=Value

# Html
Html_Description=This is an implementation of the HTML html tag.
Html_DisplayName=Html
Html_attributes_Description=
Html_attributes_DisplayName=
Html_childCount_Description=
Html_childCount_DisplayName=
Html_children_Description=
Html_children_DisplayName=
Html_facets_Description=
Html_facets_DisplayName=
Html_family_Description=
Html_family_DisplayName=
Html_id_Description=
Html_id_DisplayName=
Html_lang_Description=Sets the language code for this document
Html_lang_DisplayName=Lang
Html_parent_Description=
Html_parent_DisplayName=
Html_rendered_Description=
Html_rendered_DisplayName=Rendered Flag
Html_rendererType_Description=
Html_rendererType_DisplayName=
Html_rendersChildren_Description=
Html_rendersChildren_DisplayName=
Html_xmlns_Description=Defines the XML namespace attribute. Default value is\: http\://www.w3.org/1999/xhtml
Html_xmlns_DisplayName=XML Namespace

# Hyperlink
Hyperlink_Description=A textual hyperlink that may be used to submit a form, navigate to an external URL, or activate client-side behavior
Hyperlink_DisplayName=Hyperlink
Hyperlink_actionListener_Description=Method binding invoked when an action occurs on this, and possibly other, components
Hyperlink_actionListener_DisplayName=Action Listener
Hyperlink_action_Description=Method binding invoked to process an action on the component
Hyperlink_action_DisplayName=Action
Hyperlink_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Hyperlink_attributes_DisplayName=Attributes Map
Hyperlink_childCount_Description=The number of child components associated with this component.
Hyperlink_childCount_DisplayName=Child Component Count
Hyperlink_children_Description=A mutable List of the child components associated with this component.
Hyperlink_children_DisplayName=Child Component List
Hyperlink_disabled_Description=Disables the component and prevents its value from being submitted
Hyperlink_disabled_DisplayName=Disabled
Hyperlink_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Hyperlink_facets_DisplayName=Facets Map
Hyperlink_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Hyperlink_family_DisplayName=Component Family
Hyperlink_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Hyperlink_id_DisplayName=Component Identifier
Hyperlink_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
Hyperlink_immediate_DisplayName=Immediate Action
Hyperlink_onBlur_Description=Scripting code executed when this element loses focus.
Hyperlink_onBlur_DisplayName=Blur Script
Hyperlink_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Hyperlink_onClick_DisplayName=Click Script
Hyperlink_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Hyperlink_onDblClick_DisplayName=Double Click Script
Hyperlink_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Hyperlink_onFocus_DisplayName=Focus Script
Hyperlink_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Hyperlink_onKeyDown_DisplayName=Key Down Script
Hyperlink_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Hyperlink_onKeyPress_DisplayName=Key Press Script
Hyperlink_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Hyperlink_onKeyUp_DisplayName=Key Up Script
Hyperlink_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Hyperlink_onMouseDown_DisplayName=Mouse Down Script
Hyperlink_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Hyperlink_onMouseMove_DisplayName=Mouse Move Script
Hyperlink_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Hyperlink_onMouseOut_DisplayName=Mouse Out Script
Hyperlink_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Hyperlink_onMouseOver_DisplayName=Mouse In Script
Hyperlink_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Hyperlink_onMouseUp_DisplayName=Mouse Up Script
Hyperlink_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Hyperlink_parent_DisplayName=Parent Component
Hyperlink_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Hyperlink_rendered_DisplayName=Rendered Flag
Hyperlink_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Hyperlink_rendererType_DisplayName=Renderer Type
Hyperlink_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Hyperlink_rendersChildren_DisplayName=Renders Children
Hyperlink_shape_Description=The shape of the hot spot on the screen for use in client-side image maps
Hyperlink_shape_DisplayName=Shape
Hyperlink_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Hyperlink_styleClass_DisplayName=CSS Style Class(es)
Hyperlink_style_Description=CSS style(s) to be applied when this component is rendered.
Hyperlink_style_DisplayName=CSS Style(s)
Hyperlink_tabIndex_Description=The position of this component in the tabbing order sequence
Hyperlink_tabIndex_DisplayName=Tab Index
Hyperlink_target_Description=The window or frame target in which to display the resource
Hyperlink_target_DisplayName=Target
Hyperlink_text_Description=The text description of the hyperlink
Hyperlink_text_DisplayName=text
Hyperlink_toolTip_Description=Display the text as a tooltip for this component
Hyperlink_toolTip_DisplayName=Tool Tip
Hyperlink_type_Description=The MIME content type of the resource specified by this component.
Hyperlink_type_DisplayName=Type
Hyperlink_urlLang_Description=The language code of the resource designated by this hyperlink.
Hyperlink_urlLang_DisplayName=URL Lang
Hyperlink_url_Description=Resource path (may be absolute, relative or context relative)
Hyperlink_url_DisplayName=URL
Hyperlink_value_Description=The current value of this component.
Hyperlink_value_DisplayName=Value
Hyperlink_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Hyperlink_visible_DisplayName=Visible

# IFrame
IFrame_Description=Renders an HTML iframe tag
IFrame_DisplayName=Iframe
IFrame_align_Description=Specifies how to align the iframe according to the surrounding text. One of the following\: left, right, top, middle, bottom
IFrame_align_DisplayName=Align
IFrame_attributes_Description=
IFrame_attributes_DisplayName=
IFrame_childCount_Description=
IFrame_childCount_DisplayName=
IFrame_children_Description=
IFrame_children_DisplayName=
IFrame_facets_Description=
IFrame_facets_DisplayName=
IFrame_family_Description=
IFrame_family_DisplayName=
IFrame_frameBorder_Description=Set the value of the frameBorder attribute to "true" when a border is needed around the frame.
IFrame_frameBorder_DisplayName=Frame Border
IFrame_height_Description=Defines the height of the iframe in pixels or as a percentage of it's container
IFrame_height_DisplayName=Height
IFrame_id_Description=
IFrame_id_DisplayName=
IFrame_longDesc_Description=A URL to a long description of the frame contents. Use it for browsers that do not support frames
IFrame_longDesc_DisplayName=Long Description
IFrame_marginHeight_Description=Defines the top and bottom margins in the frame
IFrame_marginHeight_DisplayName=Margin Height
IFrame_marginWidth_Description=Defines the left and right margins in the frame
IFrame_marginWidth_DisplayName=Margin Width
IFrame_name_Description=Defines a unique name for the frame (to use in scripts)
IFrame_name_DisplayName=Name
IFrame_noResize_Description=Set the value of the noResize attribute to "true" when user is not allowed to resize the frame.
IFrame_noResize_DisplayName=No Resize
IFrame_parent_Description=
IFrame_parent_DisplayName=
IFrame_rendered_Description=
IFrame_rendered_DisplayName=Rendered Flag
IFrame_rendererType_Description=
IFrame_rendererType_DisplayName=
IFrame_rendersChildren_Description=
IFrame_rendersChildren_DisplayName=
IFrame_scrolling_Description=Determines scrollbar action (valid values are\: yes, no, auto)
IFrame_scrolling_DisplayName=Scrolling
IFrame_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
IFrame_styleClass_DisplayName=CSS Style Class(es)
IFrame_style_Description=CSS style(s) to be applied when this component is rendered.
IFrame_style_DisplayName=CSS Style(s)
IFrame_toolTip_Description=Display the text as a tooltip for this component
IFrame_toolTip_DisplayName=Tool Tip
IFrame_url_Description=Defines the URL of the file to show in the frame.
IFrame_url_DisplayName=URL
IFrame_width_Description=Defines the width of the iframe in pixels or as a percentage of it's container
IFrame_width_DisplayName=Width

# IconHyperlink
IconHyperlink_Description=A hyperlink with an icon or image
IconHyperlink_DisplayName=Hyperlink
IconHyperlink_actionListener_Description=Method binding invoked when an action occurs on this, and possibly other, components
IconHyperlink_actionListener_DisplayName=Action Listener
IconHyperlink_action_Description=Method binding invoked to process an action on the component
IconHyperlink_action_DisplayName=Action
IconHyperlink_align_Description=Specifies the position of the image with respect to its context.
IconHyperlink_align_DisplayName=Align
IconHyperlink_alt_Description=Alternative text description used by screen reader tools
IconHyperlink_alt_DisplayName=Alt Text
IconHyperlink_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
IconHyperlink_attributes_DisplayName=Attributes Map
IconHyperlink_border_Description=Specify the width of the image border in pixels
IconHyperlink_border_DisplayName=Border
IconHyperlink_childCount_Description=The number of child components associated with this component.
IconHyperlink_childCount_DisplayName=Child Component Count
IconHyperlink_children_Description=A mutable List of the child components associated with this component.
IconHyperlink_children_DisplayName=Child Component List
IconHyperlink_disabled_Description=Disables the component and prevents its value from being submitted
IconHyperlink_disabled_DisplayName=Disabled
IconHyperlink_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
IconHyperlink_facets_DisplayName=Facets Map
IconHyperlink_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
IconHyperlink_family_DisplayName=Component Family
IconHyperlink_height_Description=Specify the height of the image to override its default height (not supported on some browsers)
IconHyperlink_height_DisplayName=Height
IconHyperlink_hspace_Description=Specify the amount of white space (in pixels) on the right and left of the image
IconHyperlink_hspace_DisplayName=Horizontal Space
IconHyperlink_icon_Description=The identifier of the desired theme image.
IconHyperlink_icon_DisplayName=Icon
IconHyperlink_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
IconHyperlink_id_DisplayName=Component Identifier
IconHyperlink_imageURL_Description=Absolute or relative URL to the image to be rendered.
IconHyperlink_imageURL_DisplayName=Image Url
IconHyperlink_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
IconHyperlink_immediate_DisplayName=Immediate Action
IconHyperlink_onBlur_Description=Scripting code executed when this element loses focus.
IconHyperlink_onBlur_DisplayName=Blur Script
IconHyperlink_onClick_Description=Scripting code executed when a mouse click occurs over this component.
IconHyperlink_onClick_DisplayName=Click Script
IconHyperlink_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
IconHyperlink_onDblClick_DisplayName=Double Click Script
IconHyperlink_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
IconHyperlink_onFocus_DisplayName=Focus Script
IconHyperlink_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
IconHyperlink_onKeyDown_DisplayName=Key Down Script
IconHyperlink_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
IconHyperlink_onKeyPress_DisplayName=Key Press Script
IconHyperlink_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
IconHyperlink_onKeyUp_DisplayName=Key Up Script
IconHyperlink_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
IconHyperlink_onMouseDown_DisplayName=Mouse Down Script
IconHyperlink_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
IconHyperlink_onMouseMove_DisplayName=Mouse Move Script
IconHyperlink_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
IconHyperlink_onMouseOut_DisplayName=Mouse Out Script
IconHyperlink_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
IconHyperlink_onMouseOver_DisplayName=Mouse In Script
IconHyperlink_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
IconHyperlink_onMouseUp_DisplayName=Mouse Up Script
IconHyperlink_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
IconHyperlink_parent_DisplayName=Parent Component
IconHyperlink_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
IconHyperlink_rendered_DisplayName=Rendered Flag
IconHyperlink_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
IconHyperlink_rendererType_DisplayName=Renderer Type
IconHyperlink_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
IconHyperlink_rendersChildren_DisplayName=Renders Children
IconHyperlink_shape_Description=The shape of the hot spot on the screen for use in client-side image maps
IconHyperlink_shape_DisplayName=Shape
IconHyperlink_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
IconHyperlink_styleClass_DisplayName=CSS Style Class(es)
IconHyperlink_style_Description=CSS style(s) to be applied when this component is rendered.
IconHyperlink_style_DisplayName=CSS Style(s)
IconHyperlink_tabIndex_Description=The position of this component in the tabbing order sequence
IconHyperlink_tabIndex_DisplayName=Tab Index
IconHyperlink_target_Description=The window or frame target in which to display the resource
IconHyperlink_target_DisplayName=Target
IconHyperlink_textPosition_Description=Specify the location of the text relative to the image
IconHyperlink_textPosition_DisplayName=Text Position
IconHyperlink_text_Description=The text description of the hyperlink
IconHyperlink_text_DisplayName=text
IconHyperlink_toolTip_Description=Display the text as a tooltip for this component
IconHyperlink_toolTip_DisplayName=Tool Tip
IconHyperlink_type_Description=The MIME content type of the resource specified by this component.
IconHyperlink_type_DisplayName=Type
IconHyperlink_urlLang_Description=The language code of the resource designated by this hyperlink.
IconHyperlink_urlLang_DisplayName=URL Lang
IconHyperlink_url_Description=Resource path (may be absolute, relative or context relative)
IconHyperlink_url_DisplayName=URL
IconHyperlink_value_Description=
IconHyperlink_value_DisplayName=
IconHyperlink_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
IconHyperlink_visible_DisplayName=Visible
IconHyperlink_vspace_Description=Specify the amount of white space (in pixels) above and below the image
IconHyperlink_vspace_DisplayName=Vertical Space
IconHyperlink_width_Description=Specify the width of the image to override its default width (not supported on some browsers)
IconHyperlink_width_DisplayName=Width

# Icon
Icon_Description=Render an img element to display the theme-specific image, rendering the description property (if any) as the value of the alt attribute.
Icon_DisplayName=Image
Icon_align_Description=Specifies the position of the image with respect to its context.
Icon_align_DisplayName=Align
Icon_alt_Description=Alternative text description used by screen reader tools
Icon_alt_DisplayName=Alt Text
Icon_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Icon_attributes_DisplayName=Attributes Map
Icon_border_Description=Specify the width of the image border in pixels
Icon_border_DisplayName=Border
Icon_childCount_Description=The number of child components associated with this component.
Icon_childCount_DisplayName=Child Component Count
Icon_children_Description=A mutable List of the child components associated with this component.
Icon_children_DisplayName=Child Component List
Icon_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Icon_facets_DisplayName=Facets Map
Icon_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Icon_family_DisplayName=Component Family
Icon_height_Description=Specify the height of the image to override its default height (not supported on some browsers)
Icon_height_DisplayName=Height
Icon_hspace_Description=Specify the amount of white space (in pixels) on the right and left of the image
Icon_hspace_DisplayName=Horizontal Space
Icon_icon_Description=The identifier of the desired theme image.
Icon_icon_DisplayName=Icon
Icon_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Icon_id_DisplayName=Component Identifier
Icon_longDesc_Description=A verbose description of this image
Icon_longDesc_DisplayName=Long Description
Icon_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Icon_onClick_DisplayName=Click Script
Icon_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Icon_onDblClick_DisplayName=Double Click Script
Icon_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Icon_onMouseDown_DisplayName=Mouse Down Script
Icon_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Icon_onMouseMove_DisplayName=Mouse Move Script
Icon_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Icon_onMouseOut_DisplayName=Mouse Out Script
Icon_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Icon_onMouseOver_DisplayName=Mouse In Script
Icon_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Icon_onMouseUp_DisplayName=Mouse Up Script
Icon_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Icon_parent_DisplayName=Parent Component
Icon_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Icon_rendered_DisplayName=Rendered Flag
Icon_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Icon_rendererType_DisplayName=Renderer Type
Icon_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Icon_rendersChildren_DisplayName=Renders Children
Icon_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Icon_styleClass_DisplayName=CSS Style Class(es)
Icon_style_Description=CSS style(s) to be applied when this component is rendered.
Icon_style_DisplayName=CSS Style(s)
Icon_toolTip_Description=Display the text as a tooltip for this component
Icon_toolTip_DisplayName=Tool Tip
Icon_url_Description=Absolute or relative URL to the image to be rendered.
Icon_url_DisplayName=Url
Icon_value_Description=The current path or URL to the image of this component.
Icon_value_DisplayName=Value
Icon_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Icon_visible_DisplayName=Visible
Icon_vspace_Description=Specify the amount of white space (in pixels) above and below the image
Icon_vspace_DisplayName=Vertical Space
Icon_width_Description=Specify the width of the image to override its default width (not supported on some browsers)
Icon_width_DisplayName=Width

# ImageComponent
ImageComponent_Description=An image or icon
ImageComponent_DisplayName=Image
ImageComponent_align_Description=Specifies the position of the image with respect to its context.
ImageComponent_align_DisplayName=Align
ImageComponent_alt_Description=Alternative text description used by screen reader tools
ImageComponent_alt_DisplayName=Alt Text
ImageComponent_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
ImageComponent_attributes_DisplayName=Attributes Map
ImageComponent_border_Description=Specify the width of the image border in pixels
ImageComponent_border_DisplayName=Border
ImageComponent_childCount_Description=The number of child components associated with this component.
ImageComponent_childCount_DisplayName=Child Component Count
ImageComponent_children_Description=A mutable List of the child components associated with this component.
ImageComponent_children_DisplayName=Child Component List
ImageComponent_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
ImageComponent_facets_DisplayName=Facets Map
ImageComponent_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
ImageComponent_family_DisplayName=Component Family
ImageComponent_height_Description=Specify the height of the image to override its default height (not supported on some browsers)
ImageComponent_height_DisplayName=Height
ImageComponent_hspace_Description=Specify the amount of white space (in pixels) on the right and left of the image
ImageComponent_hspace_DisplayName=Horizontal Space
ImageComponent_icon_Description=The identifier of the desired theme image.
ImageComponent_icon_DisplayName=Icon
ImageComponent_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
ImageComponent_id_DisplayName=Component Identifier
ImageComponent_longDesc_Description=A verbose description of this image
ImageComponent_longDesc_DisplayName=Long Description
ImageComponent_onClick_Description=Scripting code executed when a mouse click occurs over this component.
ImageComponent_onClick_DisplayName=Click Script
ImageComponent_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
ImageComponent_onDblClick_DisplayName=Double Click Script
ImageComponent_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
ImageComponent_onMouseDown_DisplayName=Mouse Down Script
ImageComponent_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
ImageComponent_onMouseMove_DisplayName=Mouse Move Script
ImageComponent_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
ImageComponent_onMouseOut_DisplayName=Mouse Out Script
ImageComponent_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
ImageComponent_onMouseOver_DisplayName=Mouse In Script
ImageComponent_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
ImageComponent_onMouseUp_DisplayName=Mouse Up Script
ImageComponent_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
ImageComponent_parent_DisplayName=Parent Component
ImageComponent_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
ImageComponent_rendered_DisplayName=Rendered Flag
ImageComponent_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
ImageComponent_rendererType_DisplayName=Renderer Type
ImageComponent_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
ImageComponent_rendersChildren_DisplayName=Renders Children
ImageComponent_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
ImageComponent_styleClass_DisplayName=CSS Style Class(es)
ImageComponent_style_Description=CSS style(s) to be applied when this component is rendered.
ImageComponent_style_DisplayName=CSS Style(s)
ImageComponent_toolTip_Description=Display the text as a tooltip for this component
ImageComponent_toolTip_DisplayName=Tool Tip
ImageComponent_url_Description=Absolute or relative URL to the image to be rendered.
ImageComponent_url_DisplayName=Url
ImageComponent_value_Description=The current path or URL to the image of this component.
ImageComponent_value_DisplayName=Value
ImageComponent_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
ImageComponent_visible_DisplayName=Visible
ImageComponent_vspace_Description=Specify the amount of white space (in pixels) above and below the image
ImageComponent_vspace_DisplayName=Vertical Space
ImageComponent_width_Description=Specify the width of the image to override its default width (not supported on some browsers)
ImageComponent_width_DisplayName=Width

# ImageHyperlink
ImageHyperlink_Description=A hyperlink with an image or icon, that may be used to submit a form, navigate to an external URL, or activate client-side behavior
ImageHyperlink_DisplayName=Image Hyperlink
ImageHyperlink_actionListener_Description=Method binding invoked when an action occurs on this, and possibly other, components
ImageHyperlink_actionListener_DisplayName=Action Listener
ImageHyperlink_action_Description=Method binding invoked to process an action on the component
ImageHyperlink_action_DisplayName=Action
ImageHyperlink_align_Description=Specifies the position of the image with respect to its context.
ImageHyperlink_align_DisplayName=Align
ImageHyperlink_alt_Description=Alternative text description used by screen reader tools
ImageHyperlink_alt_DisplayName=Alt Text
ImageHyperlink_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
ImageHyperlink_attributes_DisplayName=Attributes Map
ImageHyperlink_border_Description=Specify the width of the image border in pixels
ImageHyperlink_border_DisplayName=Border
ImageHyperlink_childCount_Description=The number of child components associated with this component.
ImageHyperlink_childCount_DisplayName=Child Component Count
ImageHyperlink_children_Description=A mutable List of the child components associated with this component.
ImageHyperlink_children_DisplayName=Child Component List
ImageHyperlink_disabled_Description=Disables the component and prevents its value from being submitted
ImageHyperlink_disabled_DisplayName=Disabled
ImageHyperlink_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
ImageHyperlink_facets_DisplayName=Facets Map
ImageHyperlink_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
ImageHyperlink_family_DisplayName=Component Family
ImageHyperlink_height_Description=Specify the height of the image to override its default height (not supported on some browsers)
ImageHyperlink_height_DisplayName=Height
ImageHyperlink_hspace_Description=Specify the amount of white space (in pixels) on the right and left of the image
ImageHyperlink_hspace_DisplayName=Horizontal Space
ImageHyperlink_icon_Description=The identifier of the desired theme image.
ImageHyperlink_icon_DisplayName=Icon
ImageHyperlink_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
ImageHyperlink_id_DisplayName=Component Identifier
ImageHyperlink_imageURL_Description=Absolute or relative URL to the image to be rendered.
ImageHyperlink_imageURL_DisplayName=Image Url
ImageHyperlink_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
ImageHyperlink_immediate_DisplayName=Immediate Action
ImageHyperlink_onBlur_Description=Scripting code executed when this element loses focus.
ImageHyperlink_onBlur_DisplayName=Blur Script
ImageHyperlink_onClick_Description=Scripting code executed when a mouse click occurs over this component.
ImageHyperlink_onClick_DisplayName=Click Script
ImageHyperlink_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
ImageHyperlink_onDblClick_DisplayName=Double Click Script
ImageHyperlink_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
ImageHyperlink_onFocus_DisplayName=Focus Script
ImageHyperlink_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
ImageHyperlink_onKeyDown_DisplayName=Key Down Script
ImageHyperlink_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
ImageHyperlink_onKeyPress_DisplayName=Key Press Script
ImageHyperlink_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
ImageHyperlink_onKeyUp_DisplayName=Key Up Script
ImageHyperlink_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
ImageHyperlink_onMouseDown_DisplayName=Mouse Down Script
ImageHyperlink_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
ImageHyperlink_onMouseMove_DisplayName=Mouse Move Script
ImageHyperlink_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
ImageHyperlink_onMouseOut_DisplayName=Mouse Out Script
ImageHyperlink_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
ImageHyperlink_onMouseOver_DisplayName=Mouse In Script
ImageHyperlink_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
ImageHyperlink_onMouseUp_DisplayName=Mouse Up Script
ImageHyperlink_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
ImageHyperlink_parent_DisplayName=Parent Component
ImageHyperlink_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
ImageHyperlink_rendered_DisplayName=Rendered Flag
ImageHyperlink_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
ImageHyperlink_rendererType_DisplayName=Renderer Type
ImageHyperlink_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
ImageHyperlink_rendersChildren_DisplayName=Renders Children
ImageHyperlink_shape_Description=The shape of the hot spot on the screen for use in client-side image maps
ImageHyperlink_shape_DisplayName=Shape
ImageHyperlink_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
ImageHyperlink_styleClass_DisplayName=CSS Style Class(es)
ImageHyperlink_style_Description=CSS style(s) to be applied when this component is rendered.
ImageHyperlink_style_DisplayName=CSS Style(s)
ImageHyperlink_tabIndex_Description=The position of this component in the tabbing order sequence
ImageHyperlink_tabIndex_DisplayName=Tab Index
ImageHyperlink_target_Description=The window or frame target in which to display the resource
ImageHyperlink_target_DisplayName=Target
ImageHyperlink_textPosition_Description=Specify the location of the text relative to the image
ImageHyperlink_textPosition_DisplayName=Text Position
ImageHyperlink_text_Description=The text description of the hyperlink
ImageHyperlink_text_DisplayName=text
ImageHyperlink_toolTip_Description=Display the text as a tooltip for this component
ImageHyperlink_toolTip_DisplayName=Tool Tip
ImageHyperlink_type_Description=The MIME content type of the resource specified by this component.
ImageHyperlink_type_DisplayName=Type
ImageHyperlink_urlLang_Description=The language code of the resource designated by this hyperlink.
ImageHyperlink_urlLang_DisplayName=URL Lang
ImageHyperlink_url_Description=Resource path (may be absolute, relative or context relative)
ImageHyperlink_url_DisplayName=URL
ImageHyperlink_value_Description=
ImageHyperlink_value_DisplayName=
ImageHyperlink_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
ImageHyperlink_visible_DisplayName=Visible
ImageHyperlink_vspace_Description=Specify the amount of white space (in pixels) above and below the image
ImageHyperlink_vspace_DisplayName=Vertical Space
ImageHyperlink_width_Description=Specify the width of the image to override its default width (not supported on some browsers)
ImageHyperlink_width_DisplayName=Width

# Label
Label_Description=A label that may be associated with an input component
Label_DisplayName=Label
Label_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Label_attributes_DisplayName=Attributes Map
Label_childCount_Description=The number of child components associated with this component.
Label_childCount_DisplayName=Child Component Count
Label_children_Description=A mutable List of the child components associated with this component.
Label_children_DisplayName=Child Component List
Label_converter_Description=Converter instance registered with this component.
Label_converter_DisplayName=Converter
Label_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Label_facets_DisplayName=Facets Map
Label_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Label_family_DisplayName=Component Family
Label_for_Description=The identifier of the component associated with this label
Label_for_DisplayName=Input Component
Label_hideIndicators_Description=Do not show required and invalid indicators for the component
Label_hideIndicators_DisplayName=Hide the Required and Invalid icons
Label_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Label_id_DisplayName=Component Identifier
Label_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
Label_labelLevel_DisplayName=Style Level
Label_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Label_localValue_DisplayName=Local Value
Label_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Label_onClick_DisplayName=Click Script
Label_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Label_onMouseDown_DisplayName=Mouse Down Script
Label_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Label_onMouseMove_DisplayName=Mouse Move Script
Label_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Label_onMouseOut_DisplayName=Mouse Out Script
Label_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Label_onMouseOver_DisplayName=Mouse In Script
Label_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Label_onMouseUp_DisplayName=Mouse Up Script
Label_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Label_parent_DisplayName=Parent Component
Label_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Label_rendered_DisplayName=Rendered Flag
Label_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Label_rendererType_DisplayName=Renderer Type
Label_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Label_rendersChildren_DisplayName=Renders Children
Label_requiredIndicator_Description=Indicate that the component associated with this label is required
Label_requiredIndicator_DisplayName=Required Field Indicator
Label_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Label_styleClass_DisplayName=CSS Style Class(es)
Label_style_Description=CSS style(s) to be applied when this component is rendered.
Label_style_DisplayName=CSS Style(s)
Label_text_Description=The label text to be displayed
Label_text_DisplayName=Label Text
Label_toolTip_Description=Display the text as a tooltip for this component
Label_toolTip_DisplayName=Tool Tip
Label_value_Description=The current value of this component.
Label_value_DisplayName=Value
Label_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Label_visible_DisplayName=Visible

# Legend
Legend_Description=Renders an legend on a page. By default this component renders the required field indicator legend.
Legend_DisplayName=Legend
Legend_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Legend_attributes_DisplayName=Attributes Map
Legend_childCount_Description=The number of child components associated with this component.
Legend_childCount_DisplayName=Child Component Count
Legend_children_Description=A mutable List of the child components associated with this component.
Legend_children_DisplayName=Child Component List
Legend_converter_Description=Converter instance registered with this component.
Legend_converter_DisplayName=Converter
Legend_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Legend_facets_DisplayName=Facets Map
Legend_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Legend_family_DisplayName=Component Family
Legend_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Legend_id_DisplayName=Component Identifier
Legend_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Legend_localValue_DisplayName=Local Value
Legend_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Legend_parent_DisplayName=Parent Component
Legend_position_Description=Specifies the position of the legend. Valid values are\: "right" (the default) and "left".
Legend_position_DisplayName=Legend Position
Legend_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Legend_rendered_DisplayName=Rendered Flag
Legend_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Legend_rendererType_DisplayName=Renderer Type
Legend_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Legend_rendersChildren_DisplayName=Renders Children
Legend_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Legend_styleClass_DisplayName=CSS Style Class(es)
Legend_style_Description=CSS style(s) to be applied when this component is rendered.
Legend_style_DisplayName=CSS Style(s)
Legend_text_Description=The explanatory text that is displayed in the legend. If not specified, the required field legend text is displayed.
Legend_text_DisplayName=Legend Text
Legend_value_Description=The current value of this component.
Legend_value_DisplayName=Value
Legend_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Legend_visible_DisplayName=Visible

# Link
Link_Description=An implementation of the HTML link tag.
Link_DisplayName=Link
Link_attributes_Description=
Link_attributes_DisplayName=
Link_charset_Description=Defines the character encoding (charset) of the target URL
Link_charset_DisplayName=Charset
Link_childCount_Description=
Link_childCount_DisplayName=
Link_children_Description=
Link_children_DisplayName=
Link_facets_Description=
Link_facets_DisplayName=
Link_family_Description=
Link_family_DisplayName=
Link_id_Description=
Link_id_DisplayName=
Link_media_Description=The type of display device for which the referenced document is designed
Link_media_DisplayName=Media Type
Link_parent_Description=
Link_parent_DisplayName=
Link_rel_Description=Defines the relationship between the current page and the target page
Link_rel_DisplayName=Rel
Link_rendered_Description=
Link_rendered_DisplayName=Rendered Flag
Link_rendererType_Description=
Link_rendererType_DisplayName=
Link_rendersChildren_Description=
Link_rendersChildren_DisplayName=
Link_type_Description=The MIME type of the target resource
Link_type_DisplayName=Mime type
Link_urlLang_Description=The ISO language code of the human language used by the target page
Link_urlLang_DisplayName=URL Language
Link_url_Description=The absolute or relative target URL of the resource.
Link_url_DisplayName=URL

# ListSelector
ListSelector_Description=Base component for UI components that allow the user to make a selection from a list of options using an HTML select element.
ListSelector_DisplayName=ListSelector
ListSelector_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
ListSelector_attributes_DisplayName=Attributes Map
ListSelector_childCount_Description=The number of child components associated with this component.
ListSelector_childCount_DisplayName=Child Component Count
ListSelector_children_Description=A mutable List of the child components associated with this component.
ListSelector_children_DisplayName=Child Component List
ListSelector_converter_Description=Converter instance registered with this component.
ListSelector_converter_DisplayName=Converter
ListSelector_disabled_Description=Disables the component and prevents its value from being submitted
ListSelector_disabled_DisplayName=Disabled
ListSelector_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
ListSelector_facets_DisplayName=Facets Map
ListSelector_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
ListSelector_family_DisplayName=Component Family
ListSelector_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
ListSelector_id_DisplayName=Component Identifier
ListSelector_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
ListSelector_immediate_DisplayName=Immediate Action
ListSelector_items_Description=The object that represents the options from which the user can select
ListSelector_items_DisplayName=Items
ListSelector_labelLevel_Description=Set the style for the label property
ListSelector_labelLevel_DisplayName=Label Level
ListSelector_labelOnTop_Description=Put the integrated component label on top instead of on the left side
ListSelector_labelOnTop_DisplayName=Label on Top
ListSelector_label_Description=Label for the component
ListSelector_label_DisplayName=Label
ListSelector_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
ListSelector_localValueSet_DisplayName=Local Value Set
ListSelector_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
ListSelector_localValue_DisplayName=Local Value
ListSelector_onBlur_Description=Scripting code executed when this element loses focus.
ListSelector_onBlur_DisplayName=Blur Script
ListSelector_onChange_Description=Scripting code executed when the element value of this component is changed.
ListSelector_onChange_DisplayName=Value Change Script
ListSelector_onClick_Description=Scripting code executed when a mouse click occurs over this component.
ListSelector_onClick_DisplayName=Click Script
ListSelector_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
ListSelector_onDblClick_DisplayName=Double Click Script
ListSelector_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
ListSelector_onFocus_DisplayName=Focus Script
ListSelector_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
ListSelector_onKeyDown_DisplayName=Key Down Script
ListSelector_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
ListSelector_onKeyPress_DisplayName=Key Press Script
ListSelector_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
ListSelector_onKeyUp_DisplayName=Key Up Script
ListSelector_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
ListSelector_onMouseDown_DisplayName=Mouse Down Script
ListSelector_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
ListSelector_onMouseMove_DisplayName=Mouse Move Script
ListSelector_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
ListSelector_onMouseOut_DisplayName=Mouse Out Script
ListSelector_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
ListSelector_onMouseOver_DisplayName=Mouse In Script
ListSelector_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
ListSelector_onMouseUp_DisplayName=Mouse Up Script
ListSelector_onSelect_Description=Scripting code executed when some text in this component value is selected.
ListSelector_onSelect_DisplayName=Text Selected Script
ListSelector_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
ListSelector_parent_DisplayName=Parent Component
ListSelector_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
ListSelector_readOnly_DisplayName=Read-only
ListSelector_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
ListSelector_rendered_DisplayName=Rendered Flag
ListSelector_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
ListSelector_rendererType_DisplayName=Renderer Type
ListSelector_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
ListSelector_rendersChildren_DisplayName=Renders Children
ListSelector_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
ListSelector_required_DisplayName=Required Flag
ListSelector_rows_Description=The number of items to display
ListSelector_rows_DisplayName=Rows
ListSelector_selected_Description=The object that represents the selected value or values
ListSelector_selected_DisplayName=Selected
ListSelector_separators_Description=Adds separator lines between option groups defined in the items list
ListSelector_separators_DisplayName=Separators
ListSelector_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
ListSelector_styleClass_DisplayName=CSS Style Class(es)
ListSelector_style_Description=CSS style(s) to be applied when this component is rendered.
ListSelector_style_DisplayName=CSS Style(s)
ListSelector_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
ListSelector_submittedValue_DisplayName=Submitted Value
ListSelector_tabIndex_Description=The position of this component in the tabbing order sequence
ListSelector_tabIndex_DisplayName=Tab Index
ListSelector_toolTip_Description=Display the text as a tooltip for this component
ListSelector_toolTip_DisplayName=Tool Tip
ListSelector_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
ListSelector_validator_DisplayName=Validator
ListSelector_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
ListSelector_valueChangeListener_DisplayName=Value Change Listener
ListSelector_value_Description=The current value of this component.
ListSelector_value_DisplayName=Value
ListSelector_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
ListSelector_visible_DisplayName=Visible

# Listbox
Listbox_Description=A listbox in which the web application user can make zero or more selections.
Listbox_DisplayName=Listbox
Listbox_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Listbox_attributes_DisplayName=Attributes Map
Listbox_childCount_Description=The number of child components associated with this component.
Listbox_childCount_DisplayName=Child Component Count
Listbox_children_Description=A mutable List of the child components associated with this component.
Listbox_children_DisplayName=Child Component List
Listbox_converter_Description=Converter instance registered with this component.
Listbox_converter_DisplayName=Converter
Listbox_disabled_Description=Disables the component and prevents its value from being submitted
Listbox_disabled_DisplayName=Disabled
Listbox_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Listbox_facets_DisplayName=Facets Map
Listbox_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Listbox_family_DisplayName=Component Family
Listbox_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Listbox_id_DisplayName=Component Identifier
Listbox_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Listbox_immediate_DisplayName=Immediate Action
Listbox_items_Description=The object that represents the options from which the user can select
Listbox_items_DisplayName=Items
Listbox_labelLevel_Description=Set the style for the label property
Listbox_labelLevel_DisplayName=Label Level
Listbox_labelOnTop_Description=Put the integrated component label on top instead of on the left side
Listbox_labelOnTop_DisplayName=Label on Top
Listbox_label_Description=Label for the component
Listbox_label_DisplayName=Label
Listbox_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Listbox_localValueSet_DisplayName=Local Value Set
Listbox_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Listbox_localValue_DisplayName=Local Value
Listbox_monospace_Description=Display the component with a monospace font like Courier
Listbox_monospace_DisplayName=Use Monospace Fonts
Listbox_multiple_Description=Enable the user to select more than a single item from the listbox
Listbox_multiple_DisplayName=Multiple
Listbox_onBlur_Description=Scripting code executed when this element loses focus.
Listbox_onBlur_DisplayName=Blur Script
Listbox_onChange_Description=Scripting code executed when the element value of this component is changed.
Listbox_onChange_DisplayName=Value Change Script
Listbox_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Listbox_onClick_DisplayName=Click Script
Listbox_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Listbox_onDblClick_DisplayName=Double Click Script
Listbox_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Listbox_onFocus_DisplayName=Focus Script
Listbox_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Listbox_onKeyDown_DisplayName=Key Down Script
Listbox_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Listbox_onKeyPress_DisplayName=Key Press Script
Listbox_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Listbox_onKeyUp_DisplayName=Key Up Script
Listbox_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Listbox_onMouseDown_DisplayName=Mouse Down Script
Listbox_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Listbox_onMouseMove_DisplayName=Mouse Move Script
Listbox_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Listbox_onMouseOut_DisplayName=Mouse Out Script
Listbox_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Listbox_onMouseOver_DisplayName=Mouse In Script
Listbox_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Listbox_onMouseUp_DisplayName=Mouse Up Script
Listbox_onSelect_Description=Scripting code executed when some text in this component value is selected.
Listbox_onSelect_DisplayName=Text Selected Script
Listbox_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Listbox_parent_DisplayName=Parent Component
Listbox_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
Listbox_readOnly_DisplayName=Read-only
Listbox_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Listbox_rendered_DisplayName=Rendered Flag
Listbox_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Listbox_rendererType_DisplayName=Renderer Type
Listbox_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Listbox_rendersChildren_DisplayName=Renders Children
Listbox_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
Listbox_required_DisplayName=Required Flag
Listbox_rows_Description=The number of items to display
Listbox_rows_DisplayName=Rows
Listbox_selected_Description=The object that represents the selected value or values
Listbox_selected_DisplayName=Selected
Listbox_separators_Description=Adds separator lines between option groups defined in the items list
Listbox_separators_DisplayName=Separators
Listbox_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Listbox_styleClass_DisplayName=CSS Style Class(es)
Listbox_style_Description=CSS style(s) to be applied when this component is rendered.
Listbox_style_DisplayName=CSS Style(s)
Listbox_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Listbox_submittedValue_DisplayName=Submitted Value
Listbox_tabIndex_Description=The position of this component in the tabbing order sequence
Listbox_tabIndex_DisplayName=Tab Index
Listbox_toolTip_Description=Display the text as a tooltip for this component
Listbox_toolTip_DisplayName=Tool Tip
Listbox_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Listbox_validator_DisplayName=Validator
Listbox_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Listbox_valueChangeListener_DisplayName=Value Change Listener
Listbox_value_Description=The current value of this component.
Listbox_value_DisplayName=Value
Listbox_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Listbox_visible_DisplayName=Visible

# Markup
Markup_Description=This component is used for rendering markup tags.
Markup_DisplayName=Markup
Markup_attributes_Description=
Markup_attributes_DisplayName=
Markup_childCount_Description=
Markup_childCount_DisplayName=
Markup_children_Description=
Markup_children_DisplayName=
Markup_extraAttributes_Description=Add the rest of the attribute name\="value" type pairs inside this attribute. The inserted attributes will need to be escaped.
Markup_extraAttributes_DisplayName=Extra Attributes
Markup_facets_Description=
Markup_facets_DisplayName=
Markup_family_Description=
Markup_family_DisplayName=
Markup_id_Description=
Markup_id_DisplayName=
Markup_parent_Description=
Markup_parent_DisplayName=
Markup_rendered_Description=
Markup_rendered_DisplayName=Rendered Flag
Markup_rendererType_Description=
Markup_rendererType_DisplayName=
Markup_rendersChildren_Description=
Markup_rendersChildren_DisplayName=
Markup_singleton_Description=Flag indicating that tag is a singleton tag and that it should end with a trailing /
Markup_singleton_DisplayName=Single Tag
Markup_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Markup_styleClass_DisplayName=CSS Style Class(es)
Markup_style_Description=CSS style(s) to be applied when this component is rendered.
Markup_style_DisplayName=CSS Style(s)
Markup_tag_Description=Name of the HTML element to render.
Markup_tag_DisplayName=Tag Name

# MessageGroup
MessageGroup_Description=Renders a message associated with all components on the page
MessageGroup_DisplayName=Message Group
MessageGroup_attributes_Description=
MessageGroup_attributes_DisplayName=
MessageGroup_childCount_Description=
MessageGroup_childCount_DisplayName=
MessageGroup_children_Description=
MessageGroup_children_DisplayName=
MessageGroup_facets_Description=
MessageGroup_facets_DisplayName=
MessageGroup_family_Description=
MessageGroup_family_DisplayName=
MessageGroup_id_Description=
MessageGroup_id_DisplayName=
MessageGroup_parent_Description=
MessageGroup_parent_DisplayName=
MessageGroup_rendered_Description=
MessageGroup_rendered_DisplayName=Rendered Flag
MessageGroup_rendererType_Description=
MessageGroup_rendererType_DisplayName=
MessageGroup_rendersChildren_Description=
MessageGroup_rendersChildren_DisplayName=
MessageGroup_showDetail_Description=Flag to determine whether to show the detail message.
MessageGroup_showDetail_DisplayName=Show Detail Message
MessageGroup_showGlobalOnly_Description=Flag to determine whether to show the global message.
MessageGroup_showGlobalOnly_DisplayName=Show Global Messages Only
MessageGroup_showSummary_Description=Flag to determine whether to show the summary message.
MessageGroup_showSummary_DisplayName=Show Summary Message
MessageGroup_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
MessageGroup_styleClass_DisplayName=CSS Style Class(es)
MessageGroup_style_Description=CSS style(s) to be applied when this component is rendered.
MessageGroup_style_DisplayName=CSS Style(s)
MessageGroup_toolTip_Description=Display the text as a tooltip for this component
MessageGroup_toolTip_DisplayName=Tool Tip
MessageGroup_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
MessageGroup_visible_DisplayName=Visible

# Message
Message_Description=Renders a message associated with a specific component on the page
Message_DisplayName=Message
Message_alt_Description=Alternative text description used by screen reader tools
Message_alt_DisplayName=Alt Text
Message_attributes_Description=
Message_attributes_DisplayName=
Message_childCount_Description=
Message_childCount_DisplayName=
Message_children_Description=
Message_children_DisplayName=
Message_facets_Description=
Message_facets_DisplayName=
Message_family_Description=
Message_family_DisplayName=
Message_for_Description=Identifier of the component that is associated with this message
Message_for_DisplayName=Input Component
Message_id_Description=
Message_id_DisplayName=
Message_parent_Description=
Message_parent_DisplayName=
Message_rendered_Description=
Message_rendered_DisplayName=Rendered Flag
Message_rendererType_Description=
Message_rendererType_DisplayName=
Message_rendersChildren_Description=
Message_rendersChildren_DisplayName=
Message_showDetail_Description=Flag to determine whether to show the detail message.
Message_showDetail_DisplayName=Show Detail Message
Message_showSummary_Description=Flag to determine whether to show the summary message.
Message_showSummary_DisplayName=Show Summary Message
Message_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Message_styleClass_DisplayName=CSS Style Class(es)
Message_style_Description=CSS style(s) to be applied when this component is rendered.
Message_style_DisplayName=CSS Style(s)
Message_tabIndex_Description=The position of this component in the tabbing order sequence
Message_tabIndex_DisplayName=Tab Index
Message_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Message_visible_DisplayName=Visible

# Meta
Meta_Description=This is an implementation of the HTML meta tag.
Meta_DisplayName=Meta
Meta_attributes_Description=
Meta_attributes_DisplayName=
Meta_childCount_Description=
Meta_childCount_DisplayName=
Meta_children_Description=
Meta_children_DisplayName=
Meta_content_Description=Specifies the data to associate with a name or httpEquiv attribute
Meta_content_DisplayName=Content
Meta_facets_Description=
Meta_facets_DisplayName=
Meta_family_Description=
Meta_family_DisplayName=
Meta_httpEquiv_Description=Specifies HTTP properties that the web server can use in the HTTP response header
Meta_httpEquiv_DisplayName=HTTP header
Meta_id_Description=
Meta_id_DisplayName=
Meta_name_Description=Specify the name of an attribute which is associated with the content idenified in the content property
Meta_name_DisplayName=Name
Meta_parent_Description=
Meta_parent_DisplayName=
Meta_rendered_Description=
Meta_rendered_DisplayName=Rendered Flag
Meta_rendererType_Description=
Meta_rendererType_DisplayName=
Meta_rendersChildren_Description=
Meta_rendersChildren_DisplayName=
Meta_scheme_Description=Defines a format to be used to interpret the value of the content attribute.
Meta_scheme_DisplayName=Scheme

# OrderableList
OrderableList_Description=Base component for UI components that allow the user to make a selection from a set of options.
OrderableList_DisplayName=Orderable List
OrderableList_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
OrderableList_attributes_DisplayName=Attributes Map
OrderableList_childCount_Description=The number of child components associated with this component.
OrderableList_childCount_DisplayName=Child Component Count
OrderableList_children_Description=A mutable List of the child components associated with this component.
OrderableList_children_DisplayName=Child Component List
OrderableList_converter_Description=Converter instance registered with this component.
OrderableList_converter_DisplayName=Converter
OrderableList_disabled_Description=Disables the component and prevents its value from being submitted
OrderableList_disabled_DisplayName=Disabled
OrderableList_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
OrderableList_facets_DisplayName=Facets Map
OrderableList_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
OrderableList_family_DisplayName=Component Family
OrderableList_footer_Description=Use this facet to add content below the list and buttons.
OrderableList_footer_DisplayName=Footer
OrderableList_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
OrderableList_id_DisplayName=Component Identifier
OrderableList_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
OrderableList_immediate_DisplayName=Immediate Action
OrderableList_labelLevel_Description=Determines the style of the labels (default is 2, 1 is the strongest)
OrderableList_labelLevel_DisplayName=Label Level
OrderableList_labelOnTop_Description=If this attribute is true, the label is rendered above the component. If it is false, the label is rendered next to the component. The default is false.
OrderableList_labelOnTop_DisplayName=Label on Top
OrderableList_label_Description=The label of the list
OrderableList_label_DisplayName=List Label
OrderableList_list_Description=Object that represents the list of items
OrderableList_list_DisplayName=List
OrderableList_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
OrderableList_localValueSet_DisplayName=Local Value Set
OrderableList_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
OrderableList_localValue_DisplayName=Local Value
OrderableList_moveDownButton_Description=Use this facet to replace the standard "Move To Bottom" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_moveToBottom</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> moveDown()</code> function. See the section on JavaScript for details.
OrderableList_moveDownButton_DisplayName=Move Down Button
OrderableList_moveTopBottom_Description=If this attribute is true, the Move to Top and Move to Bottom buttons are shown. The default is false.
OrderableList_moveTopBottom_DisplayName=Move Top and Bottom
OrderableList_moveUpButton_Description=Use this facet to replace the standard "Move To Top" button. If you use a facet to replace this component, the JSF ID of this component should be the ID given to the AddRemove component with<code>_moveToTop</code> appended at the end. If you wish to use the JavaScript function associated with the default button, use the <code> moveUp()</code> function. See the section on JavaScript for details.
OrderableList_moveUpButton_DisplayName=Move Up Button
OrderableList_multiple_Description=Flag indicating that the application user may make select more than one option from the listbox .
OrderableList_multiple_DisplayName=Multiple
OrderableList_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
OrderableList_parent_DisplayName=Parent Component
OrderableList_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
OrderableList_readOnly_DisplayName=Read-only
OrderableList_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
OrderableList_rendered_DisplayName=Rendered Flag
OrderableList_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
OrderableList_rendererType_DisplayName=Renderer Type
OrderableList_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
OrderableList_rendersChildren_DisplayName=Renders Children
OrderableList_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
OrderableList_required_DisplayName=Required Flag
OrderableList_rows_Description=Number of items to display in the listbox
OrderableList_rows_DisplayName=Number of Items to Display
OrderableList_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
OrderableList_styleClass_DisplayName=CSS Style Class(es)
OrderableList_style_Description=CSS style(s) to be applied when this component is rendered.
OrderableList_style_DisplayName=CSS Style(s)
OrderableList_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
OrderableList_submittedValue_DisplayName=Submitted Value
OrderableList_tabIndex_Description=The position of this component in the tabbing order sequence
OrderableList_tabIndex_DisplayName=Tab Index
OrderableList_toolTip_Description=Display the text as a tooltip for this component
OrderableList_toolTip_DisplayName=Tool Tip
OrderableList_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
OrderableList_validator_DisplayName=Validator
OrderableList_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
OrderableList_valueChangeListener_DisplayName=Value Change Listener
OrderableList_value_Description=The current value of this component.
OrderableList_value_DisplayName=Value
OrderableList_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
OrderableList_visible_DisplayName=Visible

# PageAlert
PageAlert_Description=Layout for a full page alert including title, action buttons and optional input components
PageAlert_DisplayName=Page Alert
PageAlert_alt_Description=Alternative text description used by screen reader tools
PageAlert_alt_DisplayName=Alt Text
PageAlert_attributes_Description=
PageAlert_attributes_DisplayName=
PageAlert_childCount_Description=
PageAlert_childCount_DisplayName=
PageAlert_children_Description=
PageAlert_children_DisplayName=
PageAlert_detail_Description=Optional detailed message text for the alert. This message might include more information about the alert and instructions for what to do about the alert.
PageAlert_detail_DisplayName=Detail Message
PageAlert_escape_Description=Flag indicating that the message text should be escaped so that it is not interpreted by the browser.
PageAlert_escape_DisplayName=Escape
PageAlert_facets_Description=
PageAlert_facets_DisplayName=
PageAlert_family_Description=
PageAlert_family_DisplayName=
PageAlert_id_Description=
PageAlert_id_DisplayName=
PageAlert_parent_Description=
PageAlert_parent_DisplayName=
PageAlert_rendered_Description=
PageAlert_rendered_DisplayName=Rendered Flag
PageAlert_rendererType_Description=
PageAlert_rendererType_DisplayName=
PageAlert_rendersChildren_Description=
PageAlert_rendersChildren_DisplayName=
PageAlert_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PageAlert_styleClass_DisplayName=CSS Style Class(es)
PageAlert_style_Description=CSS style(s) to be applied when this component is rendered.
PageAlert_style_DisplayName=CSS Style(s)
PageAlert_summary_Description=Summary message text for the alert. This brief message is displayed under the page alert title.
PageAlert_summary_DisplayName=Summary Message
PageAlert_tabIndex_Description=The position of this component in the tabbing order sequence
PageAlert_tabIndex_DisplayName=Tab Index
PageAlert_title_Description=The text to display as the page title
PageAlert_title_DisplayName=Title
PageAlert_type_Description=The type or category of alert
PageAlert_type_DisplayName=Alert Type
PageAlert_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PageAlert_visible_DisplayName=Visible

# PageSeparator
PageSeparator_Description=A horizontal page separator line
PageSeparator_DisplayName=Page Separator
PageSeparator_attributes_Description=
PageSeparator_attributes_DisplayName=
PageSeparator_childCount_Description=
PageSeparator_childCount_DisplayName=
PageSeparator_children_Description=
PageSeparator_children_DisplayName=
PageSeparator_facets_Description=
PageSeparator_facets_DisplayName=
PageSeparator_family_Description=
PageSeparator_family_DisplayName=
PageSeparator_id_Description=
PageSeparator_id_DisplayName=
PageSeparator_parent_Description=
PageSeparator_parent_DisplayName=
PageSeparator_rendered_Description=
PageSeparator_rendered_DisplayName=Rendered Flag
PageSeparator_rendererType_Description=
PageSeparator_rendererType_DisplayName=
PageSeparator_rendersChildren_Description=
PageSeparator_rendersChildren_DisplayName=
PageSeparator_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PageSeparator_styleClass_DisplayName=CSS Style Class(es)
PageSeparator_style_Description=CSS style(s) to be applied when this component is rendered.
PageSeparator_style_DisplayName=CSS Style(s)
PageSeparator_value_Description=
PageSeparator_value_DisplayName=Value
PageSeparator_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PageSeparator_visible_DisplayName=Visible

# Page
Page_Description=Represents an entire web page for web applications, or the content area of a portlet for portlet applications.
Page_DisplayName=Page
Page_attributes_Description=
Page_attributes_DisplayName=
Page_childCount_Description=
Page_childCount_DisplayName=
Page_children_Description=
Page_children_DisplayName=
Page_facets_Description=
Page_facets_DisplayName=
Page_family_Description=
Page_family_DisplayName=
Page_frame_Description=Set the page to render frames which will generate a frameset tag instead of a body tag
Page_frame_DisplayName=Needs Frame
Page_id_Description=
Page_id_DisplayName=
Page_parent_Description=
Page_parent_DisplayName=
Page_rendered_Description=
Page_rendered_DisplayName=Rendered Flag
Page_rendererType_Description=
Page_rendererType_DisplayName=
Page_rendersChildren_Description=
Page_rendersChildren_DisplayName=
Page_xhtml_Description=Indicates that this is an XHTML transitional page, and affects the value of the generated DOCTYPE attribute
Page_xhtml_DisplayName=XHTML Transitional

# PanelGroup
PanelGroup_Description=Organizes its child components in a flow with an optional separator between them
PanelGroup_DisplayName=Group Panel
PanelGroup_attributes_Description=
PanelGroup_attributes_DisplayName=
PanelGroup_block_Description=Display the group panel on its own line instead of flowing from the previous component on the page
PanelGroup_block_DisplayName=Block
PanelGroup_childCount_Description=
PanelGroup_childCount_DisplayName=
PanelGroup_children_Description=
PanelGroup_children_DisplayName=
PanelGroup_facets_Description=
PanelGroup_facets_DisplayName=
PanelGroup_family_Description=
PanelGroup_family_DisplayName=
PanelGroup_id_Description=
PanelGroup_id_DisplayName=
PanelGroup_parent_Description=
PanelGroup_parent_DisplayName=
PanelGroup_rendered_Description=
PanelGroup_rendered_DisplayName=Rendered Flag
PanelGroup_rendererType_Description=
PanelGroup_rendererType_DisplayName=
PanelGroup_rendersChildren_Description=
PanelGroup_rendersChildren_DisplayName=
PanelGroup_separator_Description=Character or characters to display between each child component
PanelGroup_separator_DisplayName=Separator
PanelGroup_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PanelGroup_styleClass_DisplayName=CSS Style Class(es)
PanelGroup_style_Description=CSS style(s) to be applied when this component is rendered.
PanelGroup_style_DisplayName=CSS Style(s)
PanelGroup_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PanelGroup_visible_DisplayName=Visible

# PanelLayout
PanelLayout_Description=Organizes its child components using flow or absolute positioning
PanelLayout_DisplayName=Layout Panel
PanelLayout_attributes_Description=
PanelLayout_attributes_DisplayName=
PanelLayout_childCount_Description=
PanelLayout_childCount_DisplayName=
PanelLayout_children_Description=
PanelLayout_children_DisplayName=
PanelLayout_facets_Description=
PanelLayout_facets_DisplayName=
PanelLayout_family_Description=
PanelLayout_family_DisplayName=
PanelLayout_id_Description=
PanelLayout_id_DisplayName=
PanelLayout_panelLayout_Description=Use absolute grid positioning, or flow layout
PanelLayout_panelLayout_DisplayName=Panel Layout
PanelLayout_parent_Description=
PanelLayout_parent_DisplayName=
PanelLayout_rendered_Description=
PanelLayout_rendered_DisplayName=Rendered Flag
PanelLayout_rendererType_Description=
PanelLayout_rendererType_DisplayName=
PanelLayout_rendersChildren_Description=
PanelLayout_rendersChildren_DisplayName=
PanelLayout_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PanelLayout_styleClass_DisplayName=CSS Style Class(es)
PanelLayout_style_Description=CSS style(s) to be applied when this component is rendered.
PanelLayout_style_DisplayName=CSS Style(s)
PanelLayout_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PanelLayout_visible_DisplayName=Visible

# PasswordField
PasswordField_Description=Represents a password field whose content will be included when the surrounding form is submitted.
PasswordField_DisplayName=Password Field
PasswordField_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
PasswordField_attributes_DisplayName=Attributes Map
PasswordField_childCount_Description=The number of child components associated with this component.
PasswordField_childCount_DisplayName=Child Component Count
PasswordField_children_Description=A mutable List of the child components associated with this component.
PasswordField_children_DisplayName=Child Component List
PasswordField_columns_Description=Number of character columns used to render this field.
PasswordField_columns_DisplayName=Columns
PasswordField_converter_Description=Converter instance registered with this component.
PasswordField_converter_DisplayName=Converter
PasswordField_disabled_Description=Disables the component and prevents its value from being submitted
PasswordField_disabled_DisplayName=Disabled
PasswordField_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
PasswordField_facets_DisplayName=Facets Map
PasswordField_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
PasswordField_family_DisplayName=Component Family
PasswordField_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
PasswordField_id_DisplayName=Component Identifier
PasswordField_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
PasswordField_immediate_DisplayName=Immediate Action
PasswordField_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
PasswordField_labelLevel_DisplayName=Label Level
PasswordField_label_Description=Display this text in a label associated with the field
PasswordField_label_DisplayName=Label
PasswordField_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
PasswordField_localValueSet_DisplayName=Local Value Set
PasswordField_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
PasswordField_localValue_DisplayName=Local Value
PasswordField_maxLength_Description=The maximum number of characters that can be entered for this field.
PasswordField_maxLength_DisplayName=Maximum Length
PasswordField_onBlur_Description=Scripting code executed when this element loses focus.
PasswordField_onBlur_DisplayName=Blur Script
PasswordField_onChange_Description=Scripting code executed when the element value of this component is changed.
PasswordField_onChange_DisplayName=Value Change Script
PasswordField_onClick_Description=Scripting code executed when a mouse click occurs over this component.
PasswordField_onClick_DisplayName=Click Script
PasswordField_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
PasswordField_onDblClick_DisplayName=Double Click Script
PasswordField_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
PasswordField_onFocus_DisplayName=Focus Script
PasswordField_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
PasswordField_onKeyDown_DisplayName=Key Down Script
PasswordField_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
PasswordField_onKeyPress_DisplayName=Key Press Script
PasswordField_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
PasswordField_onKeyUp_DisplayName=Key Up Script
PasswordField_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
PasswordField_onMouseDown_DisplayName=Mouse Down Script
PasswordField_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
PasswordField_onMouseMove_DisplayName=Mouse Move Script
PasswordField_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
PasswordField_onMouseOut_DisplayName=Mouse Out Script
PasswordField_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
PasswordField_onMouseOver_DisplayName=Mouse In Script
PasswordField_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
PasswordField_onMouseUp_DisplayName=Mouse Up Script
PasswordField_onSelect_Description=Scripting code executed when some text in this component value is selected.
PasswordField_onSelect_DisplayName=Text Selected Script
PasswordField_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
PasswordField_parent_DisplayName=Parent Component
PasswordField_password_Description=Password text to be contained in this field
PasswordField_password_DisplayName=Password
PasswordField_readOnly_Description=Flag indicating that modification of this component by the user is not currently permitted, but that it will be included when the form is submitted.
PasswordField_readOnly_DisplayName=Read Only
PasswordField_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
PasswordField_rendered_DisplayName=Rendered Flag
PasswordField_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
PasswordField_rendererType_DisplayName=Renderer Type
PasswordField_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
PasswordField_rendersChildren_DisplayName=Renders Children
PasswordField_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
PasswordField_required_DisplayName=Required Flag
PasswordField_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PasswordField_styleClass_DisplayName=CSS Style Class(es)
PasswordField_style_Description=CSS style(s) to be applied when this component is rendered.
PasswordField_style_DisplayName=CSS Style(s)
PasswordField_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
PasswordField_submittedValue_DisplayName=Submitted Value
PasswordField_tabIndex_Description=The position of this component in the tabbing order sequence
PasswordField_tabIndex_DisplayName=Tab Index
PasswordField_text_Description=Text value that will be displayed within this input field
PasswordField_text_DisplayName=Text
PasswordField_toolTip_Description=Display the text as a tooltip for this component
PasswordField_toolTip_DisplayName=Tool Tip
PasswordField_trim_Description=Trim any leading and trailing blanks when the value is submitted
PasswordField_trim_DisplayName=Trim
PasswordField_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
PasswordField_validator_DisplayName=Validator
PasswordField_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
PasswordField_valueChangeListener_DisplayName=Value Change Listener
PasswordField_value_Description=The current value of this component.
PasswordField_value_DisplayName=Value
PasswordField_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PasswordField_visible_DisplayName=Visible

# PropertySheetSection
PropertySheetSection_Description=Represents a PropertySheet section.
PropertySheetSection_DisplayName=Property Sheet Section
PropertySheetSection_attributes_Description=
PropertySheetSection_attributes_DisplayName=
PropertySheetSection_childCount_Description=
PropertySheetSection_childCount_DisplayName=
PropertySheetSection_children_Description=
PropertySheetSection_children_DisplayName=
PropertySheetSection_facets_Description=
PropertySheetSection_facets_DisplayName=
PropertySheetSection_family_Description=
PropertySheetSection_family_DisplayName=
PropertySheetSection_id_Description=
PropertySheetSection_id_DisplayName=
PropertySheetSection_label_Description=This specifies the text label associated with this Section.
PropertySheetSection_label_DisplayName=Label
PropertySheetSection_parent_Description=
PropertySheetSection_parent_DisplayName=
PropertySheetSection_rendered_Description=
PropertySheetSection_rendered_DisplayName=Rendered Flag
PropertySheetSection_rendererType_Description=
PropertySheetSection_rendererType_DisplayName=
PropertySheetSection_rendersChildren_Description=
PropertySheetSection_rendersChildren_DisplayName=
PropertySheetSection_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PropertySheetSection_styleClass_DisplayName=CSS Style Class(es)
PropertySheetSection_style_Description=CSS style(s) to be applied when this component is rendered.
PropertySheetSection_style_DisplayName=CSS Style(s)
PropertySheetSection_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PropertySheetSection_visible_DisplayName=Visible

# PropertySheet
PropertySheet_Description=Represents a PropertySheet
PropertySheet_DisplayName=Property Sheet
PropertySheet_attributes_Description=
PropertySheet_attributes_DisplayName=
PropertySheet_childCount_Description=
PropertySheet_childCount_DisplayName=
PropertySheet_children_Description=
PropertySheet_children_DisplayName=
PropertySheet_facets_Description=
PropertySheet_facets_DisplayName=
PropertySheet_family_Description=
PropertySheet_family_DisplayName=
PropertySheet_id_Description=
PropertySheet_id_DisplayName=
PropertySheet_jumpLinks_Description=Display jump links (only if there are at least 2 visible sections)
PropertySheet_jumpLinks_DisplayName=Show Jump Links
PropertySheet_parent_Description=
PropertySheet_parent_DisplayName=
PropertySheet_rendered_Description=
PropertySheet_rendered_DisplayName=Rendered Flag
PropertySheet_rendererType_Description=
PropertySheet_rendererType_DisplayName=
PropertySheet_rendersChildren_Description=
PropertySheet_rendersChildren_DisplayName=
PropertySheet_requiredFields_Description=Display a required field legend on the property sheet
PropertySheet_requiredFields_DisplayName=Required Field Legend
PropertySheet_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
PropertySheet_styleClass_DisplayName=CSS Style Class(es)
PropertySheet_style_Description=CSS style(s) to be applied when this component is rendered.
PropertySheet_style_DisplayName=CSS Style(s)
PropertySheet_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
PropertySheet_visible_DisplayName=Visible

# Property
Property_Description=Represents a Property
Property_DisplayName=Property
Property_attributes_Description=
Property_attributes_DisplayName=
Property_childCount_Description=
Property_childCount_DisplayName=
Property_children_Description=
Property_children_DisplayName=
Property_content_Description=<p> This facet may be used to supply the content of this<code>ui\:property</code>. The content may also be supply by simply adding children to this property without specifying the content facet.</p><p><b>Example 1\:</b></p><p><code><pre>&lt;f\:facet name\="content"&gt;&lt;ui\:checkbox id\="limitLongChoice" label\="Limit excessively long messages" /&gt;&lt;/f\:facet&gt;</pre></code></p><p><b>Example 2\:</b></p><p><code><pre>&lt;f\:facet name\="content"&gt;&lt;ui\:panelGroup id\="group5"&gt;&lt;ui\:dropDown id\="numberToDisplay" items\="\#{BackingFileChoice.airports}" /&gt;&lt;f\:verbatim&gt;entries per page&lt;/f\:verbatim&gt;&lt;/ui\:panelGroup&gt;&lt;/f\:facet&gt;</pre></code></p>
Property_content_DisplayName=Property Content
Property_disabled_Description=Disables the component and prevents its value from being submitted
Property_disabled_DisplayName=Disabled
Property_facets_Description=
Property_facets_DisplayName=
Property_family_Description=
Property_family_DisplayName=
Property_helpText_Description=Help text to appear below the Property component
Property_helpText_DisplayName=Help Text
Property_id_Description=
Property_id_DisplayName=
Property_labelAlign_Description=Indicates if the position of the label relative to the component
Property_labelAlign_DisplayName=Label Alignment
Property_label_Description=Set the text to be displayed as the label for the first input element contained in the Property component
Property_label_DisplayName=Label
Property_noWrap_Description=Specifies whether the label component should not wrap
Property_noWrap_DisplayName=Label No-Wrap
Property_overlapLabel_Description=Indicates whether the property should overlap into the label area
Property_overlapLabel_DisplayName=Overlap Label
Property_parent_Description=
Property_parent_DisplayName=
Property_rendered_Description=
Property_rendered_DisplayName=Rendered Flag
Property_rendererType_Description=
Property_rendererType_DisplayName=
Property_rendersChildren_Description=
Property_rendersChildren_DisplayName=
Property_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Property_styleClass_DisplayName=CSS Style Class(es)
Property_style_Description=CSS style(s) to be applied when this component is rendered.
Property_style_DisplayName=CSS Style(s)
Property_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Property_visible_DisplayName=Visible

# RadioButtonGroup
RadioButtonGroup_Description=A set of zero or more labelled radiobuttons
RadioButtonGroup_DisplayName=Radio Button Group
RadioButtonGroup_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
RadioButtonGroup_attributes_DisplayName=Attributes Map
RadioButtonGroup_childCount_Description=The number of child components associated with this component.
RadioButtonGroup_childCount_DisplayName=Child Component Count
RadioButtonGroup_children_Description=A mutable List of the child components associated with this component.
RadioButtonGroup_children_DisplayName=Child Component List
RadioButtonGroup_columns_Description=The number of columns that may be used to lay out the radiobuttons
RadioButtonGroup_columns_DisplayName=Columns
RadioButtonGroup_converter_Description=Converter instance registered with this component.
RadioButtonGroup_converter_DisplayName=Converter
RadioButtonGroup_disabled_Description=Disables the component and prevents its value from being submitted
RadioButtonGroup_disabled_DisplayName=Disabled
RadioButtonGroup_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
RadioButtonGroup_facets_DisplayName=Facets Map
RadioButtonGroup_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
RadioButtonGroup_family_DisplayName=Component Family
RadioButtonGroup_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
RadioButtonGroup_id_DisplayName=Component Identifier
RadioButtonGroup_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
RadioButtonGroup_immediate_DisplayName=Immediate Action
RadioButtonGroup_items_Description=The object that represents the options from which the user can select
RadioButtonGroup_items_DisplayName=Items
RadioButtonGroup_labelLevel_Description=Set the style for the label property
RadioButtonGroup_labelLevel_DisplayName=Label Level
RadioButtonGroup_label_Description=Label for the component
RadioButtonGroup_label_DisplayName=Label
RadioButtonGroup_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
RadioButtonGroup_localValueSet_DisplayName=Local Value Set
RadioButtonGroup_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
RadioButtonGroup_localValue_DisplayName=Local Value
RadioButtonGroup_onBlur_Description=Scripting code executed when this element loses focus.
RadioButtonGroup_onBlur_DisplayName=Blur Script
RadioButtonGroup_onChange_Description=Scripting code executed when the element value of this component is changed.
RadioButtonGroup_onChange_DisplayName=Value Change Script
RadioButtonGroup_onClick_Description=Scripting code executed when a mouse click occurs over this component.
RadioButtonGroup_onClick_DisplayName=Click Script
RadioButtonGroup_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
RadioButtonGroup_onDblClick_DisplayName=Double Click Script
RadioButtonGroup_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
RadioButtonGroup_onFocus_DisplayName=Focus Script
RadioButtonGroup_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
RadioButtonGroup_onKeyDown_DisplayName=Key Down Script
RadioButtonGroup_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
RadioButtonGroup_onKeyPress_DisplayName=Key Press Script
RadioButtonGroup_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
RadioButtonGroup_onKeyUp_DisplayName=Key Up Script
RadioButtonGroup_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
RadioButtonGroup_onMouseDown_DisplayName=Mouse Down Script
RadioButtonGroup_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
RadioButtonGroup_onMouseMove_DisplayName=Mouse Move Script
RadioButtonGroup_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
RadioButtonGroup_onMouseOut_DisplayName=Mouse Out Script
RadioButtonGroup_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
RadioButtonGroup_onMouseOver_DisplayName=Mouse In Script
RadioButtonGroup_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
RadioButtonGroup_onMouseUp_DisplayName=Mouse Up Script
RadioButtonGroup_onSelect_Description=Scripting code executed when some text in this component value is selected.
RadioButtonGroup_onSelect_DisplayName=Text Selected Script
RadioButtonGroup_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
RadioButtonGroup_parent_DisplayName=Parent Component
RadioButtonGroup_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
RadioButtonGroup_readOnly_DisplayName=Read-only
RadioButtonGroup_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
RadioButtonGroup_rendered_DisplayName=Rendered Flag
RadioButtonGroup_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
RadioButtonGroup_rendererType_DisplayName=Renderer Type
RadioButtonGroup_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
RadioButtonGroup_rendersChildren_DisplayName=Renders Children
RadioButtonGroup_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
RadioButtonGroup_required_DisplayName=Required Flag
RadioButtonGroup_selected_Description=The object that represents the selected value or values
RadioButtonGroup_selected_DisplayName=Selected
RadioButtonGroup_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
RadioButtonGroup_styleClass_DisplayName=CSS Style Class(es)
RadioButtonGroup_style_Description=CSS style(s) to be applied when this component is rendered.
RadioButtonGroup_style_DisplayName=CSS Style(s)
RadioButtonGroup_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
RadioButtonGroup_submittedValue_DisplayName=Submitted Value
RadioButtonGroup_tabIndex_Description=The position of this component in the tabbing order sequence
RadioButtonGroup_tabIndex_DisplayName=Tab Index
RadioButtonGroup_toolTip_Description=Display the text as a tooltip for this component
RadioButtonGroup_toolTip_DisplayName=Tool Tip
RadioButtonGroup_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
RadioButtonGroup_validator_DisplayName=Validator
RadioButtonGroup_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
RadioButtonGroup_valueChangeListener_DisplayName=Value Change Listener
RadioButtonGroup_value_Description=The current value of this component.
RadioButtonGroup_value_DisplayName=Value
RadioButtonGroup_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
RadioButtonGroup_visible_DisplayName=Visible

# RadioButton
RadioButton_Description=A radio button for a single selectable option
RadioButton_DisplayName=Radio Button
RadioButton_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
RadioButton_attributes_DisplayName=Attributes Map
RadioButton_childCount_Description=The number of child components associated with this component.
RadioButton_childCount_DisplayName=Child Component Count
RadioButton_children_Description=A mutable List of the child components associated with this component.
RadioButton_children_DisplayName=Child Component List
RadioButton_converter_Description=Converter instance registered with this component.
RadioButton_converter_DisplayName=Converter
RadioButton_disabled_Description=Disables the component and prevents its value from being submitted
RadioButton_disabled_DisplayName=Disabled
RadioButton_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
RadioButton_facets_DisplayName=Facets Map
RadioButton_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
RadioButton_family_DisplayName=Component Family
RadioButton_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
RadioButton_id_DisplayName=Component Identifier
RadioButton_imageURL_Description=Resource path of an image used to appear in the component
RadioButton_imageURL_DisplayName=Image URL
RadioButton_image_Description=<p> The component, typically a<code>com.sun.rave.web.ui.component.ImageComponent</code> component that may appear with a checkbox or radio button.</p>
RadioButton_image_DisplayName=Control Image
RadioButton_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
RadioButton_immediate_DisplayName=Immediate Action
RadioButton_items_Description=
RadioButton_items_DisplayName=
RadioButton_labelLevel_Description=Set the style level for the generated label (if provided)
RadioButton_labelLevel_DisplayName=Label Level
RadioButton_label_Description=Label for the component
RadioButton_label_DisplayName=Label
RadioButton_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
RadioButton_localValueSet_DisplayName=Local Value Set
RadioButton_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
RadioButton_localValue_DisplayName=Local Value
RadioButton_name_Description=Identifies the group of components to which this component belongs
RadioButton_name_DisplayName=Group Name
RadioButton_onBlur_Description=Scripting code executed when this element loses focus.
RadioButton_onBlur_DisplayName=Blur Script
RadioButton_onChange_Description=Scripting code executed when the element value of this component is changed.
RadioButton_onChange_DisplayName=Value Change Script
RadioButton_onClick_Description=Scripting code executed when a mouse click occurs over this component.
RadioButton_onClick_DisplayName=Click Script
RadioButton_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
RadioButton_onDblClick_DisplayName=Double Click Script
RadioButton_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
RadioButton_onFocus_DisplayName=Focus Script
RadioButton_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
RadioButton_onKeyDown_DisplayName=Key Down Script
RadioButton_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
RadioButton_onKeyPress_DisplayName=Key Press Script
RadioButton_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
RadioButton_onKeyUp_DisplayName=Key Up Script
RadioButton_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
RadioButton_onMouseDown_DisplayName=Mouse Down Script
RadioButton_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
RadioButton_onMouseMove_DisplayName=Mouse Move Script
RadioButton_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
RadioButton_onMouseOut_DisplayName=Mouse Out Script
RadioButton_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
RadioButton_onMouseOver_DisplayName=Mouse In Script
RadioButton_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
RadioButton_onMouseUp_DisplayName=Mouse Up Script
RadioButton_onSelect_Description=Scripting code executed when some text in this component value is selected.
RadioButton_onSelect_DisplayName=Text Selected Script
RadioButton_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
RadioButton_parent_DisplayName=Parent Component
RadioButton_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
RadioButton_readOnly_DisplayName=Read-only
RadioButton_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
RadioButton_rendered_DisplayName=Rendered Flag
RadioButton_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
RadioButton_rendererType_DisplayName=Renderer Type
RadioButton_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
RadioButton_rendersChildren_DisplayName=Renders Children
RadioButton_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
RadioButton_required_DisplayName=Required Flag
RadioButton_selectedValue_Description=Indicates the value of this component when it is selected. If no value is assigned, the component value is a Boolean
RadioButton_selectedValue_DisplayName=
RadioButton_selected_Description=The object that represents the selected value or values
RadioButton_selected_DisplayName=Selected
RadioButton_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
RadioButton_styleClass_DisplayName=CSS Style Class(es)
RadioButton_style_Description=CSS style(s) to be applied when this component is rendered.
RadioButton_style_DisplayName=CSS Style(s)
RadioButton_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
RadioButton_submittedValue_DisplayName=Submitted Value
RadioButton_tabIndex_Description=The position of this component in the tabbing order sequence
RadioButton_tabIndex_DisplayName=Tab Index
RadioButton_toolTip_Description=Display the text as a tooltip for this component
RadioButton_toolTip_DisplayName=Tool Tip
RadioButton_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
RadioButton_validator_DisplayName=Validator
RadioButton_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
RadioButton_valueChangeListener_DisplayName=Value Change Listener
RadioButton_value_Description=The current value of this component.
RadioButton_value_DisplayName=Value
RadioButton_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
RadioButton_visible_DisplayName=Visible

# RbCbSelector
RbCbSelector_Description=<p> The <code>RbCbSelectorBase</code> class represents a base class for the <code>RbCbSelector</code> class, which is the super class for the single radio button base class <code>RadioButtonBase</code> and the single checkbox base class <code>CheckboxBase</code>. Ultimately the super class for the <code>RadioButton</code> and <code>Checkbox</code> classes. <p> <h2>Facets</h2> <p> This class supports two optional facets. <ul> <li>image</li> <li>label</li> </ul> <p> If values are specified for either or both <code>imageURL</code> or <code>label</code> properties, an <code>ImageComponent</code> and <code>Label</code> component, respectively, may appear along with the checkbox control. Corresponding properties in the image and label components are assigned the values of the <code>imageURL</code>, <code>label</code> and <code>labelLevel</code> properties. </p> <p> The <code>ImageComponent</code> and <code>Label</code> components support several other properties. If these other properties must have specific values then, facets should be specified to assign the desired values to properties, not available as properties on the <code>RbCbSelectorBase</code> component subclass. </p> <p> This class implements the following methods <h1><code>getConvertedValue</code></h1> It defers first to the renderer's <code>getConvertedValue</code> method. If there is no renderer to supply the converted value this method behaves as follows. <ul> <li>If the submitted value (the second argument), is <code>null</code>, return <code>null indicating the control is not selected.</li> <li>If the submitted value (the second argument), is not <code>null</code> and is of type <code>String</code> return the the submitted value (the second argument). If the submitted value (the second argument), is of type <code>String[]</code> return the the first element if it is not <code>null</code> or zero length, else return <code>null</code></li> <li>If the submitted value (the second argument) is not <code>null</code> or of type <code>String</code> or <code>String[]</code> call <code>ConversionUtilities.convertValueToObject</code> to give a registered converter the opportunity to covert the object.</li> </p> <h1><code>isChecked</code></h1> <p> This method implements the following algorithm. <ul> <li>If the <code>selectedValue</code> property is <code>null</code>, return <code>false</code>. By default, <code>selectedValue</code> will be a <code>Boolean</code> instance equal to true, if never assigned a value.</li> <li>If the <code>selectedValue</code> propery is not <code>null</code> and <code>getSelected</code> returns <code>null</code>, return <code>false</code>. If <code>getSelected</code> returns non <code>null</code>, effectively return <code>getSelected().equals(getSelectedValue())</code>.</li> </p>
RbCbSelector_DisplayName=RadioButtonBase and CheckboxBase super class
RbCbSelector_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
RbCbSelector_attributes_DisplayName=Attributes Map
RbCbSelector_childCount_Description=The number of child components associated with this component.
RbCbSelector_childCount_DisplayName=Child Component Count
RbCbSelector_children_Description=A mutable List of the child components associated with this component.
RbCbSelector_children_DisplayName=Child Component List
RbCbSelector_converter_Description=Converter instance registered with this component.
RbCbSelector_converter_DisplayName=Converter
RbCbSelector_disabled_Description=Disables the component and prevents its value from being submitted
RbCbSelector_disabled_DisplayName=Disabled
RbCbSelector_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
RbCbSelector_facets_DisplayName=Facets Map
RbCbSelector_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
RbCbSelector_family_DisplayName=Component Family
RbCbSelector_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
RbCbSelector_id_DisplayName=Component Identifier
RbCbSelector_imageURL_Description=Resource path of an image used to appear in the component
RbCbSelector_imageURL_DisplayName=Image URL
RbCbSelector_image_Description=<p> The component, typically a<code>com.sun.rave.web.ui.component.ImageComponent</code> component that may appear with a checkbox or radio button.</p>
RbCbSelector_image_DisplayName=Control Image
RbCbSelector_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
RbCbSelector_immediate_DisplayName=Immediate Action
RbCbSelector_items_Description=
RbCbSelector_items_DisplayName=
RbCbSelector_labelLevel_Description=Set the style for the label property
RbCbSelector_labelLevel_DisplayName=Label Level
RbCbSelector_label_Description=Label for the component
RbCbSelector_label_DisplayName=Label
RbCbSelector_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
RbCbSelector_localValueSet_DisplayName=Local Value Set
RbCbSelector_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
RbCbSelector_localValue_DisplayName=Local Value
RbCbSelector_name_Description=Identifies the group of components to which this component belongs
RbCbSelector_name_DisplayName=Group Name
RbCbSelector_onBlur_Description=Scripting code executed when this element loses focus.
RbCbSelector_onBlur_DisplayName=Blur Script
RbCbSelector_onChange_Description=Scripting code executed when the element value of this component is changed.
RbCbSelector_onChange_DisplayName=Value Change Script
RbCbSelector_onClick_Description=Scripting code executed when a mouse click occurs over this component.
RbCbSelector_onClick_DisplayName=Click Script
RbCbSelector_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
RbCbSelector_onDblClick_DisplayName=Double Click Script
RbCbSelector_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
RbCbSelector_onFocus_DisplayName=Focus Script
RbCbSelector_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
RbCbSelector_onKeyDown_DisplayName=Key Down Script
RbCbSelector_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
RbCbSelector_onKeyPress_DisplayName=Key Press Script
RbCbSelector_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
RbCbSelector_onKeyUp_DisplayName=Key Up Script
RbCbSelector_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
RbCbSelector_onMouseDown_DisplayName=Mouse Down Script
RbCbSelector_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
RbCbSelector_onMouseMove_DisplayName=Mouse Move Script
RbCbSelector_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
RbCbSelector_onMouseOut_DisplayName=Mouse Out Script
RbCbSelector_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
RbCbSelector_onMouseOver_DisplayName=Mouse In Script
RbCbSelector_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
RbCbSelector_onMouseUp_DisplayName=Mouse Up Script
RbCbSelector_onSelect_Description=Scripting code executed when some text in this component value is selected.
RbCbSelector_onSelect_DisplayName=Text Selected Script
RbCbSelector_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
RbCbSelector_parent_DisplayName=Parent Component
RbCbSelector_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
RbCbSelector_readOnly_DisplayName=Read-only
RbCbSelector_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
RbCbSelector_rendered_DisplayName=Rendered Flag
RbCbSelector_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
RbCbSelector_rendererType_DisplayName=Renderer Type
RbCbSelector_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
RbCbSelector_rendersChildren_DisplayName=Renders Children
RbCbSelector_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
RbCbSelector_required_DisplayName=Required Flag
RbCbSelector_selectedValue_Description=Indicates the value of this component when it is selected. If no value is assigned, the component value is a Boolean
RbCbSelector_selectedValue_DisplayName=
RbCbSelector_selected_Description=The object that represents the selected value or values
RbCbSelector_selected_DisplayName=Selected
RbCbSelector_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
RbCbSelector_styleClass_DisplayName=CSS Style Class(es)
RbCbSelector_style_Description=CSS style(s) to be applied when this component is rendered.
RbCbSelector_style_DisplayName=CSS Style(s)
RbCbSelector_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
RbCbSelector_submittedValue_DisplayName=Submitted Value
RbCbSelector_tabIndex_Description=The position of this component in the tabbing order sequence
RbCbSelector_tabIndex_DisplayName=Tab Index
RbCbSelector_toolTip_Description=Display the text as a tooltip for this component
RbCbSelector_toolTip_DisplayName=Tool Tip
RbCbSelector_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
RbCbSelector_validator_DisplayName=Validator
RbCbSelector_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
RbCbSelector_valueChangeListener_DisplayName=Value Change Listener
RbCbSelector_value_Description=The current value of this component.
RbCbSelector_value_DisplayName=Value
RbCbSelector_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
RbCbSelector_visible_DisplayName=Visible

# Script
Script_Description=This is an implementation of the HTML script tag.
Script_DisplayName=Script
Script_attributes_Description=
Script_attributes_DisplayName=
Script_charset_Description=Defines the character (charset) encoding of the target URL. See iana.org for a complete list of character encodings.
Script_charset_DisplayName=Charset
Script_childCount_Description=
Script_childCount_DisplayName=
Script_children_Description=
Script_children_DisplayName=
Script_facets_Description=
Script_facets_DisplayName=
Script_family_Description=
Script_family_DisplayName=
Script_id_Description=
Script_id_DisplayName=
Script_parent_Description=
Script_parent_DisplayName=
Script_rendered_Description=
Script_rendered_DisplayName=Rendered Flag
Script_rendererType_Description=
Script_rendererType_DisplayName=
Script_rendersChildren_Description=
Script_rendersChildren_DisplayName=
Script_type_Description=Indicates the MIME type of the script. Default is "text/javascript"
Script_type_DisplayName=Type
Script_url_Description=Defines the absolute or relative URL to a file that contains the script. Use this attribute to refer to a file instead of inserting the script into your HTML document
Script_url_DisplayName=URL

# Selector
Selector_Description=Base component for UI components that allow the user to make a selection from a set of options.
Selector_DisplayName=Selector
Selector_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Selector_attributes_DisplayName=Attributes Map
Selector_childCount_Description=The number of child components associated with this component.
Selector_childCount_DisplayName=Child Component Count
Selector_children_Description=A mutable List of the child components associated with this component.
Selector_children_DisplayName=Child Component List
Selector_converter_Description=Converter instance registered with this component.
Selector_converter_DisplayName=Converter
Selector_disabled_Description=Disables the component and prevents its value from being submitted
Selector_disabled_DisplayName=Disabled
Selector_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Selector_facets_DisplayName=Facets Map
Selector_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Selector_family_DisplayName=Component Family
Selector_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Selector_id_DisplayName=Component Identifier
Selector_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Selector_immediate_DisplayName=Immediate Action
Selector_items_Description=The object that represents the options from which the user can select
Selector_items_DisplayName=Items
Selector_labelLevel_Description=Set the style for the label property
Selector_labelLevel_DisplayName=Label Level
Selector_label_Description=Label for the component
Selector_label_DisplayName=Label
Selector_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Selector_localValueSet_DisplayName=Local Value Set
Selector_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Selector_localValue_DisplayName=Local Value
Selector_onBlur_Description=Scripting code executed when this element loses focus.
Selector_onBlur_DisplayName=Blur Script
Selector_onChange_Description=Scripting code executed when the element value of this component is changed.
Selector_onChange_DisplayName=Value Change Script
Selector_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Selector_onClick_DisplayName=Click Script
Selector_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Selector_onDblClick_DisplayName=Double Click Script
Selector_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Selector_onFocus_DisplayName=Focus Script
Selector_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Selector_onKeyDown_DisplayName=Key Down Script
Selector_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Selector_onKeyPress_DisplayName=Key Press Script
Selector_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Selector_onKeyUp_DisplayName=Key Up Script
Selector_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Selector_onMouseDown_DisplayName=Mouse Down Script
Selector_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Selector_onMouseMove_DisplayName=Mouse Move Script
Selector_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Selector_onMouseOut_DisplayName=Mouse Out Script
Selector_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Selector_onMouseOver_DisplayName=Mouse In Script
Selector_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Selector_onMouseUp_DisplayName=Mouse Up Script
Selector_onSelect_Description=Scripting code executed when some text in this component value is selected.
Selector_onSelect_DisplayName=Text Selected Script
Selector_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Selector_parent_DisplayName=Parent Component
Selector_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
Selector_readOnly_DisplayName=Read-only
Selector_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Selector_rendered_DisplayName=Rendered Flag
Selector_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Selector_rendererType_DisplayName=Renderer Type
Selector_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Selector_rendersChildren_DisplayName=Renders Children
Selector_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
Selector_required_DisplayName=Required Flag
Selector_selected_Description=The object that represents the selected value or values
Selector_selected_DisplayName=Selected
Selector_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Selector_styleClass_DisplayName=CSS Style Class(es)
Selector_style_Description=CSS style(s) to be applied when this component is rendered.
Selector_style_DisplayName=CSS Style(s)
Selector_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Selector_submittedValue_DisplayName=Submitted Value
Selector_tabIndex_Description=The position of this component in the tabbing order sequence
Selector_tabIndex_DisplayName=Tab Index
Selector_toolTip_Description=Display the text as a tooltip for this component
Selector_toolTip_DisplayName=Tool Tip
Selector_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Selector_validator_DisplayName=Validator
Selector_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Selector_valueChangeListener_DisplayName=Value Change Listener
Selector_value_Description=The current value of this component.
Selector_value_DisplayName=Value
Selector_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Selector_visible_DisplayName=Visible

# SkipHyperlink
SkipHyperlink_Description=Displays a single pixel transparent image with an anchor to allow a screen reader to skip a section of the page.
SkipHyperlink_DisplayName=Skip Hyperlink
SkipHyperlink_actionListener_Description=MethodBinding representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void.
SkipHyperlink_actionListener_DisplayName=Action Listener
SkipHyperlink_action_Description=MethodBinding representing the application action to invoke when this component is activated by the user. The expression must evaluate to a either a String or a public method that takes no parameters, and returns a String (the logical outcome) which is passed to the NavigationHandler for this application.
SkipHyperlink_action_DisplayName=Application Action
SkipHyperlink_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
SkipHyperlink_attributes_DisplayName=Attributes Map
SkipHyperlink_childCount_Description=The number of child components associated with this component.
SkipHyperlink_childCount_DisplayName=Child Component Count
SkipHyperlink_children_Description=A mutable List of the child components associated with this component.
SkipHyperlink_children_DisplayName=Child Component List
SkipHyperlink_description_Description=Textual description of the purpose of this skip hyperlink, including a description of the section that is being skipped.
SkipHyperlink_description_DisplayName=Description
SkipHyperlink_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
SkipHyperlink_facets_DisplayName=Facets Map
SkipHyperlink_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
SkipHyperlink_family_DisplayName=Component Family
SkipHyperlink_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
SkipHyperlink_id_DisplayName=Component Identifier
SkipHyperlink_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
SkipHyperlink_immediate_DisplayName=Immediate Action
SkipHyperlink_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
SkipHyperlink_parent_DisplayName=Parent Component
SkipHyperlink_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
SkipHyperlink_rendered_DisplayName=Rendered Flag
SkipHyperlink_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
SkipHyperlink_rendererType_DisplayName=Renderer Type
SkipHyperlink_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
SkipHyperlink_rendersChildren_DisplayName=Renders Children
SkipHyperlink_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
SkipHyperlink_styleClass_DisplayName=CSS Style Class(es)
SkipHyperlink_style_Description=CSS style(s) to be applied when this component is rendered.
SkipHyperlink_style_DisplayName=CSS Style(s)
SkipHyperlink_tabIndex_Description=The position of this component in the tabbing order sequence
SkipHyperlink_tabIndex_DisplayName=Tab Index
SkipHyperlink_value_Description=The current value of this component.
SkipHyperlink_value_DisplayName=Value

# StaticText
StaticText_Description=Outputs text, including HTML markup
StaticText_DisplayName=Static Text
StaticText_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
StaticText_attributes_DisplayName=Attributes Map
StaticText_childCount_Description=The number of child components associated with this component.
StaticText_childCount_DisplayName=Child Component Count
StaticText_children_Description=A mutable List of the child components associated with this component.
StaticText_children_DisplayName=Child Component List
StaticText_converter_Description=Converter instance registered with this component.
StaticText_converter_DisplayName=Converter
StaticText_escape_Description=Escape the text so it won't be interpreted by the browser as HTML markup
StaticText_escape_DisplayName=Escape
StaticText_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
StaticText_facets_DisplayName=Facets Map
StaticText_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
StaticText_family_DisplayName=Component Family
StaticText_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
StaticText_id_DisplayName=Component Identifier
StaticText_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
StaticText_localValue_DisplayName=Local Value
StaticText_onClick_Description=Scripting code executed when a mouse click occurs over this component.
StaticText_onClick_DisplayName=Click Script
StaticText_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
StaticText_onDblClick_DisplayName=Double Click Script
StaticText_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
StaticText_onMouseDown_DisplayName=Mouse Down Script
StaticText_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
StaticText_onMouseMove_DisplayName=Mouse Move Script
StaticText_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
StaticText_onMouseOut_DisplayName=Mouse Out Script
StaticText_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
StaticText_onMouseOver_DisplayName=Mouse In Script
StaticText_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
StaticText_onMouseUp_DisplayName=Mouse Up Script
StaticText_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
StaticText_parent_DisplayName=Parent Component
StaticText_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
StaticText_rendered_DisplayName=Rendered Flag
StaticText_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
StaticText_rendererType_DisplayName=Renderer Type
StaticText_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
StaticText_rendersChildren_DisplayName=Renders Children
StaticText_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
StaticText_styleClass_DisplayName=CSS Style Class(es)
StaticText_style_Description=CSS style(s) to be applied when this component is rendered.
StaticText_style_DisplayName=CSS Style(s)
StaticText_text_Description=The text value of this component
StaticText_text_DisplayName=Text
StaticText_toolTip_Description=Display the text as a tooltip for this component
StaticText_toolTip_DisplayName=Tool Tip
StaticText_value_Description=The current value of this component.
StaticText_value_DisplayName=Value
StaticText_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
StaticText_visible_DisplayName=Visible

# TabSet
TabSet_Description=A container for a set of Tab components
TabSet_DisplayName=Tab Set
TabSet_actionListener_Description=Method binding representing a method that receives action from this component.
TabSet_actionListener_DisplayName=Action Listener
TabSet_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
TabSet_attributes_DisplayName=Attributes Map
TabSet_childCount_Description=The number of child components associated with this component.
TabSet_childCount_DisplayName=Child Component Count
TabSet_children_Description=A mutable List of the child components associated with this component.
TabSet_children_DisplayName=Child Component List
TabSet_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
TabSet_facets_DisplayName=Facets Map
TabSet_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
TabSet_family_DisplayName=Component Family
TabSet_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
TabSet_id_DisplayName=Component Identifier
TabSet_lite_Description=Use in conjunction with the mini property to display tabs that have a light weight appearance
TabSet_lite_DisplayName=Lightweight Tab Set
TabSet_mini_Description=Specify "true" if this TabSet should have the mini style
TabSet_mini_DisplayName=Mini
TabSet_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
TabSet_parent_DisplayName=Parent Component
TabSet_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
TabSet_rendered_DisplayName=Rendered Flag
TabSet_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
TabSet_rendererType_DisplayName=Renderer Type
TabSet_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
TabSet_rendersChildren_DisplayName=Renders Children
TabSet_selected_Description=The id of the selected tab
TabSet_selected_DisplayName=Selected
TabSet_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TabSet_styleClass_DisplayName=CSS Style Class(es)
TabSet_style_Description=CSS style(s) to be applied when this component is rendered.
TabSet_style_DisplayName=CSS Style(s)
TabSet_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TabSet_visible_DisplayName=Visible

# Tab
Tab_Description=A single tab specified as part of a TabSet component
Tab_DisplayName=Tab
Tab_actionListener_Description=Method binding invoked when an action occurs on this, and possibly other, components
Tab_actionListener_DisplayName=Action Listener
Tab_action_Description=Method binding invoked to process an action on the component
Tab_action_DisplayName=Action
Tab_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Tab_attributes_DisplayName=Attributes Map
Tab_childCount_Description=The number of child components associated with this component.
Tab_childCount_DisplayName=Child Component Count
Tab_children_Description=A mutable List of the child components associated with this component.
Tab_children_DisplayName=Child Component List
Tab_disabled_Description=Disables the component and prevents its value from being submitted
Tab_disabled_DisplayName=Disabled
Tab_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Tab_facets_DisplayName=Facets Map
Tab_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Tab_family_DisplayName=Component Family
Tab_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Tab_id_DisplayName=Component Identifier
Tab_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
Tab_immediate_DisplayName=Immediate Action
Tab_onBlur_Description=Scripting code executed when this element loses focus.
Tab_onBlur_DisplayName=Blur Script
Tab_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Tab_onClick_DisplayName=Click Script
Tab_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Tab_onDblClick_DisplayName=Double Click Script
Tab_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Tab_onFocus_DisplayName=Focus Script
Tab_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Tab_onKeyDown_DisplayName=Key Down Script
Tab_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Tab_onKeyPress_DisplayName=Key Press Script
Tab_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Tab_onKeyUp_DisplayName=Key Up Script
Tab_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Tab_onMouseDown_DisplayName=Mouse Down Script
Tab_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Tab_onMouseMove_DisplayName=Mouse Move Script
Tab_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Tab_onMouseOut_DisplayName=Mouse Out Script
Tab_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Tab_onMouseOver_DisplayName=Mouse In Script
Tab_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Tab_onMouseUp_DisplayName=Mouse Up Script
Tab_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Tab_parent_DisplayName=Parent Component
Tab_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Tab_rendered_DisplayName=Rendered Flag
Tab_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Tab_rendererType_DisplayName=Renderer Type
Tab_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Tab_rendersChildren_DisplayName=Renders Children
Tab_selectedChildId_Description=The identifier of the selected tab child, if this tab has children
Tab_selectedChildId_DisplayName=selectedChildId
Tab_shape_Description=The shape of the hot spot on the screen for use in client-side image maps
Tab_shape_DisplayName=Shape
Tab_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Tab_styleClass_DisplayName=CSS Style Class(es)
Tab_style_Description=CSS style(s) to be applied when this component is rendered.
Tab_style_DisplayName=CSS Style(s)
Tab_tabIndex_Description=The position of this component in the tabbing order sequence
Tab_tabIndex_DisplayName=Tab Index
Tab_target_Description=The window or frame target in which to display the resource
Tab_target_DisplayName=Target
Tab_text_Description=The text description of the hyperlink
Tab_text_DisplayName=text
Tab_toolTip_Description=Display the text as a tooltip for this component
Tab_toolTip_DisplayName=Tool Tip
Tab_type_Description=The MIME content type of the resource specified by this component.
Tab_type_DisplayName=Type
Tab_urlLang_Description=The language code of the resource designated by this hyperlink.
Tab_urlLang_DisplayName=URL Lang
Tab_url_Description=Resource path (may be absolute, relative or context relative)
Tab_url_DisplayName=URL
Tab_value_Description=
Tab_value_DisplayName=
Tab_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Tab_visible_DisplayName=Visible

# TableActions
TableActions_Description=Render actions of a table.
TableActions_DisplayName=Actions
TableActions_abbr_Description=An abbreviated version of the cell's content
TableActions_abbr_DisplayName=Abbreviation for Header Cell
TableActions_actionsBottom_Description=Flag indicating this component should render actions at the bottom of the table. The default renders action for the top of the table.
TableActions_actionsBottom_DisplayName=Is Actions Bottom
TableActions_align_Description=Sets the horizontal alignment (left, right, justify, center) for the cell contents
TableActions_align_DisplayName=Horizontal Alignment
TableActions_attributes_Description=
TableActions_attributes_DisplayName=
TableActions_axis_Description=Provides a method for categorizing cells
TableActions_axis_DisplayName=Category of Header Cell
TableActions_bgColor_Description=
TableActions_bgColor_DisplayName=Cell Background Color
TableActions_charOff_Description=
TableActions_charOff_DisplayName=Alignment Character Offset
TableActions_char_Description=
TableActions_char_DisplayName=Alignment Character
TableActions_childCount_Description=
TableActions_childCount_DisplayName=
TableActions_children_Description=
TableActions_children_DisplayName=
TableActions_colSpan_Description=The number of columns spanned by a cell
TableActions_colSpan_DisplayName=Columns Spanned By the Cell
TableActions_extraHtml_Description=Extra HTML to be appended to the tag output by this renderer.
TableActions_extraHtml_DisplayName=Extra HTML
TableActions_facets_Description=
TableActions_facets_DisplayName=
TableActions_family_Description=
TableActions_family_DisplayName=
TableActions_headers_Description=Space separated list of header cell ID values
TableActions_headers_DisplayName=List of Header Cells for Current Cell
TableActions_height_Description=Set the cell height in pixels (deprecated in HTML 4.0)
TableActions_height_DisplayName=Height
TableActions_id_Description=
TableActions_id_DisplayName=
TableActions_noWrap_Description=Disable word wrapping (deprecated in HTML 4.0)
TableActions_noWrap_DisplayName=Suppress Word Wrap
TableActions_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TableActions_onClick_DisplayName=Click Script
TableActions_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TableActions_onDblClick_DisplayName=Double Click Script
TableActions_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TableActions_onKeyDown_DisplayName=Key Down Script
TableActions_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TableActions_onKeyPress_DisplayName=Key Press Script
TableActions_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TableActions_onKeyUp_DisplayName=Key Up Script
TableActions_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TableActions_onMouseDown_DisplayName=Mouse Down Script
TableActions_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TableActions_onMouseMove_DisplayName=Mouse Move Script
TableActions_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TableActions_onMouseOut_DisplayName=Mouse Out Script
TableActions_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TableActions_onMouseOver_DisplayName=Mouse In Script
TableActions_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TableActions_onMouseUp_DisplayName=Mouse Up Script
TableActions_parent_Description=
TableActions_parent_DisplayName=
TableActions_rendered_Description=
TableActions_rendered_DisplayName=Rendered Flag
TableActions_rendererType_Description=
TableActions_rendererType_DisplayName=
TableActions_rendersChildren_Description=
TableActions_rendersChildren_DisplayName=
TableActions_rowSpan_Description=The number of rows spanned by a cell
TableActions_rowSpan_DisplayName=Rows Spanned By the Cell
TableActions_scope_Description=Indicates that information in a cell is also acting as a header
TableActions_scope_DisplayName=Cells Covered By Header Cell
TableActions_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TableActions_styleClass_DisplayName=CSS Style Class(es)
TableActions_style_Description=CSS style(s) to be applied when this component is rendered.
TableActions_style_DisplayName=CSS Style(s)
TableActions_toolTip_Description=Display the text as a tooltip for this component
TableActions_toolTip_DisplayName=Tool Tip
TableActions_valign_Description=Vertical alignment (top, middle, bottom) for the content of each cell in the column
TableActions_valign_DisplayName=Vertical Position
TableActions_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TableActions_visible_DisplayName=Visible
TableActions_width_Description=Set the width of the column in either pixels or percent(deprecated in HTML 4.0)
TableActions_width_DisplayName=Width

# TableColumn
TableColumn_Description=Render the column of a table.
TableColumn_DisplayName=Column
TableColumn_abbr_Description=An abbreviated version of the cell's content
TableColumn_abbr_DisplayName=Abbreviation for Header Cell
TableColumn_alignKey_Description=Identifies a FieldKey for a data element to use for cell data alignment
TableColumn_alignKey_DisplayName=Horizontal Alignment Key
TableColumn_align_Description=Sets the horizontal alignment (left, right, justify, center) for the cell contents
TableColumn_align_DisplayName=Horizontal Alignment
TableColumn_attributes_Description=
TableColumn_attributes_DisplayName=
TableColumn_axis_Description=Provides a method for categorizing cells
TableColumn_axis_DisplayName=Category of Header Cell
TableColumn_bgColor_Description=
TableColumn_bgColor_DisplayName=Cell Background Color
TableColumn_charOff_Description=
TableColumn_charOff_DisplayName=Alignment Character Offset
TableColumn_char_Description=
TableColumn_char_DisplayName=Alignment Character
TableColumn_childCount_Description=
TableColumn_childCount_DisplayName=
TableColumn_children_Description=
TableColumn_children_DisplayName=
TableColumn_colSpan_Description=The number of columns spanned by a cell
TableColumn_colSpan_DisplayName=Columns Spanned By the Cell
TableColumn_descending_Description=Define a user's first click on a column header to sort descending
TableColumn_descending_DisplayName=Is Descending
TableColumn_embeddedActions_Description=Indicates that a column includes more than one embedded action link
TableColumn_embeddedActions_DisplayName=Is Embedded Actions
TableColumn_emptyCell_Description=Show a theme specific image when the cell is empty or not applicable
TableColumn_emptyCell_DisplayName=Empty Cell
TableColumn_extraFooterHtml_Description=HTML that is appended to the TR element for the column footer
TableColumn_extraFooterHtml_DisplayName=Extra Footer HTML
TableColumn_extraHeaderHtml_Description=HTML that is appended to the TR element for the column header
TableColumn_extraHeaderHtml_DisplayName=Extra Header HTML
TableColumn_extraTableFooterHtml_Description=HTML that is appended to the TR element for the table column header
TableColumn_extraTableFooterHtml_DisplayName=Extra Table Footer HTML
TableColumn_facets_Description=
TableColumn_facets_DisplayName=
TableColumn_family_Description=
TableColumn_family_DisplayName=
TableColumn_footerText_Description=The text to be displayed in the column footer.
TableColumn_footerText_DisplayName=Footer Text
TableColumn_headerText_Description=The text to be displayed in the column header.
TableColumn_headerText_DisplayName=header Text
TableColumn_headers_Description=Space separated list of header cell ID values
TableColumn_headers_DisplayName=List of Header Cells for Current Cell
TableColumn_height_Description=Set the cell height in pixels (deprecated in HTML 4.0)
TableColumn_height_DisplayName=Height
TableColumn_id_Description=
TableColumn_id_DisplayName=
TableColumn_noWrap_Description=Disable word wrapping (deprecated in HTML 4.0)
TableColumn_noWrap_DisplayName=Suppress Word Wrap
TableColumn_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TableColumn_onClick_DisplayName=Click Script
TableColumn_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TableColumn_onDblClick_DisplayName=Double Click Script
TableColumn_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TableColumn_onKeyDown_DisplayName=Key Down Script
TableColumn_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TableColumn_onKeyPress_DisplayName=Key Press Script
TableColumn_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TableColumn_onKeyUp_DisplayName=Key Up Script
TableColumn_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TableColumn_onMouseDown_DisplayName=Mouse Down Script
TableColumn_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TableColumn_onMouseMove_DisplayName=Mouse Move Script
TableColumn_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TableColumn_onMouseOut_DisplayName=Mouse Out Script
TableColumn_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TableColumn_onMouseOver_DisplayName=Mouse In Script
TableColumn_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TableColumn_onMouseUp_DisplayName=Mouse Up Script
TableColumn_parent_Description=
TableColumn_parent_DisplayName=
TableColumn_rendered_Description=
TableColumn_rendered_DisplayName=Rendered Flag
TableColumn_rendererType_Description=
TableColumn_rendererType_DisplayName=
TableColumn_rendersChildren_Description=
TableColumn_rendersChildren_DisplayName=
TableColumn_rowHeader_Description=Define the cells in the column are acting as row headers
TableColumn_rowHeader_DisplayName=Row Header
TableColumn_rowSpan_Description=The number of rows spanned by a cell
TableColumn_rowSpan_DisplayName=Rows Spanned By the Cell
TableColumn_scope_Description=Indicates that information in a cell is also acting as a header
TableColumn_scope_DisplayName=Cells Covered By Header Cell
TableColumn_selectId_Description=Set the id of the select component (radio button or checkbox) for this column
TableColumn_selectId_DisplayName=Select Component Id
TableColumn_severity_Description=Applies only when an alarm component is used as the column content
TableColumn_severity_DisplayName=Severity
TableColumn_sortIcon_Description=The theme identifier to use for the sort button that is displayed in the column header. Use this attribute to override the default image.
TableColumn_sortIcon_DisplayName=Sort Icon
TableColumn_sortImageURL_Description=Absolute or relative URL to the image used for the sort button that is displayed in the column header.
TableColumn_sortImageURL_DisplayName=Sort Image URL
TableColumn_sort_Description=Specify a FieldKey id or SortCriteria to sort the contents of the table
TableColumn_sort_DisplayName=Sort Key
TableColumn_spacerColumn_Description=Identify the column to be used for spacing
TableColumn_spacerColumn_DisplayName=Spacer Column
TableColumn_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TableColumn_styleClass_DisplayName=CSS Style Class(es)
TableColumn_style_Description=CSS style(s) to be applied when this component is rendered.
TableColumn_style_DisplayName=CSS Style(s)
TableColumn_tableFooterText_Description=The text to be displayed in the table column footer
TableColumn_tableFooterText_DisplayName=Table Footer Text
TableColumn_toolTip_Description=Display the text as a tooltip for this component
TableColumn_toolTip_DisplayName=Tool Tip
TableColumn_valign_Description=Vertical alignment (top, middle, bottom) for the content of each cell in the column
TableColumn_valign_DisplayName=Vertical Position
TableColumn_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TableColumn_visible_DisplayName=Visible
TableColumn_width_Description=Set the width of the column in either pixels or percent(deprecated in HTML 4.0)
TableColumn_width_DisplayName=Width

# TableFooter
TableFooter_Description=Render the footer of a table.
TableFooter_DisplayName=Footer
TableFooter_abbr_Description=An abbreviated version of the cell's content
TableFooter_abbr_DisplayName=Abbreviation for Header Cell
TableFooter_align_Description=Sets the horizontal alignment (left, right, justify, center) for the cell contents
TableFooter_align_DisplayName=Horizontal Alignment
TableFooter_attributes_Description=
TableFooter_attributes_DisplayName=
TableFooter_axis_Description=Provides a method for categorizing cells
TableFooter_axis_DisplayName=Category of Header Cell
TableFooter_bgColor_Description=
TableFooter_bgColor_DisplayName=Cell Background Color
TableFooter_charOff_Description=
TableFooter_charOff_DisplayName=Alignment Character Offset
TableFooter_char_Description=
TableFooter_char_DisplayName=Alignment Character
TableFooter_childCount_Description=
TableFooter_childCount_DisplayName=
TableFooter_children_Description=
TableFooter_children_DisplayName=
TableFooter_colSpan_Description=The number of columns spanned by a cell
TableFooter_colSpan_DisplayName=Columns Spanned By the Cell
TableFooter_extraHtml_Description=Extra HTML to be appended to the tag output by this renderer.
TableFooter_extraHtml_DisplayName=Extra HTML
TableFooter_facets_Description=
TableFooter_facets_DisplayName=
TableFooter_family_Description=
TableFooter_family_DisplayName=
TableFooter_groupFooter_Description=Flag indicating this component should render a group footer. The default renders a column footer. This should not be used if tableColumnFooter or tableFooter are used.
TableFooter_groupFooter_DisplayName=Is Group Footer
TableFooter_headers_Description=Space separated list of header cell ID values
TableFooter_headers_DisplayName=List of Header Cells for Current Cell
TableFooter_height_Description=Set the cell height in pixels (deprecated in HTML 4.0)
TableFooter_height_DisplayName=Height
TableFooter_id_Description=
TableFooter_id_DisplayName=
TableFooter_noWrap_Description=Disable word wrapping (deprecated in HTML 4.0)
TableFooter_noWrap_DisplayName=Suppress Word Wrap
TableFooter_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TableFooter_onClick_DisplayName=Click Script
TableFooter_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TableFooter_onDblClick_DisplayName=Double Click Script
TableFooter_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TableFooter_onKeyDown_DisplayName=Key Down Script
TableFooter_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TableFooter_onKeyPress_DisplayName=Key Press Script
TableFooter_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TableFooter_onKeyUp_DisplayName=Key Up Script
TableFooter_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TableFooter_onMouseDown_DisplayName=Mouse Down Script
TableFooter_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TableFooter_onMouseMove_DisplayName=Mouse Move Script
TableFooter_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TableFooter_onMouseOut_DisplayName=Mouse Out Script
TableFooter_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TableFooter_onMouseOver_DisplayName=Mouse In Script
TableFooter_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TableFooter_onMouseUp_DisplayName=Mouse Up Script
TableFooter_parent_Description=
TableFooter_parent_DisplayName=
TableFooter_rendered_Description=
TableFooter_rendered_DisplayName=Rendered Flag
TableFooter_rendererType_Description=
TableFooter_rendererType_DisplayName=
TableFooter_rendersChildren_Description=
TableFooter_rendersChildren_DisplayName=
TableFooter_rowSpan_Description=The number of rows spanned by a cell
TableFooter_rowSpan_DisplayName=Rows Spanned By the Cell
TableFooter_scope_Description=Indicates that information in a cell is also acting as a header
TableFooter_scope_DisplayName=Cells Covered By Header Cell
TableFooter_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TableFooter_styleClass_DisplayName=CSS Style Class(es)
TableFooter_style_Description=CSS style(s) to be applied when this component is rendered.
TableFooter_style_DisplayName=CSS Style(s)
TableFooter_tableColumnFooter_Description=Flag indicating this component should render a table column footer. The default renders a column footer. This should not be used if groupFooter or tableFooter are used.
TableFooter_tableColumnFooter_DisplayName=Is Table Column Footer
TableFooter_tableFooter_Description=Flag indicating this component should render a table footer. The default renders a column footer. This should not be used if groupFooter or tableColumnFooter are used.
TableFooter_tableFooter_DisplayName=Is Table Footer
TableFooter_toolTip_Description=Display the text as a tooltip for this component
TableFooter_toolTip_DisplayName=Tool Tip
TableFooter_valign_Description=Vertical alignment (top, middle, bottom) for the content of each cell in the column
TableFooter_valign_DisplayName=Vertical Position
TableFooter_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TableFooter_visible_DisplayName=Visible
TableFooter_width_Description=Set the width of the column in either pixels or percent(deprecated in HTML 4.0)
TableFooter_width_DisplayName=Width

# TableHeader
TableHeader_Description=Render the header of a table.
TableHeader_DisplayName=Header
TableHeader_abbr_Description=
TableHeader_abbr_DisplayName=Abbreviation for Header Cell
TableHeader_align_Description=Sets the horizontal alignment (left, right, justify, center) for the cell contents
TableHeader_align_DisplayName=Horizontal Alignment
TableHeader_attributes_Description=
TableHeader_attributes_DisplayName=
TableHeader_axis_Description=
TableHeader_axis_DisplayName=Category of Header Cell
TableHeader_bgColor_Description=
TableHeader_bgColor_DisplayName=Cell Background Color
TableHeader_charOff_Description=
TableHeader_charOff_DisplayName=Alignment Character Offset
TableHeader_char_Description=
TableHeader_char_DisplayName=Alignment Character
TableHeader_childCount_Description=
TableHeader_childCount_DisplayName=
TableHeader_children_Description=
TableHeader_children_DisplayName=
TableHeader_colSpan_Description=The number of columns spanned by a cell
TableHeader_colSpan_DisplayName=Columns Spanned By the Cell
TableHeader_extraHtml_Description=Extra HTML to be appended to the tag output by this renderer.
TableHeader_extraHtml_DisplayName=Extra HTML
TableHeader_facets_Description=
TableHeader_facets_DisplayName=
TableHeader_family_Description=
TableHeader_family_DisplayName=
TableHeader_groupHeader_Description=Flag indicating this component should render a group header. The default renders a column header. This should not be used if selectHeader or sortHeader are used.
TableHeader_groupHeader_DisplayName=Is Group Header
TableHeader_headers_Description=Space separated list of header cell ID values
TableHeader_headers_DisplayName=List of Header Cells for Current Cell
TableHeader_height_Description=Set the cell height in pixels (deprecated in HTML 4.0)
TableHeader_height_DisplayName=Height
TableHeader_id_Description=
TableHeader_id_DisplayName=
TableHeader_noWrap_Description=Disable word wrapping (deprecated in HTML 4.0)
TableHeader_noWrap_DisplayName=Suppress Word Wrap
TableHeader_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TableHeader_onClick_DisplayName=Click Script
TableHeader_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TableHeader_onDblClick_DisplayName=Double Click Script
TableHeader_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TableHeader_onKeyDown_DisplayName=Key Down Script
TableHeader_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TableHeader_onKeyPress_DisplayName=Key Press Script
TableHeader_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TableHeader_onKeyUp_DisplayName=Key Up Script
TableHeader_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TableHeader_onMouseDown_DisplayName=Mouse Down Script
TableHeader_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TableHeader_onMouseMove_DisplayName=Mouse Move Script
TableHeader_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TableHeader_onMouseOut_DisplayName=Mouse Out Script
TableHeader_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TableHeader_onMouseOver_DisplayName=Mouse In Script
TableHeader_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TableHeader_onMouseUp_DisplayName=Mouse Up Script
TableHeader_parent_Description=
TableHeader_parent_DisplayName=
TableHeader_rendered_Description=
TableHeader_rendered_DisplayName=Rendered Flag
TableHeader_rendererType_Description=
TableHeader_rendererType_DisplayName=
TableHeader_rendersChildren_Description=
TableHeader_rendersChildren_DisplayName=
TableHeader_rowSpan_Description=The number of rows spanned by a cell
TableHeader_rowSpan_DisplayName=Rows Spanned By the Cell
TableHeader_scope_Description=Indicates that information in a cell is also acting as a header
TableHeader_scope_DisplayName=Cells Covered By Header Cell
TableHeader_selectHeader_Description=Flag indicating this component should render a selection column header. The default renders a column header. This should not be used if groupHeader or sortHeader are used.
TableHeader_selectHeader_DisplayName=Is Select Header
TableHeader_sortHeader_Description=Flag indicating this component should render a sortable column header. The default renders a column header. This should not be used if groupHeader or selectHeader are used.
TableHeader_sortHeader_DisplayName=Is Sort Header
TableHeader_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TableHeader_styleClass_DisplayName=CSS Style Class(es)
TableHeader_style_Description=CSS style(s) to be applied when this component is rendered.
TableHeader_style_DisplayName=CSS Style(s)
TableHeader_toolTip_Description=Display the text as a tooltip for this component
TableHeader_toolTip_DisplayName=Tool Tip
TableHeader_valign_Description=Vertical alignment (top, middle, bottom) for the content of each cell in the column
TableHeader_valign_DisplayName=Vertical Position
TableHeader_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TableHeader_visible_DisplayName=Visible
TableHeader_width_Description=Set the width of the column in either pixels or percent(deprecated in HTML 4.0)
TableHeader_width_DisplayName=Width

# TablePanels
TablePanels_Description=Render embedded panels of a table.
TablePanels_DisplayName=Panels
TablePanels_abbr_Description=An abbreviated version of the cell's content
TablePanels_abbr_DisplayName=Abbreviation for Header Cell
TablePanels_align_Description=Sets the horizontal alignment (left, right, justify, center) for the cell contents
TablePanels_align_DisplayName=Horizontal Alignment
TablePanels_attributes_Description=
TablePanels_attributes_DisplayName=
TablePanels_axis_Description=Provides a method for categorizing cells
TablePanels_axis_DisplayName=Category of Header Cell
TablePanels_bgColor_Description=
TablePanels_bgColor_DisplayName=Cell Background Color
TablePanels_charOff_Description=
TablePanels_charOff_DisplayName=Alignment Character Offset
TablePanels_char_Description=
TablePanels_char_DisplayName=Alignment Character
TablePanels_childCount_Description=
TablePanels_childCount_DisplayName=
TablePanels_children_Description=
TablePanels_children_DisplayName=
TablePanels_colSpan_Description=The number of columns spanned by a cell
TablePanels_colSpan_DisplayName=Columns Spanned By the Cell
TablePanels_extraHtml_Description=Extra HTML to be appended to the tag output by this renderer.
TablePanels_extraHtml_DisplayName=Extra HTML
TablePanels_facets_Description=
TablePanels_facets_DisplayName=
TablePanels_family_Description=
TablePanels_family_DisplayName=
TablePanels_filterPanel_Description=Flag indicating this component should also render a filter panel, in addition to the sort and preferences panels. The default renders a sort panel.
TablePanels_filterPanel_DisplayName=Is Filter Panel
TablePanels_headers_Description=Space separated list of header cell ID values
TablePanels_headers_DisplayName=List of Header Cells for Current Cell
TablePanels_height_Description=Set the cell height in pixels (deprecated in HTML 4.0)
TablePanels_height_DisplayName=Height
TablePanels_id_Description=
TablePanels_id_DisplayName=
TablePanels_noWrap_Description=Disable word wrapping (deprecated in HTML 4.0)
TablePanels_noWrap_DisplayName=Suppress Word Wrap
TablePanels_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TablePanels_onClick_DisplayName=Click Script
TablePanels_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TablePanels_onDblClick_DisplayName=Double Click Script
TablePanels_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TablePanels_onKeyDown_DisplayName=Key Down Script
TablePanels_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TablePanels_onKeyPress_DisplayName=Key Press Script
TablePanels_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TablePanels_onKeyUp_DisplayName=Key Up Script
TablePanels_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TablePanels_onMouseDown_DisplayName=Mouse Down Script
TablePanels_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TablePanels_onMouseMove_DisplayName=Mouse Move Script
TablePanels_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TablePanels_onMouseOut_DisplayName=Mouse Out Script
TablePanels_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TablePanels_onMouseOver_DisplayName=Mouse In Script
TablePanels_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TablePanels_onMouseUp_DisplayName=Mouse Up Script
TablePanels_parent_Description=
TablePanels_parent_DisplayName=
TablePanels_preferencesPanel_Description=Flag indicating this component should also render a preferences panel, in addition to the sort and filter panels. The default renders a sort panel.
TablePanels_preferencesPanel_DisplayName=Is Preferences Panel
TablePanels_rendered_Description=
TablePanels_rendered_DisplayName=Rendered Flag
TablePanels_rendererType_Description=
TablePanels_rendererType_DisplayName=
TablePanels_rendersChildren_Description=
TablePanels_rendersChildren_DisplayName=
TablePanels_rowSpan_Description=The number of rows spanned by a cell
TablePanels_rowSpan_DisplayName=Rows Spanned By the Cell
TablePanels_scope_Description=Indicates that information in a cell is also acting as a header
TablePanels_scope_DisplayName=Cells Covered By Header Cell
TablePanels_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TablePanels_styleClass_DisplayName=CSS Style Class(es)
TablePanels_style_Description=CSS style(s) to be applied when this component is rendered.
TablePanels_style_DisplayName=CSS Style(s)
TablePanels_toolTip_Description=Display the text as a tooltip for this component
TablePanels_toolTip_DisplayName=Tool Tip
TablePanels_valign_Description=Vertical alignment (top, middle, bottom) for the content of each cell in the column
TablePanels_valign_DisplayName=Vertical Position
TablePanels_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TablePanels_visible_DisplayName=Visible
TablePanels_width_Description=Set the width of the column in either pixels or percent(deprecated in HTML 4.0)
TablePanels_width_DisplayName=Width

# TableRowGroup
TableRowGroup_Description=Render a group of rows for a table.
TableRowGroup_DisplayName=Row Group
TableRowGroup_aboveColumnFooter_Description=Display the group footer bar above the column footer bar
TableRowGroup_aboveColumnFooter_DisplayName=Is Above Column Footer
TableRowGroup_aboveColumnHeader_Description=Display the group header bar above the column headers bar
TableRowGroup_aboveColumnHeader_DisplayName=Is Above Column Header
TableRowGroup_align_Description=Sets the horizontal alignment (left, right, justify, center) for the cell contents
TableRowGroup_align_DisplayName=Horizontal Alignment Cells In Group
TableRowGroup_attributes_Description=
TableRowGroup_attributes_DisplayName=
TableRowGroup_bgColor_Description=
TableRowGroup_bgColor_DisplayName=Row Background Color
TableRowGroup_charOff_Description=
TableRowGroup_charOff_DisplayName=Alignment Character Offset
TableRowGroup_char_Description=
TableRowGroup_char_DisplayName=Alignment Character For Cells
TableRowGroup_childCount_Description=
TableRowGroup_childCount_DisplayName=
TableRowGroup_children_Description=
TableRowGroup_children_DisplayName=
TableRowGroup_collapsed_Description=Initially display the row group collapsed so that only the header row is visible
TableRowGroup_collapsed_DisplayName=Is Collapsed
TableRowGroup_emptyDataMsg_Description=The text to be displayed when the table does not contain data
TableRowGroup_emptyDataMsg_DisplayName=Empty Data Message
TableRowGroup_extraFooterHtml_Description=HTML that is appended to the TR element for the group footer
TableRowGroup_extraFooterHtml_DisplayName=Extra Footer HTML
TableRowGroup_extraHeaderHtml_Description=HTML that is appended to the TR element for the group header
TableRowGroup_extraHeaderHtml_DisplayName=Extra Header HTML
TableRowGroup_facets_Description=
TableRowGroup_facets_DisplayName=
TableRowGroup_family_Description=
TableRowGroup_family_DisplayName=
TableRowGroup_first_Description=Specify which row should be displayed first (only when the table is paginated)
TableRowGroup_first_DisplayName=First Row
TableRowGroup_footerText_Description=The text to be displayed in the group footer.
TableRowGroup_footerText_DisplayName=Footer Text
TableRowGroup_groupToggleButton_Description=Display a button in the group header to allow users to collapse and expand the group of rows
TableRowGroup_groupToggleButton_DisplayName=Show Group Toggle Button
TableRowGroup_headerText_Description=The text to be displayed in the group header.
TableRowGroup_headerText_DisplayName=header Text
TableRowGroup_id_Description=
TableRowGroup_id_DisplayName=
TableRowGroup_multipleColumnFooters_Description=Show all the footers for columns that are nested in the table row group
TableRowGroup_multipleColumnFooters_DisplayName=Show Multiple Column Footers
TableRowGroup_multipleTableColumnFooters_Description=Show all the footers for columns that are nested in the table
TableRowGroup_multipleTableColumnFooters_DisplayName=Show Nested Table Column Footers
TableRowGroup_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TableRowGroup_onClick_DisplayName=Click Script
TableRowGroup_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TableRowGroup_onDblClick_DisplayName=Double Click Script
TableRowGroup_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TableRowGroup_onKeyDown_DisplayName=Key Down Script
TableRowGroup_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TableRowGroup_onKeyPress_DisplayName=Key Press Script
TableRowGroup_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TableRowGroup_onKeyUp_DisplayName=Key Up Script
TableRowGroup_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TableRowGroup_onMouseDown_DisplayName=Mouse Down Script
TableRowGroup_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TableRowGroup_onMouseMove_DisplayName=Mouse Move Script
TableRowGroup_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TableRowGroup_onMouseOut_DisplayName=Mouse Out Script
TableRowGroup_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TableRowGroup_onMouseOver_DisplayName=Mouse In Script
TableRowGroup_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TableRowGroup_onMouseUp_DisplayName=Mouse Up Script
TableRowGroup_parent_Description=
TableRowGroup_parent_DisplayName=
TableRowGroup_rendered_Description=
TableRowGroup_rendered_DisplayName=Rendered Flag
TableRowGroup_rendererType_Description=
TableRowGroup_rendererType_DisplayName=
TableRowGroup_rendersChildren_Description=
TableRowGroup_rendersChildren_DisplayName=
TableRowGroup_rows_Description=The number of rows per page</span> to be displayed for a paginated table. The default value is 25 per page.
TableRowGroup_rows_DisplayName=Paginated rows
TableRowGroup_selectMultipleToggleButton_Description=Display a button in the group header to toggle selection of all rows in a group
TableRowGroup_selectMultipleToggleButton_DisplayName=Show Select Multiple Button
TableRowGroup_selected_Description=Flag indicating that the current row is selected. If the value is set to true, the row will appear highlighted.
TableRowGroup_selected_DisplayName=Is Selected
TableRowGroup_sourceData_Description=Specify the data source for the table using a JavaServer Faces EL expression
TableRowGroup_sourceData_DisplayName=Source Data
TableRowGroup_sourceVar_Description=Name of a request attribute that can be used to access data in the current model row
TableRowGroup_sourceVar_DisplayName=Source Variable
TableRowGroup_styleClasses_Description=Specify a list of CSS style classes to apply to the rows of the group. You can apply all the styles in the list to each row by separating the class names with commas.
TableRowGroup_styleClasses_DisplayName=CSS Style Class(es)
TableRowGroup_tableDataFilter_Description=Specify a filter bean (com.sun.data.provider.TableDataFilter) for the contents of the table using a JavaServer Faces EL expression
TableRowGroup_tableDataFilter_DisplayName=Table Data Filter
TableRowGroup_tableDataSorter_Description=Specify a sort bean (com.sun.data.provider.TableDataSorter) for the contents of the table using a JavaServer Faces EL expression
TableRowGroup_tableDataSorter_DisplayName=Table Data Sorter
TableRowGroup_toolTip_Description=Display the text as a tooltip for this component
TableRowGroup_toolTip_DisplayName=Tool Tip
TableRowGroup_valign_Description=Vertical alignment (top, middle, bottom) for the content of each cell in the column
TableRowGroup_valign_DisplayName=Vertical Alignment Of Cells In Group
TableRowGroup_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TableRowGroup_visible_DisplayName=Visible

# Table
Table_Description=A table of data
Table_DisplayName=Table
Table_align_Description=Sets the alignment of the table (left, right or center) on the page (deprecated in HTML 4.0)
Table_align_DisplayName=Table Alignment
Table_attributes_Description=
Table_attributes_DisplayName=
Table_augmentTitle_Description=Display additional information (number of rows, range of rows) as part of the table title
Table_augmentTitle_DisplayName=Show Augmented Title
Table_bgColor_Description=Sets the background color for the table (deprecated in HTML 4.0)
Table_bgColor_DisplayName=Table Background Color
Table_border_Description=Set the border width in pixels within the table
Table_border_DisplayName=Border Width
Table_cellPadding_Description=Sets the whitespace between the borders and the contents of a cell
Table_cellPadding_DisplayName=Spacing Within Cells
Table_cellSpacing_Description=Sets the whitespace between cells and also at the edges of the table
Table_cellSpacing_DisplayName=Spacing Between Cells
Table_childCount_Description=
Table_childCount_DisplayName=
Table_children_Description=
Table_children_DisplayName=
Table_clearSortButton_Description=Display a button to clear any sorting done after the table was initially displayed
Table_clearSortButton_DisplayName=Show Clear Sort Button
Table_deselectMultipleButtonOnClick_Description=Scripting code that is executed when the user clicks the deselect multiple button. You should use the JavaScript <code>setTimeout()</code> function to invoke the script to ensure that checkboxes are deselected immediately, instead of waiting for the script to complete.
Table_deselectMultipleButtonOnClick_DisplayName=Deselect Multiple Click Script
Table_deselectMultipleButton_Description=Display a button to deselect all currently selected rows
Table_deselectMultipleButton_DisplayName=Show Deselect Multiple Button
Table_deselectSingleButtonOnClick_Description=Scripting code that is executed when the user clicks the deselect single button. You should use the JavaScript <code>setTimeout()</code> function to invoke the script to ensure that the radio button is deselected immediately, instead of waiting for the script to complete.
Table_deselectSingleButtonOnClick_DisplayName=Deselect Single Click Script
Table_deselectSingleButton_Description=Scripting code executed when the Deselect Multiple button is pressed
Table_deselectSingleButton_DisplayName=Show Deselect Single Button
Table_extraActionBottomHtml_Description=HTML that is appended to the table Action Bar at the bottom
Table_extraActionBottomHtml_DisplayName=Extra Action (bottom) HTML
Table_extraActionTopHtml_Description=HTML that is appended to the table Action Bar at the top
Table_extraActionTopHtml_DisplayName=Extra Action (top) HTML
Table_extraFooterHtml_Description=HTML that is appended to the table footer
Table_extraFooterHtml_DisplayName=Extra Footer HTML
Table_extraPanelHtml_Description=HTML that is appended to an embedded panel in the table
Table_extraPanelHtml_DisplayName=Extra Panel HTML
Table_extraTitleHtml_Description=HTML that is appended to the title element in the table
Table_extraTitleHtml_DisplayName=Extra Title HTML
Table_facets_Description=
Table_facets_DisplayName=
Table_family_Description=
Table_family_DisplayName=
Table_filterId_Description=Fully qualified ID that represents the dropDown component used to display filter options
Table_filterId_DisplayName=Filter Component Id
Table_filterPanelFocusId_Description=The element id used to set focus when the filter panel is open.
Table_filterPanelFocusId_DisplayName=Filter Panel Focus ID
Table_filterText_Description=Text to be inserted into the table title bar when a filter is applied
Table_filterText_DisplayName=Filter Text
Table_footerText_Description=The text to be displayed in the table footer, which expands across the width of the table.
Table_footerText_DisplayName=Footer Text
Table_frame_Description=Specifies the width in pixels of the border around a table.
Table_frame_DisplayName=Outer Border
Table_hiddenSelectedRows_Description=Enable selected rows to be hidden in order to maintain state across table pages
Table_hiddenSelectedRows_DisplayName=Is Hidden Selected Rows
Table_id_Description=
Table_id_DisplayName=
Table_internalVirtualForm_Description=Force this table to use it's own virtual form
Table_internalVirtualForm_DisplayName=Is Internal Virtual Form
Table_itemsText_Description=Additional title text to describe the rows in the table
Table_itemsText_DisplayName=Items Text
Table_lite_Description=Apply a lighter visual style to the table
Table_lite_DisplayName=Light Weight Table
Table_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Table_onClick_DisplayName=Click Script
Table_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Table_onDblClick_DisplayName=Double Click Script
Table_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Table_onKeyDown_DisplayName=Key Down Script
Table_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Table_onKeyPress_DisplayName=Key Press Script
Table_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Table_onKeyUp_DisplayName=Key Up Script
Table_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Table_onMouseDown_DisplayName=Mouse Down Script
Table_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Table_onMouseMove_DisplayName=Mouse Move Script
Table_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Table_onMouseOut_DisplayName=Mouse Out Script
Table_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Table_onMouseOver_DisplayName=Mouse In Script
Table_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Table_onMouseUp_DisplayName=Mouse Up Script
Table_paginateButton_Description=Display a paginate button to enable switching between a single page and multiple pages
Table_paginateButton_DisplayName=Show Paginate Button
Table_paginationControls_Description=Display buttons to control pagination including an input field to specify a target page number
Table_paginationControls_DisplayName=Show Pagination Controls
Table_parent_Description=
Table_parent_DisplayName=
Table_preferencesPanelFocusId_Description=The element id used to set focus when the preferences panel is open.
Table_preferencesPanelFocusId_DisplayName=Preferences Panel Focus ID
Table_rendered_Description=
Table_rendered_DisplayName=Rendered Flag
Table_rendererType_Description=
Table_rendererType_DisplayName=
Table_rendersChildren_Description=
Table_rendersChildren_DisplayName=
Table_rules_Description=
Table_rules_DisplayName=Inner Borders
Table_selectMultipleButtonOnClick_Description=Scripting code executed when the user clicks the mouse on the select multiple button.
Table_selectMultipleButtonOnClick_DisplayName=Select Multiple Click Script
Table_selectMultipleButton_Description=Display a buttons to allow selection of all rows currently displayed
Table_selectMultipleButton_DisplayName=Show Select Multiple Button
Table_sortPanelFocusId_Description=The element id used to set focus when the sort panel is open.
Table_sortPanelFocusId_DisplayName=Sort Panel Focus ID
Table_sortPanelToggleButton_Description=Show the button that is used to open and close the sort panel.
Table_sortPanelToggleButton_DisplayName=Show Sort Panel Toggle Button
Table_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Table_styleClass_DisplayName=CSS Style Class(es)
Table_style_Description=CSS style(s) to be applied when this component is rendered.
Table_style_DisplayName=CSS Style(s)
Table_summary_Description=Summary text that describes the table for accessibility purposes
Table_summary_DisplayName=Purpose of Table
Table_tabIndex_Description=The position of this component in the tabbing order sequence
Table_tabIndex_DisplayName=Tab Index
Table_title_Description=The text displayed for the table title.
Table_title_DisplayName=Table Title
Table_toolTip_Description=Display the text as a tooltip for this component
Table_toolTip_DisplayName=Tool Tip
Table_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Table_visible_DisplayName=Visible
Table_width_Description=Set the width of the table on the page (deprecated in HTML 4.0)
Table_width_DisplayName=Table Width

# TemplateComponentBase
TemplateComponentBase_Description=Base component for UI components that use the templating functionality to produce their output.
TemplateComponentBase_DisplayName=Template
TemplateComponentBase_attributes_Description=
TemplateComponentBase_attributes_DisplayName=
TemplateComponentBase_childCount_Description=
TemplateComponentBase_childCount_DisplayName=
TemplateComponentBase_children_Description=
TemplateComponentBase_children_DisplayName=
TemplateComponentBase_facets_Description=
TemplateComponentBase_facets_DisplayName=
TemplateComponentBase_family_Description=
TemplateComponentBase_family_DisplayName=
TemplateComponentBase_id_Description=
TemplateComponentBase_id_DisplayName=
TemplateComponentBase_parent_Description=
TemplateComponentBase_parent_DisplayName=
TemplateComponentBase_rendered_Description=
TemplateComponentBase_rendered_DisplayName=Rendered Flag
TemplateComponentBase_rendererType_Description=
TemplateComponentBase_rendererType_DisplayName=
TemplateComponentBase_rendersChildren_Description=
TemplateComponentBase_rendersChildren_DisplayName=
TemplateComponentBase_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TemplateComponentBase_styleClass_DisplayName=CSS Style Class(es)
TemplateComponentBase_style_Description=CSS style(s) to be applied when this component is rendered.
TemplateComponentBase_style_DisplayName=CSS Style(s)
TemplateComponentBase_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TemplateComponentBase_visible_DisplayName=Visible

# TextArea
TextArea_Description=Represents a text area whose content will be included when the surrounding form is submitted.
TextArea_DisplayName=Text Area
TextArea_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
TextArea_attributes_DisplayName=Attributes Map
TextArea_childCount_Description=The number of child components associated with this component.
TextArea_childCount_DisplayName=Child Component Count
TextArea_children_Description=A mutable List of the child components associated with this component.
TextArea_children_DisplayName=Child Component List
TextArea_columns_Description=Number of character columns used to render this field.
TextArea_columns_DisplayName=Columns
TextArea_converter_Description=Converter instance registered with this component.
TextArea_converter_DisplayName=Converter
TextArea_disabled_Description=Disables the component and prevents its value from being submitted
TextArea_disabled_DisplayName=Disabled
TextArea_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
TextArea_facets_DisplayName=Facets Map
TextArea_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
TextArea_family_DisplayName=Component Family
TextArea_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
TextArea_id_DisplayName=Component Identifier
TextArea_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
TextArea_immediate_DisplayName=Immediate Action
TextArea_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
TextArea_labelLevel_DisplayName=Label Level
TextArea_label_Description=Display this text in a label associated with the field
TextArea_label_DisplayName=Label
TextArea_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
TextArea_localValueSet_DisplayName=Local Value Set
TextArea_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
TextArea_localValue_DisplayName=Local Value
TextArea_maxLength_Description=
TextArea_maxLength_DisplayName=
TextArea_onBlur_Description=Scripting code executed when this element loses focus.
TextArea_onBlur_DisplayName=Blur Script
TextArea_onChange_Description=Scripting code executed when the element value of this component is changed.
TextArea_onChange_DisplayName=Value Change Script
TextArea_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TextArea_onClick_DisplayName=Click Script
TextArea_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TextArea_onDblClick_DisplayName=Double Click Script
TextArea_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
TextArea_onFocus_DisplayName=Focus Script
TextArea_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TextArea_onKeyDown_DisplayName=Key Down Script
TextArea_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TextArea_onKeyPress_DisplayName=Key Press Script
TextArea_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TextArea_onKeyUp_DisplayName=Key Up Script
TextArea_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TextArea_onMouseDown_DisplayName=Mouse Down Script
TextArea_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TextArea_onMouseMove_DisplayName=Mouse Move Script
TextArea_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TextArea_onMouseOut_DisplayName=Mouse Out Script
TextArea_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TextArea_onMouseOver_DisplayName=Mouse In Script
TextArea_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TextArea_onMouseUp_DisplayName=Mouse Up Script
TextArea_onSelect_Description=Scripting code executed when some text in this component value is selected.
TextArea_onSelect_DisplayName=Text Selected Script
TextArea_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
TextArea_parent_DisplayName=Parent Component
TextArea_readOnly_Description=Flag indicating that modification of this component by the user is not currently permitted, but that it will be included when the form is submitted.
TextArea_readOnly_DisplayName=Read Only
TextArea_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
TextArea_rendered_DisplayName=Rendered Flag
TextArea_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
TextArea_rendererType_DisplayName=Renderer Type
TextArea_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
TextArea_rendersChildren_DisplayName=Renders Children
TextArea_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
TextArea_required_DisplayName=Required Flag
TextArea_rows_Description=Number of rows used to display for this field.
TextArea_rows_DisplayName=Rows
TextArea_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TextArea_styleClass_DisplayName=CSS Style Class(es)
TextArea_style_Description=CSS style(s) to be applied when this component is rendered.
TextArea_style_DisplayName=CSS Style(s)
TextArea_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
TextArea_submittedValue_DisplayName=Submitted Value
TextArea_tabIndex_Description=The position of this component in the tabbing order sequence
TextArea_tabIndex_DisplayName=Tab Index
TextArea_text_Description=Text value that will be displayed within this input field
TextArea_text_DisplayName=Text
TextArea_toolTip_Description=Display the text as a tooltip for this component
TextArea_toolTip_DisplayName=Tool Tip
TextArea_trim_Description=Trim any leading and trailing blanks when the value is submitted
TextArea_trim_DisplayName=Trim
TextArea_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
TextArea_validator_DisplayName=Validator
TextArea_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
TextArea_valueChangeListener_DisplayName=Value Change Listener
TextArea_value_Description=The current value of this component.
TextArea_value_DisplayName=Value
TextArea_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TextArea_visible_DisplayName=Visible

# TextField
TextField_Description=Represents a textfield whose content will be included when the surrounding form is submitted.
TextField_DisplayName=Text Field
TextField_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
TextField_attributes_DisplayName=Attributes Map
TextField_childCount_Description=The number of child components associated with this component.
TextField_childCount_DisplayName=Child Component Count
TextField_children_Description=A mutable List of the child components associated with this component.
TextField_children_DisplayName=Child Component List
TextField_columns_Description=Number of character columns used to render this field.
TextField_columns_DisplayName=Columns
TextField_converter_Description=Converter instance registered with this component.
TextField_converter_DisplayName=Converter
TextField_disabled_Description=Disables the component and prevents its value from being submitted
TextField_disabled_DisplayName=Disabled
TextField_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
TextField_facets_DisplayName=Facets Map
TextField_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
TextField_family_DisplayName=Component Family
TextField_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
TextField_id_DisplayName=Component Identifier
TextField_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
TextField_immediate_DisplayName=Immediate Action
TextField_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
TextField_labelLevel_DisplayName=Label Level
TextField_label_Description=Display this text in a label associated with the field
TextField_label_DisplayName=Label
TextField_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
TextField_localValueSet_DisplayName=Local Value Set
TextField_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
TextField_localValue_DisplayName=Local Value
TextField_maxLength_Description=The maximum number of characters that can be entered for this field.
TextField_maxLength_DisplayName=Maximum Length
TextField_onBlur_Description=Scripting code executed when this element loses focus.
TextField_onBlur_DisplayName=Blur Script
TextField_onChange_Description=Scripting code executed when the element value of this component is changed.
TextField_onChange_DisplayName=Value Change Script
TextField_onClick_Description=Scripting code executed when a mouse click occurs over this component.
TextField_onClick_DisplayName=Click Script
TextField_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
TextField_onDblClick_DisplayName=Double Click Script
TextField_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
TextField_onFocus_DisplayName=Focus Script
TextField_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
TextField_onKeyDown_DisplayName=Key Down Script
TextField_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
TextField_onKeyPress_DisplayName=Key Press Script
TextField_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
TextField_onKeyUp_DisplayName=Key Up Script
TextField_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
TextField_onMouseDown_DisplayName=Mouse Down Script
TextField_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
TextField_onMouseMove_DisplayName=Mouse Move Script
TextField_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
TextField_onMouseOut_DisplayName=Mouse Out Script
TextField_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
TextField_onMouseOver_DisplayName=Mouse In Script
TextField_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
TextField_onMouseUp_DisplayName=Mouse Up Script
TextField_onSelect_Description=Scripting code executed when some text in this component value is selected.
TextField_onSelect_DisplayName=Text Selected Script
TextField_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
TextField_parent_DisplayName=Parent Component
TextField_readOnly_Description=Flag indicating that modification of this component by the user is not currently permitted, but that it will be included when the form is submitted.
TextField_readOnly_DisplayName=Read Only
TextField_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
TextField_rendered_DisplayName=Rendered Flag
TextField_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
TextField_rendererType_DisplayName=Renderer Type
TextField_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
TextField_rendersChildren_DisplayName=Renders Children
TextField_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
TextField_required_DisplayName=Required Flag
TextField_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TextField_styleClass_DisplayName=CSS Style Class(es)
TextField_style_Description=CSS style(s) to be applied when this component is rendered.
TextField_style_DisplayName=CSS Style(s)
TextField_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
TextField_submittedValue_DisplayName=Submitted Value
TextField_tabIndex_Description=The position of this component in the tabbing order sequence
TextField_tabIndex_DisplayName=Tab Index
TextField_text_Description=Text value that will be displayed within this input field
TextField_text_DisplayName=Text
TextField_toolTip_Description=Display the text as a tooltip for this component
TextField_toolTip_DisplayName=Tool Tip
TextField_trim_Description=Trim any leading and trailing blanks when the value is submitted
TextField_trim_DisplayName=Trim
TextField_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
TextField_validator_DisplayName=Validator
TextField_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
TextField_valueChangeListener_DisplayName=Value Change Listener
TextField_value_Description=The current value of this component.
TextField_value_DisplayName=Value
TextField_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TextField_visible_DisplayName=Visible

# ThemeLinks
ThemeLinks_Description=Renders references to Theme resources.
ThemeLinks_DisplayName=ThemeLinks
ThemeLinks_attributes_Description=
ThemeLinks_attributes_DisplayName=
ThemeLinks_childCount_Description=
ThemeLinks_childCount_DisplayName=
ThemeLinks_children_Description=
ThemeLinks_children_DisplayName=
ThemeLinks_facets_Description=
ThemeLinks_facets_DisplayName=
ThemeLinks_family_Description=
ThemeLinks_family_DisplayName=
ThemeLinks_id_Description=
ThemeLinks_id_DisplayName=
ThemeLinks_javaScript_Description=If set to true, a script element with a reference to the client side behavior JavaScript resource is rendered.
ThemeLinks_javaScript_DisplayName=Include JavaScript Element
ThemeLinks_parent_Description=
ThemeLinks_parent_DisplayName=
ThemeLinks_rendered_Description=
ThemeLinks_rendered_DisplayName=Rendered Flag
ThemeLinks_rendererType_Description=
ThemeLinks_rendererType_DisplayName=
ThemeLinks_rendersChildren_Description=
ThemeLinks_rendersChildren_DisplayName=
ThemeLinks_styleSheetInline_Description=If set to true, the theme stylesheet contents will be rendered inline instead of being linked to.
ThemeLinks_styleSheetInline_DisplayName=Include StyleSheet Definitions Inline
ThemeLinks_styleSheet_Description=If set to true, a link element with a reference to the theme stylesheet resource is rendered.
ThemeLinks_styleSheet_DisplayName=Include StyleSheet Link

# Time
Time_Description=
Time_DisplayName=Time
Time_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Time_attributes_DisplayName=Attributes Map
Time_childCount_Description=The number of child components associated with this component.
Time_childCount_DisplayName=Child Component Count
Time_children_Description=A mutable List of the child components associated with this component.
Time_children_DisplayName=Child Component List
Time_converter_Description=Converter instance registered with this component.
Time_converter_DisplayName=Converter
Time_disabled_Description=Disables the component and prevents its value from being submitted
Time_disabled_DisplayName=Disabled
Time_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Time_facets_DisplayName=Facets Map
Time_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Time_family_DisplayName=Component Family
Time_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Time_id_DisplayName=Component Identifier
Time_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Time_immediate_DisplayName=Immediate Action
Time_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Time_localValueSet_DisplayName=Local Value Set
Time_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Time_localValue_DisplayName=Local Value
Time_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Time_parent_DisplayName=Parent Component
Time_readOnly_Description=If this attribute is set to true, the value of the component is rendered as text, preceded by the label if one was defined.
Time_readOnly_DisplayName=Read-only
Time_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Time_rendered_DisplayName=Rendered Flag
Time_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Time_rendererType_DisplayName=Renderer Type
Time_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Time_rendersChildren_DisplayName=Renders Children
Time_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
Time_required_DisplayName=Required Flag
Time_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Time_styleClass_DisplayName=CSS Style Class(es)
Time_style_Description=CSS style(s) to be applied when this component is rendered.
Time_style_DisplayName=CSS Style(s)
Time_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Time_submittedValue_DisplayName=Submitted Value
Time_tabIndex_Description=The position of this component in the tabbing order sequence
Time_tabIndex_DisplayName=Tab Index
Time_timeZone_Description=A binding to a Time Zone instance to use for this Scheduler. If none is specified, the Scheduler uses the default TimeZone from the Schedulers locale.
Time_timeZone_DisplayName=Time Zone
Time_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Time_validator_DisplayName=Validator
Time_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Time_valueChangeListener_DisplayName=Value Change Listener
Time_value_Description=The current value of this component.
Time_value_DisplayName=Value
Time_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Time_visible_DisplayName=Visible

# TreeNode
TreeNode_Description=Represents a TreeNode of a Tree.
TreeNode_DisplayName=Tree Node
TreeNode_actionListener_Description=Method binding to a method that is invoked when this tree node is toggled open or close
TreeNode_actionListener_DisplayName=Action Listener
TreeNode_action_Description=Method binding to invoke an action when this tree node is selected
TreeNode_action_DisplayName=Hyperlink Action
TreeNode_attributes_Description=
TreeNode_attributes_DisplayName=
TreeNode_childCount_Description=
TreeNode_childCount_DisplayName=
TreeNode_children_Description=
TreeNode_children_DisplayName=
TreeNode_content_Description=<p> This facet allows you to provide your own content for the<code>TreeNode</code> instead of using the built-in support for static text or a <code>Hyperlink</code>.</p>
TreeNode_content_DisplayName=TreeNode Content
TreeNode_expanded_Description=Indicates whether this tree node is expanded
TreeNode_expanded_DisplayName=Expanded
TreeNode_facets_Description=
TreeNode_facets_DisplayName=
TreeNode_family_Description=
TreeNode_family_DisplayName=
TreeNode_id_Description=
TreeNode_id_DisplayName=
TreeNode_imageURL_Description=<p> Specifies <code>imageURL</code> for the <code>ImageHyperlink</code> of this component. The image may alternately be defined via the "<code>image</code>" facet. The "<code>image</code>" facet may be an <code>IconHyperlink</code> component to utilize<code>Theme</code> images.</p> This property will not apply to the facet when the facet used.
TreeNode_imageURL_DisplayName=Image URL
TreeNode_image_Description=<p> This facet allows you to provide your own image for the<code>TreeNode</code> instead of using the built-in support for adding an image via Properties. If you use this facet, you will also be responsible for making the content of this link "clickable" if that is desired.</p><p> One common use for this facet may be to provide an<code>IconHyperlink</code> in order to leverage images that are defined by the <code>Theme</code>.</p>
TreeNode_image_DisplayName=TreeNode Image
TreeNode_parent_Description=
TreeNode_parent_DisplayName=
TreeNode_rendered_Description=
TreeNode_rendered_DisplayName=Rendered Flag
TreeNode_rendererType_Description=
TreeNode_rendererType_DisplayName=
TreeNode_rendersChildren_Description=
TreeNode_rendersChildren_DisplayName=
TreeNode_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
TreeNode_styleClass_DisplayName=CSS Style Class(es)
TreeNode_style_Description=CSS style(s) to be applied when this component is rendered.
TreeNode_style_DisplayName=CSS Style(s)
TreeNode_target_Description=The window or frame target in which to display the resource
TreeNode_target_DisplayName=Hyperlink Target
TreeNode_text_Description=The text description of this tree node
TreeNode_text_DisplayName=Text
TreeNode_toolTip_Description=Display the text as a tooltip for this component
TreeNode_toolTip_DisplayName=Tool Tip
TreeNode_url_Description=Resource path (may be absolute, relative, or context-relative)
TreeNode_url_DisplayName=Hyperlink Url
TreeNode_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
TreeNode_visible_DisplayName=Visible

# Tree
Tree_Description=A tree of zero or more TreeNodes
Tree_DisplayName=Tree
Tree_actionListener_Description=Method binding to a method that is invoked when this tree node is toggled open or close
Tree_actionListener_DisplayName=Action Listener
Tree_action_Description=Method binding to invoke an action when this tree node is selected
Tree_action_DisplayName=Hyperlink Action
Tree_attributes_Description=
Tree_attributes_DisplayName=
Tree_childCount_Description=
Tree_childCount_DisplayName=
Tree_children_Description=
Tree_children_DisplayName=
Tree_clientSide_Description=Perform expand/collapse operations without sending a server request
Tree_clientSide_DisplayName=ClientSide
Tree_expandOnSelect_Description=Automatically expand nodes when selected
Tree_expandOnSelect_DisplayName=Expand On Select
Tree_expanded_Description=Indicates whether this tree node is expanded
Tree_expanded_DisplayName=Expanded
Tree_facets_Description=
Tree_facets_DisplayName=
Tree_family_Description=
Tree_family_DisplayName=
Tree_id_Description=
Tree_id_DisplayName=
Tree_imageURL_Description=<p> Specifies <code>imageURL</code> for the <code>ImageHyperlink</code> of this component. The image may alternately be defined via the "<code>image</code>" facet. The "<code>image</code>" facet may be an <code>IconHyperlink</code> component to utilize<code>Theme</code> images.</p> This property will not apply to the facet when the facet used.
Tree_imageURL_DisplayName=Image URL
Tree_immediate_Description=Indicate that event handling for this component should be handled immediately (in Apply Request Values phase) rather than waiting until Invoke Application phase.
Tree_immediate_DisplayName=Immediate
Tree_parent_Description=
Tree_parent_DisplayName=
Tree_rendered_Description=
Tree_rendered_DisplayName=Rendered Flag
Tree_rendererType_Description=
Tree_rendererType_DisplayName=
Tree_rendersChildren_Description=
Tree_rendersChildren_DisplayName=
Tree_required_Description=Indicates that the user must select a value for this tree.
Tree_required_DisplayName=Required
Tree_selected_Description=Specifies the client id of the selected tree node.
Tree_selected_DisplayName=Selected
Tree_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Tree_styleClass_DisplayName=CSS Style Class(es)
Tree_style_Description=CSS style(s) to be applied when this component is rendered.
Tree_style_DisplayName=CSS Style(s)
Tree_target_Description=The window or frame target in which to display the resource
Tree_target_DisplayName=Hyperlink Target
Tree_text_Description=The text displayed at root of the tree
Tree_text_DisplayName=Text
Tree_toolTip_Description=Display the text as a tooltip for this component
Tree_toolTip_DisplayName=Tool Tip
Tree_url_Description=Resource path (may be absolute, relative, or context-relative)
Tree_url_DisplayName=Hyperlink Url
Tree_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Tree_visible_DisplayName=Visible

# Upload
Upload_Description=An input field for files that will be uploaded when the surrounding form is submitted
Upload_DisplayName=File Upload
Upload_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
Upload_attributes_DisplayName=Attributes Map
Upload_childCount_Description=The number of child components associated with this component.
Upload_childCount_DisplayName=Child Component Count
Upload_children_Description=A mutable List of the child components associated with this component.
Upload_children_DisplayName=Child Component List
Upload_columns_Description=Number of character columns used to render this field.
Upload_columns_DisplayName=Columns
Upload_converter_Description=
Upload_converter_DisplayName=
Upload_disabled_Description=Disables the component and prevents its value from being submitted
Upload_disabled_DisplayName=Disabled
Upload_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
Upload_facets_DisplayName=Facets Map
Upload_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
Upload_family_DisplayName=Component Family
Upload_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
Upload_id_DisplayName=Component Identifier
Upload_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
Upload_immediate_DisplayName=Immediate Action
Upload_labelLevel_Description=Determines the style of the label (default is 2, 1 is the strongest)
Upload_labelLevel_DisplayName=Label Level
Upload_label_Description=Display this text in a label associated with the field
Upload_label_DisplayName=Label
Upload_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
Upload_localValueSet_DisplayName=Local Value Set
Upload_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
Upload_localValue_DisplayName=Local Value
Upload_maxLength_Description=
Upload_maxLength_DisplayName=
Upload_onBlur_Description=Scripting code executed when this element loses focus.
Upload_onBlur_DisplayName=Blur Script
Upload_onChange_Description=Scripting code executed when the element value of this component is changed.
Upload_onChange_DisplayName=Value Change Script
Upload_onClick_Description=Scripting code executed when a mouse click occurs over this component.
Upload_onClick_DisplayName=Click Script
Upload_onDblClick_Description=Scripting code executed when a mouse double click occurs over this component.
Upload_onDblClick_DisplayName=Double Click Script
Upload_onFocus_Description=Scripting code executed when this component receives focus. An element receives focus when the user selects the element by pressing the tab key or clicking the mouse.
Upload_onFocus_DisplayName=Focus Script
Upload_onKeyDown_Description=Scripting code executed when the user presses down on a key while the component has focus.
Upload_onKeyDown_DisplayName=Key Down Script
Upload_onKeyPress_Description=Scripting code executed when the user presses and releases a key while the component has focus.
Upload_onKeyPress_DisplayName=Key Press Script
Upload_onKeyUp_Description=Scripting code executed when the user releases a key while the component has focus.
Upload_onKeyUp_DisplayName=Key Up Script
Upload_onMouseDown_Description=Scripting code executed when the user presses a mouse button while the mouse pointer is on the component.
Upload_onMouseDown_DisplayName=Mouse Down Script
Upload_onMouseMove_Description=Scripting code executed when the user moves the mouse pointer while over the component.
Upload_onMouseMove_DisplayName=Mouse Move Script
Upload_onMouseOut_Description=Scripting code executed when a mouse out movement occurs over this component.
Upload_onMouseOut_DisplayName=Mouse Out Script
Upload_onMouseOver_Description=Scripting code executed when the user moves the mouse pointer into the boundary of this component.
Upload_onMouseOver_DisplayName=Mouse In Script
Upload_onMouseUp_Description=Scripting code executed when the user releases a mouse button while the mouse pointer is on the component.
Upload_onMouseUp_DisplayName=Mouse Up Script
Upload_onSelect_Description=Scripting code executed when some text in this component value is selected.
Upload_onSelect_DisplayName=Text Selected Script
Upload_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
Upload_parent_DisplayName=Parent Component
Upload_readOnly_Description=Flag indicating that modification of this component by the user is not currently permitted, but that it will be included when the form is submitted.
Upload_readOnly_DisplayName=Read Only
Upload_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
Upload_rendered_DisplayName=Rendered Flag
Upload_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
Upload_rendererType_DisplayName=Renderer Type
Upload_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
Upload_rendersChildren_DisplayName=Renders Children
Upload_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
Upload_required_DisplayName=Required Flag
Upload_styleClass_Description=CSS style class(es) to be applied when this component is rendered.
Upload_styleClass_DisplayName=CSS Style Class(es)
Upload_style_Description=CSS style(s) to be applied when this component is rendered.
Upload_style_DisplayName=CSS Style(s)
Upload_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
Upload_submittedValue_DisplayName=Submitted Value
Upload_tabIndex_Description=The position of this component in the tabbing order sequence
Upload_tabIndex_DisplayName=Tab Index
Upload_text_Description=Text value that will be displayed within this input field
Upload_text_DisplayName=Text
Upload_toolTip_Description=Display the text as a tooltip for this component
Upload_toolTip_DisplayName=Tool Tip
Upload_trim_Description=Trim any leading and trailing blanks when the value is submitted
Upload_trim_DisplayName=Trim
Upload_uploadedFile_Description=EL expression that resolves to an object of type com.sun.rave.web.ui.model.UploadedFile
Upload_uploadedFile_DisplayName=Uploaded File
Upload_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
Upload_validator_DisplayName=Validator
Upload_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
Upload_valueChangeListener_DisplayName=Value Change Listener
Upload_value_Description=The current value of this component.
Upload_value_DisplayName=Value
Upload_visible_Description=Use the visible attribute to indicate whether the component should be viewable by the user in the rendered HTML page.
Upload_visible_DisplayName=Visible
