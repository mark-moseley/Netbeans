/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 * 
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 * 
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.12.09 at 06:25:55 PM PST 
//


package org.netbeans.modules.compapp.javaee.sunresources.generated.sunejb30;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "mappingProperties",
    "isOneOneCmp",
    "oneOneFinders",
    "prefetchDisabled"
})
@XmlRootElement(name = "cmp")
public class Cmp {

    @XmlElement(name = "mapping-properties")
    protected String mappingProperties;
    @XmlElement(name = "is-one-one-cmp")
    protected String isOneOneCmp;
    @XmlElement(name = "one-one-finders")
    protected OneOneFinders oneOneFinders;
    @XmlElement(name = "prefetch-disabled")
    protected PrefetchDisabled prefetchDisabled;

    /**
     * Gets the value of the mappingProperties property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMappingProperties() {
        return mappingProperties;
    }

    /**
     * Sets the value of the mappingProperties property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMappingProperties(String value) {
        this.mappingProperties = value;
    }

    /**
     * Gets the value of the isOneOneCmp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsOneOneCmp() {
        return isOneOneCmp;
    }

    /**
     * Sets the value of the isOneOneCmp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsOneOneCmp(String value) {
        this.isOneOneCmp = value;
    }

    /**
     * Gets the value of the oneOneFinders property.
     * 
     * @return
     *     possible object is
     *     {@link OneOneFinders }
     *     
     */
    public OneOneFinders getOneOneFinders() {
        return oneOneFinders;
    }

    /**
     * Sets the value of the oneOneFinders property.
     * 
     * @param value
     *     allowed object is
     *     {@link OneOneFinders }
     *     
     */
    public void setOneOneFinders(OneOneFinders value) {
        this.oneOneFinders = value;
    }

    /**
     * Gets the value of the prefetchDisabled property.
     * 
     * @return
     *     possible object is
     *     {@link PrefetchDisabled }
     *     
     */
    public PrefetchDisabled getPrefetchDisabled() {
        return prefetchDisabled;
    }

    /**
     * Sets the value of the prefetchDisabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link PrefetchDisabled }
     *     
     */
    public void setPrefetchDisabled(PrefetchDisabled value) {
        this.prefetchDisabled = value;
    }

}
