/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.12.09 at 06:26:10 PM PST 
//


package org.netbeans.modules.compapp.javaee.sunresources.generated.sunresources13;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.netbeans.modules.compapp.javaee.sunresources.generated.sunresources13 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.netbeans.modules.compapp.javaee.sunresources.generated.sunresources13
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ResourceAdapterConfig }
     * 
     */
    public ResourceAdapterConfig createResourceAdapterConfig() {
        return new ResourceAdapterConfig();
    }

    /**
     * Create an instance of {@link Principal }
     * 
     */
    public Principal createPrincipal() {
        return new Principal();
    }

    /**
     * Create an instance of {@link MailResource }
     * 
     */
    public MailResource createMailResource() {
        return new MailResource();
    }

    /**
     * Create an instance of {@link BackendPrincipal }
     * 
     */
    public BackendPrincipal createBackendPrincipal() {
        return new BackendPrincipal();
    }

    /**
     * Create an instance of {@link ConnectorResource }
     * 
     */
    public ConnectorResource createConnectorResource() {
        return new ConnectorResource();
    }

    /**
     * Create an instance of {@link Resources }
     * 
     */
    public Resources createResources() {
        return new Resources();
    }

    /**
     * Create an instance of {@link JdbcResource }
     * 
     */
    public JdbcResource createJdbcResource() {
        return new JdbcResource();
    }

    /**
     * Create an instance of {@link CustomResource }
     * 
     */
    public CustomResource createCustomResource() {
        return new CustomResource();
    }

    /**
     * Create an instance of {@link UserGroup }
     * 
     */
    public UserGroup createUserGroup() {
        return new UserGroup();
    }

    /**
     * Create an instance of {@link AdminObjectResource }
     * 
     */
    public AdminObjectResource createAdminObjectResource() {
        return new AdminObjectResource();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link ExternalJndiResource }
     * 
     */
    public ExternalJndiResource createExternalJndiResource() {
        return new ExternalJndiResource();
    }

    /**
     * Create an instance of {@link JdbcConnectionPool }
     * 
     */
    public JdbcConnectionPool createJdbcConnectionPool() {
        return new JdbcConnectionPool();
    }

    /**
     * Create an instance of {@link ConnectorConnectionPool }
     * 
     */
    public ConnectorConnectionPool createConnectorConnectionPool() {
        return new ConnectorConnectionPool();
    }

    /**
     * Create an instance of {@link SecurityMap }
     * 
     */
    public SecurityMap createSecurityMap() {
        return new SecurityMap();
    }

    /**
     * Create an instance of {@link PersistenceManagerFactoryResource }
     * 
     */
    public PersistenceManagerFactoryResource createPersistenceManagerFactoryResource() {
        return new PersistenceManagerFactoryResource();
    }

}
