<?xml version="1.0" encoding="UTF-8"?>
<project name="Services tab web services compiling script " default="createWsJars" basedir=".">
    <description>
        A script to wscompile and wsimport WSDL files.
        
        run-wscompile - runs the wscompile ant task for the JAX-RPC proxy client
        client-dt-wscompile - Compiles the client/designtime and creates JAX-RPC jars
        run-wsimport - runs the wsimport ant task for the JAX-WS proxy client
        client-dt-wscompile - Compiles the client/designtime and creates JAX-WS jars
        
        Creates the directories ${websvc.home}/${serviceName}/jaxrpc.
        Creates build and src directories.
        Uses "wscompile" to compile the WSDL and place all generated .class and .java files into  build and src directories respectively.
        Creates the "jar" file from the ".class" files.
        Deletes "build" and "src" directories.
        
        Creates the directories ${websvc.home}/${serviceName}/jaxws.
        Creates build and src directories.
        Uses "wsimport" to compile the WSDL and place all generated .class and .java files into  build and src directories respectively.
        Creates the "jar" file from the ".class" files.
        Deletes "build" and "src" directories.
        
        Copies the wsdl file into ${websvc.home}/${serviceName}/websvc.
        
    </description>
    
    <target name="create-wsclasses" depends="run-wscompile, run-wsimport" />
    
    <target name="-init-user">
        <property file="${user.properties.file}"/>
    </target>
    
    <target name="-init-wscompile" depends="-init-user">
        <property name="jxrpc.base" value="${websvc.home}/${serviceName}/jaxrpc"/>
        <mkdir dir="${jxrpc.base}/build"/>
        <mkdir dir="${jxrpc.base}/src"/>
    </target>
    
    <target name="run-wscompile" depends="-init-wscompile">
        <taskdef name="wscompile" classname="com.sun.xml.rpc.tools.ant.Wscompile" classpath="${java.home}/../lib/tools.jar:${libs.jaxrpc16.classpath}"/>
        <wscompile
            gen="true"
            base="${jxrpc.base}/build"
            sourcebase="${jxrpc.base}/src"
            debug="true"
            config="${config.file}"
            classpath="${java.home}/../lib/tools.jar:${libs.jaxrpc16.classpath}"/>
    </target>
    
    <target name="client-dt-wscompile" depends="-init-wscompile">
        <jar jarfile="${jxrpc.base}/${serviceName}-src.jar">
            <fileset dir="${jxrpc.base}/src">
                <patternset includes="**/*.java"/>
            </fileset>
        </jar>
        
        <!-- We need to compile the single Client Class and add it to the build before jaring. wscompile doesn't compile it -->
        <javac srcdir="${jxrpc.base}/src" 
               destdir="${jxrpc.base}/build" 
               classpath="${java.home}/../lib/tools.jar:${libs.jaxrpc16.classpath}:${libs.jsf12-support.classpath}" 
               debug="on" 
               source="1.5" />
        
        <jar jarfile="${jxrpc.base}/${serviceName}.jar" 
             basedir="${jxrpc.base}/build" />
        
        <delete dir="${jxrpc.base}/build"/>
        <delete dir="${jxrpc.base}/src"/>
        
        <!-- create wrapper proxy client and the corresponding design time jar file -->
        <mkdir dir="${jxrpc.base}/dt/build"/>
        
        <echo level="info">Designtime Classpath - ${designtime.classpath}.</echo>
        
        <!-- Compile the design time files. designtime.jar and dataprovider.jar need to be in the classpath -->
        <javac srcdir="${jxrpc.base}/dt/src" 
               destdir="${jxrpc.base}/dt/build" 
               classpath="${java.home}/../lib/tools.jar:${libs.jaxrpc16.classpath}:${jxrpc.base}/${serviceName}.jar:${designtime.classpath}" 
               debug="on" source="1.5" />
        
        <copy todir="${jxrpc.base}/dt/build">
            <fileset dir="${jxrpc.base}/dt/src">
                <patternset excludes="**/*.java"/>
            </fileset>
        </copy>
        <jar jarfile="${jxrpc.base}/${serviceName}-dt.jar" 
             basedir="${jxrpc.base}/dt/build" />
        
        <jar jarfile="${jxrpc.base}/${serviceName}-dt-src.jar">
            <fileset dir="${jxrpc.base}/dt/src">
                <patternset includes="**/*.java"/>
            </fileset>
        </jar>
        
       <delete dir="${jxrpc.base}/dt"/>
    </target>
    
    <target name="-init-wsimport" depends="-init-user">
        <property name="jaxws.base" value="${websvc.home}/${serviceName}/jaxws"/>
        <mkdir dir="${jaxws.base}/build"/>
        <mkdir dir="${jaxws.base}/src"/>
        <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
            <classpath path="${java.home}/../lib/tools.jar:${libs.jaxws20.classpath}"/>
        </taskdef>
    </target>
    
    <!-- Currently only JAXRPC wrapper proxy client and the corresponding design time is created
    We need to generate for JAX-WS aslo-->
    
    <target name="run-wsimport" depends="-init-wsimport">
        <wsimport sourcedestdir="${jaxws.base}/src" 
                  extension="true" 
                  package="${packageName}" 
                  destdir="${jaxws.base}/build" 
                  wsdl="${wsdlFileName}"/>
    </target>
    
    <target name="client-dt-wsimport" depends="-init-wsimport">
        <jar jarfile="${jaxws.base}/${serviceName}-src.jar">
            <fileset dir="${jaxws.base}/src">
                <patternset includes="**/*.java"/>
            </fileset>
        </jar>
        
        <!-- We need to compile the single Client Class and add it to the build before jaring.
             wsimport doesn't compile it -->
        <javac srcdir="${jaxws.base}/src" 
               destdir="${jaxws.base}/build" 
               classpath="${java.home}/../lib/tools.jar:${libs.jaxws20.classpath}:${libs.jsf12-support.classpath}" 
               debug="on" source="1.5" />
        
        <jar jarfile="${jaxws.base}/${serviceName}.jar" 
             basedir="${jaxws.base}/build" />
        
        <delete dir="${jaxws.base}/build"/>
        <delete dir="${jaxws.base}/src"/>
        
        <!-- Create the wrapper proxy client and the corresponding design time --> 
 
        <mkdir dir="${jaxws.base}/dt/build"/>
        
        <!-- Ccompile the design time files. designtime.jar and dataprovider.jar need to be in the classpath -->
        <javac srcdir="${jaxws.base}/dt/src" 
               destdir="${jaxws.base}/dt/build" 
               classpath="${java.home}/../lib/tools.jar:${libs.jaxws20.classpath}:${jaxws.base}/${serviceName}.jar:${designtime.classpath}" 
               debug="on" 
               source="1.5" />
        
        <copy todir="${jaxws.base}/dt/build">
            <fileset dir="${jaxws.base}/dt/src">
                <patternset excludes="**/*.java"/>
            </fileset>
        </copy>
        <jar jarfile="${jaxws.base}/${serviceName}-dt.jar" 
             basedir="${jaxws.base}/dt/build" />
        
        <jar jarfile="${jaxws.base}/${serviceName}-dt-src.jar">
            <fileset dir="${jaxws.base}/dt/src">
                <patternset includes="**/*.java"/>
            </fileset>                 
        </jar>
        <delete dir="${jaxws.base}/dt"/>
    </target>
</project>
