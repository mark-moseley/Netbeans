/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.lexer.gen.javacc;

import java.io.File;
import java.util.HashMap;
import java.util.List;
import org.netbeans.modules.lexer.gen.LanguageData;
import org.netbeans.modules.lexer.gen.TokenTypes;
import org.netbeans.spi.lexer.util.LexerUtilities;

/**
 * Generates initial skeleton of the xml file
 * (describing the particular language) from the class
 * (or interface) that contains integer constants.
 * Such file is typically generated by the lexer
 * generator tools.
 * <BR>This tool is useful when the grammar file
 * of the particular language already
 * exists because it creates the  initial version
 * of the language xml description that can be
 * further customized.
 *
 * @author Miloslav Metelka
 * @version 1.00
 */

public class JavaCCLanguageDescriptionGenerator {

    public String generate(String tokenTypesClassName) throws ClassNotFoundException {
        LanguageData data = new LanguageData();

        // Apply token types class info
        Class tokenTypesClass = Class.forName(tokenTypesClassName);
        TokenTypes tokenTypes = new TokenTypes(tokenTypesClass);
        data.registerTokenTypes(tokenTypes);

        return data.createDescription();
    }
    
}

