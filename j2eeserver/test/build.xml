<?xml version="1.0" encoding="UTF-8"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2003 Sun
Microsystems, Inc. All Rights Reserved.
--><project basedir="." default="all" name="j2eeserver XTest Workspace Script">

  <property name="nbm_alias" value="nb_ide"/>
  <property name="buildroot" value="../../.."/>
  <property name="nbroot" value="${buildroot}/nb_all"/>
  <property name="nbext" value="${nbroot}/nbbuild"/>
  <property name="license.file" value="${nbext}/standard-nbm-license.txt"/>
  
  <taskdef classname="org.netbeans.nbbuild.LocalizedJar" classpath="${nbext}/nbantext.jar" name="locjar"/>
  <taskdef name="genlist" classname="org.netbeans.nbbuild.MakeListOfNBM" classpath="${nbext}/nbantext.jar"/>
  <taskdef name="makenbm" classname="org.netbeans.nbbuild.MakeNBM" classpath="${nbext}/nbantext.jar"/>

  <!-- These are the primary targets. -->

  <target depends="dev" name="netbeans">
    <genlist targetname="nbm" outputfiledir="${nbext}/netbeans"/>
  </target>

  <target name="external">
      <ant dir="external" target="unscramble"/>
  </target>

  <target name="nbm" depends="netbeans">
    <makenbm file="testplugin.nbm"
             topdir="."
             module="netbeans/modules/testplugin.jar"
             homepage="http://${homepage.base}/testplugin.html"
             distribution="${dist.base}/testplugin.nbm">
      <license file="${license.file}" />
      <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
      <exclude name="**/nondist/**" />
    </makenbm>
  </target>

  <target name="clean">
    <delete>
      <fileset dir="src">
        <include name="**/*.class"/>
        <include name="**/*.jar"/>
      </fileset>
    </delete>
    <delete dir="netbeans"/>
    <delete dir="Info"/>
    <delete file="testplugin.nbm"/>
    <delete file="manifest-subst.mf"/>
  </target>

  <target name="release">
  </target>

  <target depends="compile,release" name="jars">
    <mkdir dir="netbeans/modules/ext"/>
    <filter token="BUILD_NUMBER_SUBST" value="${buildnumber}"/>
    <copy file="manifest.mf" tofile="manifest-subst.mf"
          filtering="on"/>
    <locjar compress="false" jarfile="netbeans/modules/testplugin.jar" manifest="manifest-subst.mf">
      <locale name="ja"/>
      <fileset dir="src" excludesfile="${nbext}/standard-jar-excludes.txt">
          <include name="org/**"/>
          <exclude name="**/jsr88/**"/>
          <exclude name="**/jsr77/**"/>
      </fileset>
    </locjar>
    <jar compress="false" jarfile="netbeans/modules/ext/testjsr88.jar">
       <fileset dir="src" excludesfile="${nbext}/standard-jar-excludes.txt">
          <include name="org/netbeans/tests/j2eeserver/plugin/jsr88/**"/>
       </fileset>
    </jar> 
    <jar compress="false" jarfile="netbeans/modules/ext/testjsr77.jar">
       <fileset dir="src" excludesfile="${nbext}/standard-jar-excludes.txt">
          <include name="org/netbeans/tests/j2eeserver/plugin/jsr77/**"/>
       </fileset>
    </jar> 
  </target>

  <target name="compile">
    <javac srcdir="src" destdir="src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <patternset>
          <include name="org/netbeans/tests/"/>
      </patternset>
      <classpath>
        <pathelement location="../netbeans/modules/autoload/j2eeserver.jar"/>
        <pathelement location="${nbroot}/debuggercore/api/netbeans/modules/autoload/debugger-api.jar"/>
        <pathelement location="${nbroot}/schema2beans/rt/netbeans/modules/autoload/schema2beans.jar"/>
        <pathelement location="${nbroot}/nbbuild/netbeans/lib/openide.jar"/>
        <pathelement location="${nbroot}/nbbuild/netbeans/lib/openide-loaders.jar"/>
        <pathelement location="${nbroot}/debuggercore/oldapi/netbeans/modules/autoload/openide-debugger.jar"/> <!-- XXX -->

        <fileset dir="../external">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${nbroot}/openide/netbeans/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <!--

  <target name="setup-jdkhome-1">
    <property name="javahome" location="${java.home}"/>
    <available property="javahome-valid" file="${javahome}/lib/tools.jar"/>
  </target>
  <target name="setup-jdkhome-2" depends="setup-jdkhome-1" if="javahome-valid">
    <property name="jdkhome" value="${javahome}"/>
    <property name="jdkhome-valid" value="true"/>
  </target>
  <target name="setup-jdkhome-3" depends="setup-jdkhome-1" unless="javahome-valid">
    <property name="jdkhome" location="${javahome}/.."/>
    <available property="jdkhome-valid" file="${jdkhome}/lib/tools.jar"/>
  </target>
  <target name="setup-jdkhome" depends="setup-jdkhome-2,setup-jdkhome-3" unless="jdkhome-valid">
    <fail message="No tools.jar found in ${javahome}! Set -Djavahome=... as needed."/>
  </target> -->

  <!-- This target will only work *inside* the IDE!-->
  <target depends="dev" description="Test the module inside the running IDE." name="reinstall">
    <nbinstaller action="reinstall" module="netbeans/modules/testplugin.jar"/>
  </target> 

  <target name="dev" description="A development target to compile with symbols and copy jar file(s)">
        <antcall target="jars">
                <param name="build.compiler.debug" value="on"/>
        </antcall>
        <property name="devloc" value="${buildroot}/nb_all/nbbuild/netbeans"/>
        <copy todir="${devloc}">
            <fileset dir="netbeans">
              <exclude name="**/locale/*"/>
              <exclude name="**/*-test.jar" /> 
            </fileset>
        </copy>
  </target>

  <target name="f4dev" description="A development target to compile with symbols and copy jar file(s)">
        <antcall target="jars">
                <param name="build.compiler.debug" value="on"/>
        </antcall>
        <property name="devloc" value="${buildroot}/f4j_all/f4jbuild/firststart"/>
        <copy todir="${devloc}">
            <fileset dir="netbeans">
              <exclude name="**/locale/*"/>
              <exclude name="**/*-test.jar" /> 
            </fileset>
        </copy>
  </target>


<!-- ******************************************************************* -->
<!-- **************************** XTest ******************************** -->
<!-- ******************************************************************* -->

    <!-- Points to directory with IDE to test-->
    <property location="../../../nb_all/nbbuild/netbeans" name="netbeans.home"/>
<!--    <property location="../../../f4j_all/f4jbuild/firststart" name="netbeans.home"/> -->
    <!-- Name of tested module -->
    <property name="xtest.module" value="j2eeserver"/>
    
    <!-- Home of XTest -->
    <property location="${nbroot}/xtest" name="xtest.home"/>

    <!-- default testtypes, attributes used when no value is supplied from command line -->
    <property name="xtest.testtype" value="unit"/>
    <property name="xtest.attribs" value="ide"/>
    <!-- Points to antfile with module's harness. 
         Targets from that antfile is called from this build.xml -->
    <property location="${xtest.home}/lib/module_harness.xml" name="xtest.module_harness.antfile"/>
  
  	<!--
	******************************************************
	** You should not change anything after this comment,
	**    unless you really know what you do
	******************************************************
	-->
    
    <!-- Ant property. Value 'ignore' means that system classpath is ignored
         and only classpath specified in build file is used. -->
    <property name="build.sysclasspath" value="ignore"/>

    
    <!-- ============ -->
    <!-- Main targets -->
    <!-- ============ -->
    
    <target depends="f4dev, runtests" name="f4test" />
    <target depends="dev, runtests" name="all"/>
    
    <!-- This calls target which will call compilers according to cfg file.
         You should not change this target unless you realy know what you are doing -->
    <target name="buildtests">
       <!-- <ant antfile="${xtest.module_harness.antfile}" dir="." target="compiler-launcher"/> -->
       <ant antfile="${xtest.module_harness.antfile}" dir="." target="buildtests"> 
          <property name="xtest.extra.jars.path" value="../netbeans/modules"/>
	      <property name="compile.srcdir" value="${xtest.testtype}/src"/>
          <property name="xtest.extra.jars" value="netbeans/modules/testplugin.jar;netbeans/modules/ext/testjsr88.jar;../netbeans/modules/autoload/j2eeserver.jar;../external/ejb20.jar;../external/javax77.jar;../external/jmxri.jar;../external/jsr88javax.jar;../../openide/netbeans/lib/openide.jar;../../core/settings/netbeans/modules/autoload/core-settings.jar;../../openide/execution/netbeans/modules/autoload/openide-execution.jar;"/>
	   </ant>
    </target>
    
    <!-- This calls common clean process. -->
    <!-- You can write your own if you need something special -->
    <target name="cleantests">
       <ant antfile="${xtest.module_harness.antfile}" dir="." target="cleantests"/>
    </target> 

    <!-- This target runs tests. You should not change this --> 
    <!-- target unless you realy know what you are doing -->
    <target depends="buildtests" name="runtests">
        <echo message="Module: Running tests for ${xtest.module}, testtype ${xtest.testtype}, attribs=${xtest.attribs}"/>
        <ant antfile="${xtest.module_harness.antfile}" dir="." target="runtests"/>
    </target>
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <target name="test_report">
        <ant antfile="${xtest.module_harness.antfile}" dir="." target="test_report"/>
    </target>
    
    <target name="cleanresults">
        <ant antfile="${xtest.module_harness.antfile}" dir="." target="cleanresults"/>
    </target>
    
    <target depends="cleantests,cleanresults" name="realclean">
        <ant antfile="${xtest.module_harness.antfile}" dir="." target="realclean"/>
    </target>
    
    <target name="printconfig">
        <echo message="Default config is testtype: ${xtest.testtype}, attributes: ${xtest.attribs}."/>
    </target>
    
</project>
