/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.ant.freeform.ui;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import org.netbeans.modules.ant.freeform.FreeformProjectGenerator;
import org.netbeans.spi.project.support.ant.AntProjectHelper;

// XXX: validate that entered target really exists in the Ant script, etc.

/**
 * @author  David Konecny
 */
public class TargetMappingPanel extends javax.swing.JPanel implements ProjectCustomizer.Panel {
    
    public static String BUILD_ACTION = "build"; // NOI18N
    public static String CLEAN_ACTION = "clean"; // NOI18N
    public static String REBUILD_ACTION = "rebuild"; // NOI18N
    public static String JAVADOC_ACTION = "javadoc"; // NOI18N
    public static String RUN_ACTION = "run"; // NOI18N
    public static String TEST_ACTION = "test"; // NOI18N

    private boolean initialized;
    
    public TargetMappingPanel() {
        initComponents();
    }
    
    private void initMappings(Map/*<String,List>*/ map) {
        if (map.get(BUILD_ACTION) != null) {
            buildTargetName.setText(getListAsString((List)map.get(BUILD_ACTION)));
        }
        if (map.get(CLEAN_ACTION) != null) {
            cleanTargetName.setText(getListAsString((List)map.get(CLEAN_ACTION)));
        }
        if (map.get(JAVADOC_ACTION) != null) {
            javadocTargetName.setText(getListAsString((List)map.get(JAVADOC_ACTION)));
        }
        if (map.get(RUN_ACTION) != null) {
            runTargetName.setText(getListAsString((List)map.get(RUN_ACTION)));
        }
        if (map.get(TEST_ACTION) != null) {
            testTargetName.setText(getListAsString((List)map.get(TEST_ACTION)));
        }
    }
    
    private String getListAsString(List list) {
        StringBuffer sb = new StringBuffer();
        Iterator it = list.iterator();
        while (it.hasNext()) {
            sb.append((String)it.next());
            if (it.hasNext()) {
                sb.append(","); //NOI18N
            }
        }
        return sb.toString();
    }
    
    private List getStringAsList(String str) {
        ArrayList l = new ArrayList(2);
        StringTokenizer tok = new StringTokenizer(str, ",");
        while (tok.hasMoreTokens()) {
            String target = tok.nextToken().trim();
            if (target.length() == 0) {
                continue;
            }
            l.add(target);
        }
        return l;
    }
    
    public Map/*<String,List>*/ getMapping() {
        HashMap map = new HashMap();
        
        if (buildTargetName.getText().length() > 0) {
            map.put(BUILD_ACTION, getStringAsList(buildTargetName.getText()));
        }
        if (cleanTargetName.getText().length() > 0) {
            map.put(CLEAN_ACTION, getStringAsList(cleanTargetName.getText()));
        }
        if (buildTargetName.getText().length() > 0 && cleanTargetName.getText().length() > 0) {
            map.put(REBUILD_ACTION, getStringAsList(cleanTargetName.getText()+","+buildTargetName.getText())); //NOI18N
        }
        if (runTargetName.getText().length() > 0) {
            map.put(RUN_ACTION, getStringAsList(runTargetName.getText()));
        }
        if (javadocTargetName.getText().length() > 0) {
            map.put(JAVADOC_ACTION, getStringAsList(javadocTargetName.getText()));
        }
        if (testTargetName.getText().length() > 0) {
            map.put(TEST_ACTION, getStringAsList(testTargetName.getText()));
        }
        return map;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        buildTargetName = new javax.swing.JTextField();
        cleanTargetName = new javax.swing.JTextField();
        runTargetName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        javadocTargetName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        testTargetName = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Specify Ant targets executed by common menu items.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel1, gridBagConstraints);

        jLabel2.setText("Build:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 6);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel2, gridBagConstraints);

        jLabel4.setText("Clean:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 6);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel4, gridBagConstraints);

        jLabel5.setText("Run:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 6);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel5, gridBagConstraints);

        buildTargetName.setText("build");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(buildTargetName, gridBagConstraints);

        cleanTargetName.setText("clean");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(cleanTargetName, gridBagConstraints);

        runTargetName.setText("run");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(runTargetName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

        jLabel6.setText("Generate Javadoc:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 6);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel6, gridBagConstraints);

        javadocTargetName.setText("javadoc");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(javadocTargetName, gridBagConstraints);

        jLabel7.setText("Test:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 6);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel7, gridBagConstraints);

        testTargetName.setText("test");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(testTargetName, gridBagConstraints);

    }//GEN-END:initComponents

    public void initValues(AntProjectHelper helper, List panels) {
        if (!initialized) {
            initMappings(FreeformProjectGenerator.getTargetMappings(helper));
            initialized = true;
        }
    }    
    
    public void storeValues(AntProjectHelper helper) {
        if (!initialized) {
            return;
        }
        FreeformProjectGenerator.putTargetMappings(helper, getMapping());
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buildTargetName;
    private javax.swing.JTextField cleanTargetName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField javadocTargetName;
    private javax.swing.JTextField runTargetName;
    private javax.swing.JTextField testTargetName;
    // End of variables declaration//GEN-END:variables
    
}
