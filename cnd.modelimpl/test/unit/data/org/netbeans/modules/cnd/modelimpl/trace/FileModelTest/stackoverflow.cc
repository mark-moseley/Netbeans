#define BITFIELD_PHASE      0
#define IV_PHASE            (BITFIELD_PHASE+1)
#define LOOP_PHASE          (IV_PHASE+1)
#define CSE_PHASE           (LOOP_PHASE+1)
#define COPY_PPG_PHASE      (CSE_PHASE+1)
#define CONST_PPG_PHASE     (COPY_PPG_PHASE+1)
#define CNTRL_FOLDING_PHASE (CONST_PPG_PHASE+1)
#define REG_ALLOC_PHASE     (CNTRL_FOLDING_PHASE+1)
#define UNROLL_PHASE        (REG_ALLOC_PHASE+1)
#define BB_MERGE_PHASE      (UNROLL_PHASE+1)
#define AUTO_INLINING_PHASE (BB_MERGE_PHASE+1) 
#define NEW_OPT_PHASE       (AUTO_INLINING_PHASE+1)
#define COMPLEX_PHASE       (NEW_OPT_PHASE+1)
#define BUFFERING_PHASE     (COMPLEX_PHASE+1)
#define ALGEBRA_PHASE       (BUFFERING_PHASE+1)
#define DEBUG_REFERENCES    (ALGEBRA_PHASE+1) 
#define DEBUG_TYPE_CHECK    (DEBUG_REFERENCES+1)
#define PLUS_IV             (DEBUG_TYPE_CHECK+1)
#define REASSOC_PHASE       (PLUS_IV+1)
#define DEBUG_COMPOSITE_BREAK (REASSOC_PHASE+1)
#define TAIL_REC_PHASE      (DEBUG_COMPOSITE_BREAK+1)
#define NORM_PHASE	    (TAIL_REC_PHASE+1)
#define PAR_PHASE           (NORM_PHASE+1)
#define RENAME_PHASE        (PAR_PHASE+1)
#define REDUCTION_PHASE     (RENAME_PHASE+1)
#define MVL_PHASE	    (REDUCTION_PHASE+1)
#define LOOP_DIST_PHASE     (MVL_PHASE+1)
#define IVSUB_PHASE	    (LOOP_DIST_PHASE+1)
#define	INLINEPPG_PHASE     (IVSUB_PHASE+1)
#define DDINT_PHASE         (INLINEPPG_PHASE+1)
#define FASSOC_PHASE        (DDINT_PHASE+1)
#define FUSION_PHASE        (FASSOC_PHASE+1)
#define ELIMINATE_PHASE     (FUSION_PHASE+1)
#define LFAST_PHASE         (ELIMINATE_PHASE+1)
#define RESTRICT            (LFAST_PHASE+1)
#define	PRIVATE_PHASE       (RESTRICT+1)
#define SCALARREP_PHASE     (PRIVATE_PHASE+1)
#define TILE_PHASE          (SCALARREP_PHASE+1)
#define UJAM_PHASE          (TILE_PHASE+1)
#define DDREFS_PHASE        (UJAM_PHASE+1)
#define SPLIT_PHASE         (DDREFS_PHASE+1)
#define NEWDF_PHASE	    (SPLIT_PHASE+1)
#define INVCC_PHASE	    (NEWDF_PHASE+1)
#define SPROF_PHASE	    (INVCC_PHASE+1)
#define RESTRICT_G          (SPROF_PHASE+1)
#define BACK_PHASE          (RESTRICT_G+1)
#define PMATCH_PHASE        (BACK_PHASE+1)
#define REDUCE_PHASE        (PMATCH_PHASE+1)
#define DEAD_PHASE          (REDUCE_PHASE+1)
#define PDE_PHASE           (DEAD_PHASE+1)
#define REASSOC2_PHASE      (PDE_PHASE+1)
#define DISTR_REASSOC_PHASE (REASSOC2_PHASE+1)
#define HEIGHT_REASSOC_PHASE (DISTR_REASSOC_PHASE+1)
#define ANSI_ALIAS          (HEIGHT_REASSOC_PHASE+1)
#define GDDR_PHASE          (ANSI_ALIAS+1)
#define ALGASSOC_PHASE      (GDDR_PHASE+1)
#define PERFECT_PHASE       (ALGASSOC_PHASE+1)
#define EXT_TAIL_REC        (PERFECT_PHASE+1)
#define RARRAY_PHASE	    (EXT_TAIL_REC+1)
#define MVLSCALAR_PHASE     (RARRAY_PHASE+1)
#define YAS_PHASE	    (MVLSCALAR_PHASE+1)
#define PF_PHASE	    (YAS_PHASE+1)
#define LIBCALLS_PHASE	    (PF_PHASE+1)
#define COND_ELIM_PHASE	    (LIBCALLS_PHASE+1)
#define MPRIVATE_PHASE      (COND_ELIM_PHASE+1)
#define VECTOR_PHASE	    (MPRIVATE_PHASE+1)
#define WHOLE_PHASE	    (VECTOR_PHASE+1)
#define BOPT_PHASE          (WHOLE_PHASE+1)
#define INVCCEXP_PHASE      (BOPT_PHASE+1)
#define BMERGE_PHASE        (INVCCEXP_PHASE+1)
#define BCOPY_PHASE	    (BMERGE_PHASE+1)
#define CROSS_ITER_CSE	    (BCOPY_PHASE+1)
#define DATA_ACCESS         (CROSS_ITER_CSE+1)
#define IPA_PHASE           (DATA_ACCESS+1)
#define V9OPT               (IPA_PHASE+1)
#define COND_ELIM_ASSERT    (V9OPT+1)
#define CONTRACT_PHASE      (COND_ELIM_ASSERT+1)
#define SYMBOL_PHASE        (CONTRACT_PHASE+1)
#define FUSION2_PHASE	    (SYMBOL_PHASE+1)
#define NEW_LDSTR 	    (FUSION2_PHASE+1)
#define REVERSAL_PHASE      (NEW_LDSTR+1)
#define HOIST_PHASE	    (REVERSAL_PHASE+1)
#define PPG2                (HOIST_PHASE+1)
#define SINCOS_EL           (PPG2+1)
#define FILTERADDR_PHASE    (SINCOS_EL+1)
#define PARALLEL_PHASE	    (FILTERADDR_PHASE+1)
#define IVEL_PHASE          (PARALLEL_PHASE+1)
#define GLOBAL_HOIST_PHASE  (IVEL_PHASE+1)
#define PCG_PHASE           (GLOBAL_HOIST_PHASE+1)
#define LAZY_PHASE          (PCG_PHASE+1)
#define TALIAS_PHASE        (LAZY_PHASE+1)
#define JAVA_PHASE          (TALIAS_PHASE+1)
#define REGION_PHASE        (JAVA_PHASE+1)
#define LOOP_PEELING_PHASE  (REGION_PHASE+1)
#define LOOP_REFORM_PHASE   (LOOP_PEELING_PHASE+1)
#define LOOP_SHIFTING_PHASE (LOOP_REFORM_PHASE+1)
#define LOOP_COLLAPSING_PHASE (LOOP_SHIFTING_PHASE+1)
#define MV_PHASE	    (LOOP_COLLAPSING_PHASE+1)
#define MEM_MERGE_PHASE     (MV_PHASE+1)
#define SHORT_LDST_PHASE    (MEM_MERGE_PHASE + 1)
#define THR_PHASE           (SHORT_LDST_PHASE + 1)
#define FUNCP_CLONE_PHASE   (THR_PHASE + 1)
#define INLINE_PHASE        (FUNCP_CLONE_PHASE + 1)
#define CLONE_PHASE         (INLINE_PHASE + 1)
#define ALIAS_PHASE         (CLONE_PHASE + 1)
#define IPA_ASM             (ALIAS_PHASE + 1)
#define IVSUB_OLD_PHASE	    (IPA_ASM+1)
#define IVSUB_IDF_PHASE     (IVSUB_OLD_PHASE+1)
#define NORMALIZE_IR_PHASE  (IVSUB_IDF_PHASE+1)
#define IPA_PPG_PHASE       (NORMALIZE_IR_PHASE + 1)
#define CONST_ARRAY_PPG_PHASE (IPA_PPG_PHASE+1)
#define SR_PHASE            (CONST_ARRAY_PPG_PHASE + 1)
#define DDDF_PHASE	    (SR_PHASE + 1)
#define IR_PHASE            (DDDF_PHASE + 1)
#define IVSUB3_PHASE        (IR_PHASE + 1)
#define ICALL_OPT_PHASE     (IVSUB3_PHASE + 1)
#define NORMALIZE_FORMAL_ACCESS_PHASE (ICALL_OPT_PHASE+1)
#define CHA_OPT_PHASE       (NORMALIZE_FORMAL_ACCESS_PHASE + 1)
#define IPPT_PHASE          (CHA_OPT_PHASE+1)
#define BLOCK_SCOPE_PHASE   (IPPT_PHASE + 1)
#define IROPT_DEBUG_PHASE   (BLOCK_SCOPE_PHASE + 1)
#define REVERSE_INVCC_PHASE (IROPT_DEBUG_PHASE + 1)
#define SSA_SYMBOL_PHASE    (REVERSE_INVCC_PHASE+1)
#define STACK_OPT_PHASE     (SSA_SYMBOL_PHASE+1)
#define CRIT_PATH_PHASE     (STACK_OPT_PHASE+1)
#define LOOP_NORM_PHASE     (CRIT_PATH_PHASE+1)
#define LOOP_UNIMODULAR_PHASE     (LOOP_NORM_PHASE+1)
#define OMP_SCOPT_PHASE     (LOOP_UNIMODULAR_PHASE + 1)
#define MEM_INSTRUMENT_PHASE (OMP_SCOPT_PHASE + 1)
#define SCALAR_REPL_PHASE   (MEM_INSTRUMENT_PHASE + 1)
#define LOOP_BOUND_MOTION_PHASE   (SCALAR_REPL_PHASE + 1)
#define LOOP_CONDITION_PHASE      (LOOP_BOUND_MOTION_PHASE + 1)
#define MEASUREMENT_PHASE         (LOOP_CONDITION_PHASE + 1)
#define MEM_MERGE_PATTERN_PHASE   (MEASUREMENT_PHASE + 1)
#define LOOP_IMPROVEMENT_PHASE    (MEM_MERGE_PATTERN_PHASE + 1)
#define PBRANCH_OPT_PHASE         (LOOP_IMPROVEMENT_PHASE + 1)
#define STATIC_ERR_CHECK_PHASE    (PBRANCH_OPT_PHASE + 1)
#define NORM_LDST_PHASE           (STATIC_ERR_CHECK_PHASE+1)
#define MICRO_VECTOR_PHASE        (NORM_LDST_PHASE+1)
#define SECOND_CLONE_PHASE        (MICRO_VECTOR_PHASE+1)
#define IPA_SYMBOL_PPG_PHASE	  (SECOND_CLONE_PHASE+1)
#define OPTINFO_PHASE             (IPA_SYMBOL_PPG_PHASE+1)
#define VALUE_PROFILING_PHASE     (OPTINFO_PHASE+1)
#define PASS_IR_TYPE_TREE         (VALUE_PROFILING_PHASE + 1)
#define FULLY_UNROLL_PHASE        (PASS_IR_TYPE_TREE+1)
#define BMERGE2_PHASE             (FULLY_UNROLL_PHASE+1)
#define BUILTIN_OPT_PHASE         (BMERGE2_PHASE+1)
#define MAX_PHASES                BUILTIN_OPT_PHASE 
int ar[MAX_PHASES + 1];

void foo() {
int i[((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0 + 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 ) + 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+ 1) + 1) +1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 ) +1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 )+1 ) + 1];
	int j = ((( 1 + 1) + 1)+1);
	((U8*)&r)[0] = *ptr++;
}

