/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2003 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.web.project.ui.wizards;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import org.openide.WizardDescriptor;
import org.openide.util.NbBundle;

/** First panel in the NewProject wizard. Used for filling in
 * name, and directory of the project.
 *
 * @author Petr Hrebejk
 */
public class PanelConfigureProjectVisual extends JPanel implements DocumentListener {
    
    private PanelConfigureProject panel;
    private JFileChooser chooser;
    
    private boolean ignoreProjectDirChanges;
    
    private boolean ignoreAntProjectNameChanges;
    
    private boolean noDir = true;
    
    /** Creates new form PanelInitProject */
    public PanelConfigureProjectVisual( PanelConfigureProject panel ) {
        this.panel = panel;
        initComponents();
                
        chooser = createChooser();
        jTextFieldProjectDir.setText( chooser.getCurrentDirectory().getPath() ); //NOI18N
        
        // Provide a name in the title bar.
        setName("J2SE Project"); // XXX I18N
        /*
        try {
            putClientProperty("WizardPanel_helpURL", // NOI18N
                new URL("nbresloc:/org/netbeans/modules/java/j2seproject/ui/TrivialVisualHelp.html")); // NOI18N
        } catch (MalformedURLException mfue) {
            throw new IllegalStateException(mfue.toString());
        }
        */
        
        
        // Register listener on the textFields to make the automatic updates
        jTextFieldProjectName.getDocument().addDocumentListener( this );
        jTextFieldProjectDir.getDocument().addDocumentListener( this );
        jTextFieldAntProjectName.getDocument().addDocumentListener( this );
    }
    
    
    public void addNotify() {
        super.addNotify();
        //same problem as in 31086, initial focus on Cancel button
        jTextFieldProjectName.requestFocus();
    }
    
    boolean valid() {
        String dirname = jTextFieldProjectDir.getText();
        if (dirname.length() == 0) {
            return false;
        }
        File[] kids = new File(dirname).listFiles();
        if (kids != null && kids.length > 0) {
            // Not empty.
            return false;
        }
        return jTextFieldProjectName.getText().length() > 0 &&
               jTextFieldAntProjectName.getText().length() > 0;
    }
    
    void store(WizardDescriptor d) {
        d.putProperty( /*XXX Define somewhere */ "projdir", new File(jTextFieldProjectDir.getText())); // NOI18N
        d.putProperty( /*XXX Define somewhere */ "displayName", jTextFieldProjectName.getText()); // NOI18N      
        d.putProperty( /*XXX Define somewhere */ "codename", jTextFieldAntProjectName.getText()); // NOI18N
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelProjectName = new javax.swing.JLabel();
        jTextFieldProjectName = new javax.swing.JTextField();
        jLabelProjectDir = new javax.swing.JLabel();
        jTextFieldProjectDir = new javax.swing.JTextField();
        jButtonBrowseProjectDir = new javax.swing.JButton();
        jLabelAntProjectName = new javax.swing.JLabel();
        jTextFieldAntProjectName = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jLabelProjectName.setText(org.openide.util.NbBundle.getMessage(PanelConfigureProjectVisual.class, "LBL_NWP1_ProjectName_Label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jLabelProjectName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(jTextFieldProjectName, gridBagConstraints);

        jLabelProjectDir.setText(org.openide.util.NbBundle.getMessage(PanelConfigureProjectVisual.class, "LBL_NWP1_ProjectDirectory_Label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 12, 0);
        add(jLabelProjectDir, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 12, 0);
        add(jTextFieldProjectDir, gridBagConstraints);

        jButtonBrowseProjectDir.setText(org.openide.util.NbBundle.getMessage(PanelConfigureProjectVisual.class, "LBL_NWP1_BrowseDirectory_Button"));
        jButtonBrowseProjectDir.setActionCommand("BROWSE");
        jButtonBrowseProjectDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventHandler(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 12, 0);
        add(jButtonBrowseProjectDir, gridBagConstraints);

        jLabelAntProjectName.setText(org.openide.util.NbBundle.getMessage(PanelConfigureProjectVisual.class, "LBL_NWP1_AntProjectName_Label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 12, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        add(jLabelAntProjectName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 12, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jTextFieldAntProjectName, gridBagConstraints);

    }//GEN-END:initComponents

    /** Currently only handles the "Browse..." button
     */
    private void eventHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventHandler
        String command = evt.getActionCommand();
        
        if ( "BROWSE".equals( command ) ) { // NOI18N
                
            if ( JFileChooser.APPROVE_OPTION == chooser.showDialog(this, NbBundle.getMessage( PanelConfigureProjectVisual.class, "LBL_NWP1_SelectDirectory_Button" ) ) ) { //NOI18N
                File projectDir = chooser.getSelectedFile();
                jTextFieldProjectDir.setText( projectDir.getAbsolutePath() );
                ignoreProjectDirChanges = true;
                if ( jTextFieldProjectName.getText().length() == 0  ) {
                    jTextFieldProjectName.setText( projectDir.getName() );                
                }
            }            
            panel.fireChangeEvent();
        }
        
    }//GEN-LAST:event_eventHandler

           
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseProjectDir;
    private javax.swing.JLabel jLabelAntProjectName;
    private javax.swing.JLabel jLabelProjectDir;
    private javax.swing.JLabel jLabelProjectName;
    private javax.swing.JTextField jTextFieldAntProjectName;
    private javax.swing.JTextField jTextFieldProjectDir;
    private javax.swing.JTextField jTextFieldProjectName;
    // End of variables declaration//GEN-END:variables

    
    private static JFileChooser createChooser() {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY );
        chooser.setAcceptAllFileFilterUsed( false );
        chooser.setName( "Select Project Directory" ); // XXX
        return chooser;
    }

    // Implementation of DocumentListener --------------------------------------
    
    public void changedUpdate( DocumentEvent e ) {
        updateTexts( e );
    }
    
    public void insertUpdate( DocumentEvent e ) {
        updateTexts( e );
    }
    
    public void removeUpdate( DocumentEvent e ) {
        updateTexts( e );
    }
    
    /** Handles changes in the Project name and project directory
     */
    private void updateTexts( DocumentEvent e ) {
        
        Document doc = e.getDocument();
        
        
        if ( doc == jTextFieldProjectName.getDocument() ) {
            // Change in the project name
            if ( !ignoreProjectDirChanges ) {
                // Update the directory
                String dirName = jTextFieldProjectDir.getText();
                String projectName = jTextFieldProjectName.getText();
                File dir = new File( dirName );
                File parent = noDir ? dir : dir.getParentFile();
                File newDir = new File( parent, projectName );
                jTextFieldProjectDir.setText( newDir.getAbsolutePath() );
                noDir = projectName.length() == 0;
            }
            if ( !ignoreAntProjectNameChanges ) {
                // Update the ant project name (replace spaces with '-')
                String s = jTextFieldProjectName.getText().replace(' ', '-' ); // NOI18N
                jTextFieldAntProjectName.setText( s );
            }            
        }
        else if ( doc == jTextFieldProjectDir.getDocument() &&
                  jTextFieldProjectDir.hasFocus() ) {
            // Change in the project directory
            ignoreProjectDirChanges = true;
        }
        else if ( doc == jTextFieldAntProjectName.getDocument() &&
                  jTextFieldAntProjectName.hasFocus() ) {
            // Change in the ant name
            ignoreAntProjectNameChanges = true;
        }
        
        
        panel.fireChangeEvent(); // Notify that the panel changed
        
    }
    
    
}
