#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
# Microsystems, Inc. All Rights Reserved.



#JPDADebugger
EXC_Deadlock=Deadlock in debugged process in {0} detected. Debugger shut down.
CTL_Debugger=Debugger
EXC_starting_debugger=while starting debugger
EXC_While_create_debuggee=Exception while starting debugger: \nCannot start process {0}.\n{1}
EXC_Cannot_find_launcher=Exception while starting debugger: \nCan not find {0} debugger launcher.
EXC_Cannot_find_attaching_launcher=Exception while starting debugger: \nCan not find {0} attaching debugger launcher.
EXC_Cannot_find_empty_local_port=Exception while starting debugger: \nCan not find empty local port.\n{0}
EXC_Unknown_transport_type=Exception while starting debugger: \nUnknown transport type {0}.
EXC_While_connecting_to_debuggee=Exception while starting debugger: \nCannot connect to remote VM.\n{0}
EXC_while_finding_class=while finding class
CTL_No_such_class=No such class
EXC_cannt_find_main_method=Cannot find main method
CTL_Debugger_end=Debugger session finished
EXC_Editor=Exception occurred in the Editor
CTL_Cannot_set_breakpoint=Cannot set the breakpoint
CTL_Cannot_clear_breakpoint=Cannot clear the breakpoint
CTL_Thread=Thread
CTL_stopped_at=stopped at
CTL_line=line
CTL_unavailable_source_file=unavailable source file
CTL_Thread=Thread
EXC_Debugger=Debugger exception
CTL_Exception_event=An exception event occurred in the debugged process
CTL_Thread_death_event=Thread death event
CTL_Process_death_event=Process death event
CTL_Thread_stopped=Thread {0} stopped at {1}.{2} line {3}.
CTL_Thread_stopped_no_source=Thread {0} stopped at {1}.{2} line {3} - unavailable source file.
CTL_Debugger_starting=Debugger starting
CTL_Debugger_running=Debugger running
CTL_Debugger_version=Default debugger (JPDA)
CTL_Connecting_to_shmem_noargs=Connecting through shared memory
CTL_Connecting_to_shmem=Connecting through shared memory block {0}
CTL_Connecting_to_socket_noargs=Connecting through network
CTL_Connecting_to_socket=Connecting to {0}:{1}
CTL_Connecting_to=Connecting
CTL_Reconnecting_to_shmem_noargs=Reconnecting through shared memory
CTL_Reconnecting_to_shmem=Reconnecting through shared memory block {0}
CTL_Reconnecting_to_socket_noargs=Reconnecting through network
CTL_Reconnecting_to_socket=Reconnecting to {0}:{1}
CTL_Reconnecting_to=Reconnecting
CTL_No_Connector=No connector found
CTL_Connector=Connector: 
CTL_Transport=Transport: 
CTL_Stop_On_Main_print_text=Thread {threadName} stopped at {className}.{methodName} line {lineNumber}.


#TheThreadGroup
CTL_New_thread_group=Thread group created
CTL_New_thread=Thread created
CTL_Thread_destroyed=Thread destroyed
CTL_Thread_group_destroyed=Thread group destroyed
CTL_Thread_group_root=Threads

#TheVariable
EXC_Static=This version of the debugger does not support changing the value of static or local variables.
EXC_Wrong_format=Wrong variable format.
EXC_Value_cannt_be_set=Value cannot be set.
EXC_Value_cannt_be_set_info=Value cannot be set:
EXC_Unsupported_type=This version of the debugger does not support changing a value of this type.
EXC_Cannot_assign_to_expression=Value cannot be set, watch is an expression.
EXC_Wrong_type=Value cannot be set: invalid type.

#TheWatch
EXC_No_session=No session
CTL_No_context=No current context

#JPDADebuggerType
LAB_JPDADebuggerType=JPDA Debugging

#JPDADebuggerTypeBeanInfo
CTL_JPDADebuggerTypeName=JPDA Debugging

#JPDADebuggerModule
EXC_JPDA_not_found=The JPDA Debugger Module requires the jpda.jar files from Sun's distribution of JPDA to be installed\nas Java extensions. You can download JPDA from http://java.sun.com/products/jpda/. See the JPDA \nDebugger documentation for more information.
MSG_MissingJPDATitle=Info
PROP_OK=OK
PROP_URL=Show URL
PROP_JPDA_URL=http://java.sun.com/products/jpda/
CTL_Action_on_TI_find=Find source

#JPDADebuggerType
EXC_JPDA_not_installed=The JPDA module is not correctly installed. The standard debugger implementation will be launched.

#ExceptionBreakpoint
CTL_Exception_event_name_type_name=Exception
CTL_Exception_event_name_catched=Exception {0} caught
CTL_Exception_event_name_uncatched=Exception {0} uncaught
CTL_Exception_event_name=Exception {0}
PROP_Exception_class_name=Exception class name
HINT_Exception_class_name=Name of class (or superclass) of exception
PROP_Exception_type_name=Stop on
HINT_Exception_type_name=The type of action the breakpoint is set on.
CTL_Exception_type_catched=Exception caught
CTL_Exception_type_uncatched=Exception uncaught
CTL_Exception_type_both=Exception caught or uncaught

#ExceptionBreakpointPanel
CTL_Exception_class_name=Exception class name: 
CTL_Exception_class_name_description=(Enter full name of class of Exception or Error, e.g.: java.lang.InternalError)
CTL_Exception_stop_on=Stop on: 
CTL_Exception_catch=Exception catch
CTL_Exception_uncatch=Exception uncatch
CTL_Exception_both=Exception catch or uncatch

#VariableBreakpoint
CTL_Variable_event_type_name=Variable
CTL_Variable_modification_event_name=Variable {0}.{1} modification
CTL_Variable_access_event_name=Variable {0}.{1} access
CTL_Variable_print_name=Variable {variableName} {action} ({variableValue}).
CTL_Access=access
CTL_Modification=modification
PROP_breakpoint_class_name=Class name
HINT_breakpoint_class_name=Name of the class containing this breakpoint.
PROP_breakpoint_field_name=Field name
HINT_breakpoint_field_name=Name of the field containing this breakpoint.
PROP_breakpoint_type_name=Stop on
HINT_breakpoint_type_name=The type of action this breakpoint is set on.
CTL_Breakpoint_type_access_value=Variable access
CTL_Breakpoint_type_modification_value=Variable modification

#VariableBreakpointPanel
CTL_Variable_access=variable access
CTL_Variable_modification=variable modification
CTL_Variable_class_name=Class name: 
CTL_Variable_field_name=Field name: 
CTL_Variable_stop_on=Stop on: 


#MethodBreakpoint
PROP_breakpoint_class_name=Class name
HINT_breakpoint_class_name=Name of the class containing this breakpoint.
PROP_breakpoint_method_name=Method Name
HINT_breakpoint_method_name=Name of the method this breakpoint is set on, if applicable.
PROP_breakpoint_all_methods=All methods
# [PENDING] ??? please add comments to bundle file
# hint for "all methods" property - property of breakpoint on method.
# if this property is true, breakpoints are active on all methods in this class (classes).
HINT_breakpoint_all_methods=Set breakpoints on all methods in the selected classes.
CTL_Method_event_name=Method {0}.{1}
CTL_All_method_event_name=Methods in {0}

#MethodBreakpointPanel
CTL_All_methods=All methods for given classes
CTL_Class_name=Class name: 
CTL_Method_name=Method name: 

#ThreadBreakpoint
PROP_breakpoint_type=Set on
HINT_breakpoint_type=The type of action this breakpoint is set on.
CTL_Property_type_start_name=Thread start
CTL_Property_type_death_name=Thread death
CTL_Property_type_both_name=Thread start or death
CTL_Thread_event_type_name=Thread
CTL_Thread_start_event_name=Thread start
CTL_Thread_death_event_name=Thread death
CTL_Thread_event_name=Thread start / death
CTL_Thread_print_name=Thread {threadName} {action}.
CTL_Started=started
CTL_Death=death

#ThreadBreakpointPanel
CTL_Thread_start=Thread start
CTL_Thread_death=Thread death
CTL_Thread_both=Thread start or death
CTL_Thread_Set_breakpoint_on=Set breakpoint on: 

#ClassBreakpoint
PROP_class_filter=Class filter
HINT_class_filter=Class filter
PROP_class_exclusion_filter=Exclusion filter
# [PENDING] not very useful hint...
HINT_class_exclusion_filter=Select whether this class filter is exclusive.
PROP_class_type=Set breakpoint on
HINT_class_type=The type of action the breakpoint is set on.
CTL_Breakpoint_type_class_prepare=Class prepare
CTL_Breakpoint_type_class_unload=Class unload
CTL_Breakpoint_type_class_both=Class prepare or unload
CTL_Class_event_type_name=Class
CTL_Class_prepare_event_name=Class {0} prepare
CTL_Class_unload_event_name=Class {0} unload
CTL_Class_event_name=Class {0} prepare / unload
CTL_Class_print_name=Class {className} {action}
CTL_Prepared=prepared
CTL_Unload=unload

#ClassBreakpointPanel
CTL_Class_filter=Class filter: 
CTL_Class_exclusion_filter=Exclusion filter
CTL_Class_breakpoint_type=Breakpoint set on: 
CTL_Class_filter_hint=Set exclusion / non-exclusion filter for classes
CTL_Class_prepare=Class prepare
CTL_Class_unload=Class unload
CTL_Class_both=Class prepare or unload

