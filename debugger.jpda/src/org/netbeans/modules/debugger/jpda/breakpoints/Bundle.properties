    #                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
# Microsystems, Inc. All Rights Reserved.


#StopAction
PROP_stop=Suspend Debugging
HINT_stop=If True, suspends debugging at breakpoint.

#DebuggerViews - tooltips
CTL_All_in_one_view=All in One
CTL_Sessions_view=Sessions
CTL_Breakpoints_view=Breakpoints
CTL_Threads_view=Threads
CTL_Call_stack_view=Call Stack
CTL_Watches_view=Watches
CTL_Variables_view=Local Variables
CTL_Classes_view=Classes
CTL_Properties_view=Properties
CTL_Variables_filter_view=Variables filter
CTL_Toolbar_view=Toolbar

#ProcessDebuggerTypeBeanInfo
PROP_DEBUGGER_PROCESS=External Process
HINT_DEBUGGER_PROCESS=The external process to run to execute the class; typically the Java launcher.
PROP_Classic=Classic Switch
HINT_Classic=Switch between Classic / HotSpot VM.
PROP_RepositoryPath=Filesystems Path
HINT_RepositoryPath=The class path corresponding to the directories and JARs in the user's Filesystems marked for execution.
PROP_LibraryPath=Library Path
HINT_LibraryPath=The class path containing libraries and modules used by the IDE.
PROP_ClassPath=Class Path
HINT_ClassPath=The class path used by the IDE, to be transferred to the external process.
PROP_BootClassPath=Boot Class Path
HINT_BootClassPath=The boot class path of Java, including installed extensions.
PROP_WorkingDirectory=Working Directory
HINT_WorkingDirectory_RO=NOTE: You need JDK 1.3 (release version) to use this feature.
HINT_WorkingDirectory_RW=The working directory in which to start the process. "null" uses the IDE's directory.
PROP_JIT=JIT settings
HINT_JIT=JIT settings
PROP_DEBUGGER_TYPE_NAME=Name
HINT_DEBUGGER_TYPE_NAME=Name of Debugger type


#JavaDebuggerType
LAB_DefaultDebuggerType=Java Debugging
EXC_Debugger_not_installed=No debugger implementation installed

#JavaDebuggerTypeBeanInfo
CTL_DefaultDebuggerTypeName=Java Debugging
PROP_DEBUGGER_TYPE=Implementation
HINT_DEBUGGER_TYPE=One of the installed debugger implementations

#this value is used in Add Breakpoint dialog in combo Debugger Type
CTL_Java_breakpoint_events_cathegory_name=Java

#SetMethodBreakpoint action
CTL_add_method_breakpoint=Add Method Breakpoint

#JavaDebugger
CTL_Debugger_starting=Debugger starting
CTL_Debugger_running=Debugger running


#JavaLineBreakpointEvent
PROP_breakpoint_source_name=Source Name
HINT_breakpoint_source_name=Name of the source containing this breakpoint.
PROP_breakpoint_line_number=Line Number
HINT_breakpoint_line_number=The line number this breakpoint is set on, if applicable.
CTL_Line_event_type_name=Line
CTL_Line_event_name=Line {0}:{1}
#Used when the source name is taken from Line
# {0} = line display name taken from Line.getDisplayName(), e.g. "test/Sample.java:15"
CTL_Line_event_name_Line=Line {0}

#JavaLineBreakpointPanel
CTL_Line_number=Line Number:
CTL_Line_number_mnemonic=L
ACSD_CTL_Line_number=
CTL_Not_set=<not set>
CTL_Bad_line_number=Bad line number.\n Line number must be greater than 0.
ACSD_JavaLineBreakpointPanel=

#MethodBreakpointEvent
PROP_breakpoint_class_name=Class Name
HINT_breakpoint_class_name=Name of the class containing this breakpoint.
PROP_breakpoint_method_name=Method Name
HINT_breakpoint_method_name=Name of the method this breakpoint is set on, if applicable.
HINT_breakpoint_apply_to_anonymous_inner=Apply the breakpoint also to anonymous inner classes of the specified class?
PROP_breakpoint_apply_to_anonymous_inner=Anonymous inner classes
CTL_Method_event_type_name=Method
CTL_Method_event_name=Method {0}.{1}
CTL_Class_event=Class

#PrintAction
PROP_print_text=Print Text
#displayed in list of methods in dialog for creating method breakpoint
CTL_init_description=<init> (constructor)
#displayed in list of methods in dialog for creating method breakpoint
CTL_clinit_description=<clinit> (static initializer)

#When browsing through a call stack (up/down).
MSG_Call_stack_location_not_available=Call stack location {0} is not available.
#In the "Add Breakpoint" dialog, in the combo-box for entering package name.
CTL_Loading_package_names=Loading package names...
#In dialog for adding breakpoints.
CTL_searching=<searching...>
HINT_print_text=Text to be displayed when a breakpoint is reached.
CTL_Not_in_scope=Not in scope
CTL_Default_print_text=Breakpoint reached at line {lineNumber} in class {className} by thread {threadName}.
CTL_Default_method_print_text=Method {methodName} reached at line {lineNumber} in class {className} by thread {threadName}.
CTL_Default_exception_print_text=Exception {variableType} reached at line {lineNumber} in class {className} by thread {threadName}.
CTL_Default_run_to_cursor_print_text=Thread {threadName} stopped at {className}.{methodName} line {lineNumber}.

#ArrayFilter
PROP_base_index=First Index
HINT_base_index=First index of the field to be displayed
PROP_displayed_length=Maximum Length
HINT_displayed_length=Maximum number of fields to be displayed

#IntFilter
PROP_type=Display As
HINT_type=Display As
CTL_Type_DEC=Decimal
CTL_Type_HEX=Hexadecimal
CTL_Type_BIN=Binary
CTL_Type_OCT=Octal

#manifest's description entries
OpenIDE-Module-Name=JPDA Debugger
OpenIDE-Module-Display-Category=Debugging
OpenIDE-Module-Short-Description=Enables debugging with the JPDA debugger implementation.
OpenIDE-Module-Long-Description=The JPDA Debugger module enables you to debug applications using the Java Platform Debugging Architecture.
OpenIDE-Module-Package-Dependency-Message=The JPDA Debugger Module requires the jpda.jar files from Sun's distribution of JPDA to be installed as Java extensions. You can download JPDA from http://java.sun.com/products/jpda/. See the JPDA Debugger documentation for more information.

#JPDADebugger
EXC_Deadlock=Deadlock in debugged process in {0} detected. Debugger shut down.
CTL_Debugger=Debugger
EXC_starting_debugger=while starting debugger
EXC_While_create_debuggee=Exception while starting debugger: \nCannot start process {0}.\n{1}
EXC_Cannot_find_launcher=Exception while starting debugger: \nCan not find {0} debugger launcher.
EXC_Cannot_find_attaching_launcher=Exception while starting debugger: \nCan not find {0} attaching debugger launcher.
EXC_Cannot_find_empty_local_port=Exception while starting debugger: \nCan not find empty local port.\n{0}
EXC_Unknown_transport_type=Exception while starting debugger: \nUnknown transport type {0}.
EXC_While_connecting_to_debuggee=Exception while starting debugger: \nCannot connect to remote VM.\n{0}
EXC_while_finding_class=while finding class
CTL_No_such_class=No such class
EXC_cannt_find_main_method=Cannot find main method
CTL_Debugger_end=Debugger session finished
EXC_Editor=Exception occurred in the Editor
CTL_Cannot_set_breakpoint=Cannot set the breakpoint
CTL_Cannot_clear_breakpoint=Cannot clear the breakpoint
CTL_Thread=Thread
CTL_stopped_at=stopped at
CTL_line=line
CTL_unavailable_source_file=unavailable source file
CTL_Thread=Thread
EXC_Debugger=Debugger exception
CTL_Exception_event=An exception event occurred in the debugged process
CTL_Thread_death_event=Thread death event
CTL_Process_death_event=Process death event
CTL_Thread_stopped=Thread {0} stopped at {1}.{2} line {3}.
CTL_Thread_stopped_no_source=Thread {0} stopped at {1}.{2} line {3} - unavailable source file.
CTL_Debugger_paused=Debugger paused
CTL_Debugger_starting=Debugger starting
CTL_Debugger_running=Debugger running
CTL_Debugger_version=Default Debugger (JPDA)
CTL_Connecting_to_shmem_noargs=Connecting through shared memory
CTL_Connecting_to_shmem=Connecting through shared memory block {0}
CTL_Connecting_to_socket_noargs=Connecting through network
CTL_Connecting_to_socket=Connecting to {0}:{1}
CTL_Connecting_to=Connecting
CTL_Reconnecting_to_shmem_noargs=Reconnecting through shared memory
CTL_Reconnecting_to_shmem=Reconnecting through shared memory block {0}
CTL_Reconnecting_to_socket_noargs=Reconnecting through network
CTL_Reconnecting_to_socket=Reconnecting to {0}:{1}
CTL_Reconnecting_to=Reconnecting
CTL_Stop_On_Main_print_text=Thread {threadName} stopped at {className}.{methodName} line {lineNumber}.
CTL_VM_init_failed=VM initialization failed
CTL_Connection_established=Connection established
CTL_Default_run_to_cursor_print_text=Thread {threadName} stopped at {className}.{methodName} line {lineNumber}.

#TheThreadGroup
CTL_New_thread_group=Thread group created
CTL_New_thread=Thread created
CTL_Thread_destroyed=Thread destroyed
CTL_Thread_group_destroyed=Thread group destroyed
CTL_Thread_group_root=Threads

#TheVariable
EXC_Static=This version of the debugger does not support changing the value of static or local variables.
EXC_Wrong_format=Wrong variable format.
EXC_Value_cannt_be_set=Value cannot be set.
EXC_Value_cannt_be_set_info=Value cannot be set:
EXC_Unsupported_type=This version of the debugger does not support changing a value of this type.
EXC_Cannot_assign_to_expression=Value cannot be set, watch is an expression.
EXC_Wrong_type=Value cannot be set: invalid type.

#TheWatch
EXC_No_session=No session
CTL_No_context=No current context
CTL_Cannot_evaluate=Invalid expression

#JPDADebuggerType
LAB_JPDADebuggerType=JPDA Debugging

#JPDADebuggerTypeBeanInfo
CTL_JPDADebuggerTypeName=JPDA Debugging

#ExceptionBreakpoint
CTL_Exception_event_name_type_name=Exception
CTL_Exception_event_name_catched=Exception {0} caught
CTL_Exception_event_name_uncatched=Exception {0} uncaught
CTL_Exception_event_name=Exception {0}
PROP_Exception_class_name=Exception Class Name
HINT_Exception_class_name=Name of class (or superclass) of exception
#If local variables are not available.
CTL_Source_compiled_without_g=source compiled without -g option
#MethodBreakpoint
HINT_breakpoint_apply_to_anonymous_inner=Apply the breakpoint also to anonymous inner classes of the specified class?
PROP_breakpoint_apply_to_anonymous_inner=Anonymous Inner Classes

#Debugging via 'Start', unable to resolve hostname (network broken).
EXC_Cannot_establish_connection_to_VM=Cannot establish connection to the VM.
PROP_Exception_type_name=Stop On
HINT_Exception_type_name=The type of action the breakpoint is set on.
CTL_Exception_type_catched=Exception Caught
CTL_Exception_type_uncatched=Exception Uncaught
CTL_Exception_type_both=Exception Caught or Uncaught

#VariableBreakpoint
CTL_Variable_event_type_name=Variable
CTL_Variable_modification_event_name=Variable {0}.{1} modification
CTL_Variable_access_event_name=Variable {0}.{1} access
CTL_Variable_print_name=Variable {variableName} {action} ({variableValue}).
CTL_Access=access
CTL_Modification=modification
PROP_breakpoint_class_name=Class Name
HINT_breakpoint_class_name=Name of the class containing this breakpoint.
PROP_breakpoint_field_name=Field Name
HINT_breakpoint_field_name=Name of the field containing this breakpoint.
PROP_breakpoint_type_name=Stop On
HINT_breakpoint_type_name=The type of action this breakpoint is set on.
CTL_Breakpoint_type_access_value=Variable Access
CTL_Breakpoint_type_modification_value=Variable Modification

CTL_Break_on_field_modification_not_supported=Warning: Breakpoint on variable modification is not supported by the current VM.
CTL_Break_on_field_access_not_supported=Warning: Breakpoint on variable access is not supported by the current VM.
CTL_Break_on_field_not_supported=Warning: Breakpoint on variable access or modification is not supported by the current VM.

#MethodBreakpoint
PROP_breakpoint_class_name=Class Name
HINT_breakpoint_class_name=Name of the class containing this breakpoint.
PROP_breakpoint_method_name=Method Name
HINT_breakpoint_method_name=Name of the method this breakpoint is set on, if applicable.
PROP_breakpoint_all_methods=All Methods
# [PENDING] ??? please add comments to bundle file
# hint for "all methods" property - property of breakpoint on method.
# if this property is true, breakpoints are active on all methods in this class (classes).
HINT_breakpoint_all_methods=Set breakpoints on all methods in the selected classes.
CTL_Method_event_name=Method {0}.{1}
CTL_All_method_event_name=Methods in {0}

#ThreadBreakpoint
PROP_breakpoint_type=Set On
HINT_breakpoint_type=The type of action this breakpoint is set on.
CTL_Property_type_start_name=Thread Start
CTL_Property_type_death_name=Thread Death
CTL_Property_type_both_name=Thread Start or Death
CTL_Thread_event_type_name=Thread
CTL_Thread_start_event_name=Thread start
CTL_Thread_death_event_name=Thread death
CTL_Thread_event_name=Thread start / death
CTL_Thread_print_name=Thread {threadName} {action}.
CTL_Started=started
CTL_Death=death

#ClassBreakpoint
PROP_class_filter=Class Filter
HINT_class_filter=Class filter
PROP_class_exclusion_filter=Exclusion Filter
# [PENDING] not very useful hint...
HINT_class_exclusion_filter=Select whether this class filter is exclusive.
PROP_class_type=Set Breakpoint On
HINT_class_type=The type of action the breakpoint is set on.
CTL_Breakpoint_type_class_prepare=Class Prepare
CTL_Breakpoint_type_class_unload=Class Unload
CTL_Breakpoint_type_class_both=Class Prepare or Unload
CTL_Class_event_type_name=Class
CTL_Class_prepare_event_name=Class {0} prepare
CTL_Class_unload_event_name=Class {0} unload
CTL_Class_event_name=Class {0} prepare / unload
CTL_Class_print_name=Class {className} {action}
CTL_Prepared=prepared
CTL_Unload=unload

#LineBreakpoint
PROP_breakpoint_source_name=Source Name
HINT_breakpoint_source_name=Name of the source containing this breakpoint.
PROP_breakpoint_line_number=Line Number
HINT_breakpoint_line_number=The line number this breakpoint is set on, if applicable.

#Conditional breakpoints
CTL_Incorrect_condition=Incorrect condition
CTL_breakpoint_at=breakpoint at
PROP_condition=Condition
HINT_condition=Boolean expression determining if the debugger should stop on the breakpoint.

#May be displayed during action "Fix" (class redefinition at runtime).
EXC_No_class_files_found=No .class files found. Cannot redefine the class(es).

#May be displayed during action "Fix" (class redefinition at runtime).
EXC_Could_not_read_class_file=Error occured while reading file {0}.

#Used by action "Fix & Continue". Before a class is redefined, it is compiled (updated).
#This message is a name of the compiler task ("Finished Compile before fix [JPDA Debugger]").
MSG_Compile_before_fix=Compile before fix [JPDA Debugger]

#name of action "pop frames" in a context menu of a call stack line node
CTL_Pop_to_here_action_name=Pop To Here

#May be displayed when popping call stack frames (method calls).
MSG_Cannot_pop_native_frames=Cannot pop native method calls.

MSG_Old_frame_on_stack_title=Old Method on Stack

#Displayed during action "Fix" of the topmost frame is associated with any of the classes that were just swapped.
MSG_Old_frame_on_stack=The most recent call on the current stack belongs to one\nof the classes that you fixed. You can pop the call\nso that you will then call the new version.

#Used in dialog (see MSG_Old_frame_on_stack) - option "Pop the frame".
MSG_Old_frame_on_stack_pop_frame=&Pop Call

#Used in dialog (see MSG_Old_frame_on_stack) - option "Leave the frame".
MSG_Old_frame_on_stack_leave_frame=&Leave Call

#May be displayed during operation "Fix" if one or more classes could not be redefined.
EXC_Cannot_redefine_class=An error occured during class redefinition. Operation was cancelled.

#May be displayed during action "Fix".
MSG_Unsupported_class_definition_changes=The remote JVM is not able to handle some changes in a class definition.\nOperation was cancelled.

#Displayed in the Output Window in case that action "Fix" was successful.
MSG_Redefined_classes=The following classes were fixed:

#Displayed in the Output Window in case that the debugger could not find any ReferenceType to be redefined.
MSG_No_class_redefined=No class was fixed because none of classes to be fixed was loaded in the remote VM.

#JPDAThread
CTL_Thread_state_unknown=Unknown
CTL_Thread_state_zombie=Zombie
CTL_Thread_state_running=Running
CTL_Thread_state_sleeping=Sleeping
CTL_Thread_state_monitor=Monitor
CTL_Thread_state_wait=Wait
CTL_Thread_state_not_started=Not Started

#Displayed during operation "Fix" if the debugger cannot find .class files.
MSG_no_class_files_found=No .class files were found - cannot read bytecode.
