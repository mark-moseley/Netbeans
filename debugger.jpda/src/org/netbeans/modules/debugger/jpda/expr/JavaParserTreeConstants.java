/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

/* Generated By:JJTree: Do not edit this line. JavaParserTreeConstants.java */

package org.netbeans.modules.debugger.jpda.expr;

interface JavaParserTreeConstants
{
  public int JJTREFERENCETYPELIST = 0;
  public int JJTACTUALTYPEARGUMENT = 1;
  public int JJTIDENTIFIER = 2;
  public int JJTVOID = 3;
  public int JJTARRAYINITIALIZER = 4;
  public int JJTREFERENCETYPE = 5;
  public int JJTTYPEARGUMENTS = 6;
  public int JJTPRIMITIVETYPE = 7;
  public int JJTRESULTTYPE = 8;
  public int JJTNAME = 9;
  public int JJTCLASSORINTERFACETYPE = 10;
  public int JJTEXPRESSION = 11;
  public int JJTASSIGNMENTOPERATOR = 12;
  public int JJTCONDITIONALEXPRESSION = 13;
  public int JJTCONDITIONALOREXPRESSION = 14;
  public int JJTCONDITIONALANDEXPRESSION = 15;
  public int JJTINCLUSIVEOREXPRESSION = 16;
  public int JJTEXCLUSIVEOREXPRESSION = 17;
  public int JJTANDEXPRESSION = 18;
  public int JJTEQUALITYEXPRESSION = 19;
  public int JJTINSTANCEOFEXPRESSION = 20;
  public int JJTRELATIONALEXPRESSION = 21;
  public int JJTSHIFTEXPRESSION = 22;
  public int JJTADDITIVEEXPRESSION = 23;
  public int JJTMULTIPLICATIVEEXPRESSION = 24;
  public int JJTUNARYEXPRESSION = 25;
  public int JJTPREINCREMENTEXPRESSION = 26;
  public int JJTPREDECREMENTEXPRESSION = 27;
  public int JJTUNARYEXPRESSIONNOTPLUSMINUS = 28;
  public int JJTPOSTFIXEXPRESSION = 29;
  public int JJTCASTEXPRESSION = 30;
  public int JJTPRIMARYEXPRESSION = 31;
  public int JJTPRIMARYPREFIX = 32;
  public int JJTPRIMARYSUFFIX = 33;
  public int JJTLITERAL = 34;
  public int JJTBOOLEANLITERAL = 35;
  public int JJTNULLLITERAL = 36;
  public int JJTARGUMENTS = 37;
  public int JJTARGUMENTLIST = 38;
  public int JJTALLOCATIONEXPRESSION = 39;
  public int JJTARRAYDIMSANDINITS = 40;


  public String[] jjtNodeName = {
    "ReferenceTypeList",
    "ActualTypeArgument",
    "Identifier",
    "void",
    "ArrayInitializer",
    "ReferenceType",
    "TypeArguments",
    "PrimitiveType",
    "ResultType",
    "Name",
    "ClassOrInterfaceType",
    "Expression",
    "AssignmentOperator",
    "ConditionalExpression",
    "ConditionalOrExpression",
    "ConditionalAndExpression",
    "InclusiveOrExpression",
    "ExclusiveOrExpression",
    "AndExpression",
    "EqualityExpression",
    "InstanceOfExpression",
    "RelationalExpression",
    "ShiftExpression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "UnaryExpression",
    "PreIncrementExpression",
    "PreDecrementExpression",
    "UnaryExpressionNotPlusMinus",
    "PostfixExpression",
    "CastExpression",
    "PrimaryExpression",
    "PrimaryPrefix",
    "PrimarySuffix",
    "Literal",
    "BooleanLiteral",
    "NullLiteral",
    "Arguments",
    "ArgumentList",
    "AllocationExpression",
    "ArrayDimsAndInits",
  };
}
