<?xml version="1.0"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2002 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="core/settings logging tests compilers and executors" basedir="." default="all">

    <!-- =================== -->
    <!-- Setting classpathes -->
    <!-- =================== -->
    
    <target name="set_classpath" depends="prepare-compile-classpath,prepare-codetest-classpath">
    
        <!-- During filling classpathes remember that only <module>/test 
             is checked out during automated test execution so <module>/src 
             or <module>/netbeans isn't available. If you need to add something 
	     from <module>/src or <module>/netbeans to classpath, 
	     look below to "setting advanced claspathes" part of this target.
          -->
    
        <!-- List of directories where jars will be searched. -->
        <property name="xtest.extra.jars.path" location=""/>
    
        <!-- This jars is used for compilation, execution codetests and also for
             execution ide tests (it means this classpath will be mounted in repository).
             You can also write only name of jar or zip file, not in which directory it is and 
             this file will be searched in directories specified by property xtest.extra.jars.path 
                 example: <property name="xtest.extra.jars" value="jemmy.jar;jelly.jar"/>
          -->
        <property name="xtest.extra.jars" value=""/>
   
        <!-- These jars will be copied to directory ${netebans.home}/lib/ext.
	     Again you can write only name of jar or zip file, not in which directory it is and 
             this file will be searched in directories specified by property xtest.extra.jars.path 
                 example: <property name="xtest.extra.jars.ide" value="jdbc_driver1.zip;jdbcd_river2.jar"/>
          -->
        <property name="xtest.extra.jars.ide" value=""/>


        <!-- Arguments which will be added into commandline of starting IDE. 
                 example: <property name="xtest.ide.commandline.suffix" value="-J-Dxtest.useclassloader=org.openidex.util"/>
          -->
        <property name="xtest.ide.commandline.suffix" value=""/>
  	
        <!-- =========================== -->
        <!-- Setting avanced classpathes -->
        <!-- =========================== -->
    
        <!-- If you need to add something from <module>/src or <module>/netbeans
             to classpath use target prepare-compile-classpath or prepare-codetest-classpath
             which fills path according to property xtest.source.location. This property
             can have values "src" (compilation and execution against sources), "jar" (compil.
             and execut. against jars) or "ide" (compil. and execut. against installed IDE).
             "ide" mode is used during automated test execution so it has to be always supported. 
          -->
    
	<!-- This classpath is beside jars in xtest.extra.jars also used for compilation, 
	     but it depends on property xtest.source.location which classpath will be used.
	     Fill apropriate classpathes in targets "${xtest.source.location}compile-classath". -->
	<property name="compiletest.classpath" refid="compiletest.classpath"/>
            
	<!-- This classpath is beside jars in xtest.extra.jars also used for execution codetests,
	     but it depends on property xtest.source.location which classpath will be used.
	     Fill apropriate classpathes in targets "${xtest.source.location}test-classath". -->
	<property name="codetest.classpath" refid="codetest.classpath"/>
        
    </target>
    
    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->
    
    <target name="unit-compiler" depends="set_classpath">
        <ant dir="." antfile="${xtest.module_harness.antfile}"
             target="buildtests">
           <!-- This property contains directories to compile.
    	        These directories will be compiled separately. 
                   example: <property name="compile.srcdir" value="unit/src1;unit/src2"/>
             -->
           <property name="compile.srcdir" value="unit/src"/>
	   <property name="compile.excludes" value="**/data/**"/>
       </ant>
    </target>

    <!-- ========= -->
    <!-- Executors -->
    <!-- ========= -->
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <!-- This target executes tests inside IDE -->
    <target name="runidetest" depends="set_classpath">
        <ant dir="." antfile="${xtest.module_harness.antfile}"
             target="test">
           <property name="xtest.exectype" value="ide"/>
        </ant>
    </target>
    
    <!-- This target is executed from test-executor in newly created Project -->
    <!-- Name of this task is defined in cfg-xxx.xml -->
    <!-- This target executes standalone tests -->
    <target name="runcodetest" depends="set_classpath">
        <ant dir="." antfile="${xtest.module_harness.antfile}"
             target="test">
           <property name="xtest.exectype" value="code"/>
        </ant>
    </target>


    <!-- =============================================================
        Following targets are for "advanced" users who needs more 
        compilacated classpathes, which depends on way of execution.
        ============================================================= -->

    <!-- this "switch" will decide how to create classpath -->
    <target name="which-classpath">
        <condition property="jarcode.classpath">
            <equals arg1="${xtest.source.location}" arg2="jar"/>
        </condition>
        <condition property="srccode.classpath">
            <equals arg1="${xtest.source.location}" arg2="src"/>
        </condition>
        <condition property="idecode.classpath">
            <equals arg1="${xtest.source.location}" arg2="ide"/>
        </condition>
    </target>

    <!-- ========================= -->
    <!-- Classpath for compilation -->
    <!-- ========================= -->
    
    <target name="prepare-compile-classpath"
         depends="jarcompile-classpath,srccompile-classpath,idecompile-classpath"/>
    
    <target name="jarcompile-classpath" depends="which-classpath" if="jarcode.classpath">
        <echo message="Using jars classpath for compilation."/>
    	<!-- this classpath will be used for compiling tests against jars -->
	<path id="compiletest.classpath">        
	    <!-- If you need e.g. openide.jar, write this:
	           <pathelement location="../netbeans/lib/openide.jar"/>
 	      -->
            <pathelement location="../../../openide/openide-13javac-workaround.jar"/>
            <fileset dir="../../../openide/netbeans/lib">
              <include name="openide*.jar" />
            </fileset>
            <pathelement location="../netbeans/modules/autoload/core-settings.jar"/>
	</path>
    </target>
        
    <target name="srccompile-classpath" depends="which-classpath" if="srccode.classpath">
        <echo message="Using srcs classpath for compilation."/>
    	<!-- this classpath will be used for compiling tests against sources -->
    	<path id="compiletest.classpath">        
    	    <!-- If you need e.g. openide.jar, write this:
	           <pathelement location="../netbeans/lib/openide.jar"/>
	         If you need e.g. sources of your tested module, write this:
	           <pathelement location="../src"/>
 	      -->
	    <pathelement location="../src"/>
            <pathelement location="../../../openide/openide-13javac-workaround.jar"/>
            <fileset dir="../../../openide/netbeans/lib">
              <include name="openide*.jar" />
            </fileset>
	</path>
    </target>
    
    <!-- we're not using this, because mymodule is not a part of IDE :-) -->    
    <target name="idecompile-classpath" depends="which-classpath" if="idecode.classpath">
        <echo message="Using IDE classpath for compilation."/>
    	<!-- this classpath will be used for compiling tests against installed IDE -->
    	<path id="compiletest.classpath">   
    	    <!-- If you need e.g. openide.jar, write this:
	           <pathelement location="${netbeans.home}/lib/openide.jar"/>
	         If you need e.g. your tested module, write this:
	           <pathelement location="${netbeans.home}/modules/somemodule.jar"/>
 	      -->
            <pathelement location="../netbeans/modules/autoload/core-settings.jar"/>
            <pathelement location="../../../openide/openide-13javac-workaround.jar"/>
            <fileset dir="../../../openide/netbeans/lib">
              <include name="openide*.jar" />
            </fileset>
   	</path>
    </target>
    
    <!-- ================================== -->
    <!-- Classpath for execution code tests -->
    <!-- ================================== -->
    
    <target name="prepare-codetest-classpath" 
            depends="jartest-classpath,srctest-classpath,idetest-classpath"/>
    
    <target name="jartest-classpath" depends="which-classpath" if="jarcode.classpath">
        <echo message="Using jars classpath."/>
        <!-- this classpath will be used for executing tests against jars -->
	<path id="codetest.classpath">
       	    <!-- If you need e.g. openide.jar, write this:
	           <pathelement location="../netbeans/lib/openide.jar"/>
 	      -->
            <pathelement location="../netbeans/modules/autoload/core-settings.jar"/>
            <pathelement location="${netbeans.home}/lib/openide.jar"/>
            <fileset dir="${netbeans.home}/lib">
                    <include name="core.jar"/>
                    <include name="ext/*.jar"/>
            </fileset>
    	</path>
    </target>
        
    <target name="srctest-classpath" depends="which-classpath" if="srccode.classpath">
        <echo message="Using srcs classpath."/>
        <!-- this classpath will be used for executing tests against sources -->
    	<path id="codetest.classpath">
	    <!-- If you need e.g. openide.jar, write this:
	           <pathelement location="../netbeans/lib/openide.jar"/>
	         If you need e.g. sources of your tested module, write this:
	           <pathelement location="../src"/>
 	      -->
            <pathelement location="../src"/>
            <pathelement location="../netbeans/modules/autoload/core-settings.jar"/>
            <pathelement location="${netbeans.home}/lib/openide.jar"/>
            <fileset dir="${netbeans.home}/lib">
                    <include name="core.jar"/>
                    <include name="ext/*.jar"/>
            </fileset>
    	</path>
    </target>


    <target name="idetest-classpath" depends="which-classpath" if="idecode.classpath">
        <echo message="Using IDE classpath."/>
        <!-- this classpath will be used for executing tests against installed IDE -->
    	<path id="codetest.classpath">
	    <!-- If you need e.g. openide.jar, write this:
	           <pathelement location="${netbeans.home}/lib/openide.jar"/>
	         If you need e.g. your tested module, write this:
	           <pathelement location="${netbeans.home}/modules/somemodule.jar"/>
 	      --> 
            <pathelement location="${netbeans.home}/modules/autoload/core-settings.jar"/>
            <pathelement location="${netbeans.home}/lib/openide.jar"/>
            <fileset dir="${netbeans.home}/lib">
                    <include name="core.jar"/>
                    <include name="ext/*.jar"/>
            </fileset>
    	</path>
    </target>
    

</project>