<?xml version="1.0" encoding="UTF-8"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
Microsystems, Inc. All Rights Reserved.
-->
<project name="suite" basedir=".">

    <target name="-taskdefs" unless="harness.taskdefs.done">
        <dirname property="harness.dir" file="${suite.file}"/>
        <taskdef classpath="${harness.dir}/tasks.jar" resource="org/netbeans/nbbuild/taskdefs.properties"/>
        <property name="harness.taskdefs.done" value="true"/>
    </target>
    
    <target name="-init" depends="-taskdefs">
        <property file="nbproject/private/private.properties"/>
        <property file="nbproject/project.properties"/>
        <sortsuitemodules unsortedmodules="${modules}" sortedmodulesproperty="modules.sorted"/>
        <property name="cluster" location="build/cluster"/>
        <echo level="verbose">Suite in ${basedir} with target platform ${netbeans.dest.dir}, build cluster ${cluster}, and sorted modules ${modules.sorted}</echo>
    </target>

    <target name="build" depends="-init,branding" description="Build all modules in the suite.">
        <subant target="netbeans" buildpath="${modules.sorted}" inheritrefs="false" inheritall="false"/>
        <mkdir dir="${cluster}/config/Modules"/>
        <createmodulexml xmldir="${cluster}/config/Modules">
            <autoload dir="${netbeans.dest.dir}">
                <custom classpath="${harness.dir}/tasks.jar" classname="org.netbeans.nbbuild.ModuleSelector" >
                    <param name="excludeModules" value="${disabled.modules}" />
                    <param name="excluded" value="true" />
                </custom>
            </autoload>
        </createmodulexml>
    </target>
    
    <target name="build-zip" depends="build" description="Builds zip distribution of the suite and selected modules from the platform" >
        <property name="disabled.modules" value="" />
        <property name="disabled.clusters" value="" />
        <property name="application.name" value="nbbasedapp" />
        
        <pathconvert property="zip.platform.update.tracking" >
            <path >
                <fileset dir="${netbeans.dest.dir}" >
                    <include name="**/update_tracking/*.xml" />
                </fileset>
            </path>
        </pathconvert>

        <selector id="zip.platform.included.files" >
            <custom classpath="${harness.dir}/tasks.jar" classname="org.netbeans.nbbuild.ModuleSelector" >
                <param name="excludeModules" value="${disabled.modules}" />
                <param name="excludeClusters" value="${disabled.clusters}" />
                <param name="updateTrackingFiles" value="${zip.platform.update.tracking}" />
            </custom>
        </selector>
        
        <pathconvert property="zip.platform.clusters.duplicates" pathsep="," >
            <path>
                <fileset dir="${netbeans.dest.dir}" >
                    <selector refid="zip.platform.included.files" />
                </fileset>
            </path>
            <mapper type="regexp" from="^${netbeans.dest.dir}/([^/]*)" to="\1"/>
        </pathconvert>
        
        <pathconvert property="zip.platform.clusters" pathsep="${line.separator}" >
            <path>
                <dirset dir="${netbeans.dest.dir}" includes="${zip.platform.clusters.duplicates}" />
            </path>
            <mapper type="regexp" from="^${netbeans.dest.dir}/([^/]*)" to="\1"/>
        </pathconvert>
        
        
        <mkdir dir="build/tmp/launch/etc" />
        <mkdir dir="build/tmp/launch/bin" />

        <copy file="${harness.dir}/launchers/app.exe" tofile="build/tmp/launch/bin/${application.name}.exe" />
        <copy file="${harness.dir}/launchers/app_w.exe" tofile="build/tmp/launch/bin/${application.name}w.exe" />
        <copy file="${harness.dir}/launchers/app.sh" tofile="build/tmp/launch/bin/${application.name}" />
        <copy file="${harness.dir}/etc/app.conf" tofile="build/tmp/launch/etc/${application.name}.conf" />
        <echo message="${zip.platform.clusters}" file="build/tmp/launch/etc/${application.name}.clusters" />
        <echo message="${line.separator}" file="build/tmp/launch/etc/${application.name}.clusters" append="true" />
        <echo message="${application.name}" file="build/tmp/launch/etc/${application.name}.clusters" append="true" />
        <echo message="${line.separator}" file="build/tmp/launch/etc/${application.name}.clusters" append="true" />
        
        <mkdir dir="dist" />
        <zip destfile="dist/${application.name}.zip" >
            <zipfileset dir="build/tmp/launch/bin/" filemode="755" prefix="bin" />
            <zipfileset dir="build/tmp/launch/etc/" prefix="etc" />
            <zipfileset dir="${netbeans.dest.dir}" filemode="755" >
                <include name="**/lib/nbexec*" />
            </zipfileset>
                
            <zipfileset dir="${netbeans.dest.dir}" >
                <and>
                    <not>
                        <filename name="**/lib/nbexec*" />
                    </not>
                    <selector refid="zip.platform.included.files" />
                </and>
            </zipfileset>
            
            <zipfileset dir="${cluster}" prefix="${application.name}/" />
            
        </zip>
    </target>
    
    <target name="clean" depends="-init" description="Clean all modules in the suite.">
        <subant target="clean" buildpath="${modules.sorted}" inheritrefs="false" inheritall="false"/>
        <delete dir="build" failonerror="false"/>
    </target>

    <target name="branding" depends="-init" if="branding.token">
        <property name="branding.dir" location="branding"/>
        <mkdir dir="${cluster}"/>
        <branding cluster="${cluster}" overrides="${branding.dir}" token="${branding.token}"/>
    </target>

    <target name="run" depends="build" >
        <ant antfile="${harness.dir}/run.xml" target="run"/>
    </target>
        
    <target name="debug" depends="build" >
        <ant antfile="${harness.dir}/run.xml" target="debug"/>
    </target>
    
    <target name="build-jnlp" depends="build" description="Packages this suite as JNLP application" >
        <ant antfile="${harness.dir}/jnlp.xml" target="build"/>
    </target>
    
    <target name="run-jnlp" depends="build" description="Executes this suite as JNLP application" >
        <ant antfile="${harness.dir}/jnlp.xml" target="run"/>
    </target>
    
    <target name="debug-jnlp" depends="build" description="Executes this suite as JNLP application under debugger" >
        <ant antfile="${harness.dir}/jnlp.xml" target="debug"/>
    </target>
    
</project>
