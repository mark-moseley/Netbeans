# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2009 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2009 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

#
# This bundle defines the localized name of the module, as will be shown
# in the options dialog and the setup wizard, and the category folder it will
# be found in, in the options dialog under System | Modules
#


# Braces
LBL_Braces_For=For Loops Must Use Braces
LBL_Braces_While=While Loops Must Use Braces
LBL_Braces_DoWhile=Do-While Loops Must Use Braces
LBL_Braces_If=If-Else Statements Must Use Braces

DSC_Braces_For=Warns if a <CODE>for</CODE> loop does not<BR>\
have its body wrapped in curly braces.<BR>
DSC_Braces_While=While Loops Must Use Braces
DSC_Braces_DoWhile=Do-While Loops Must Use Braces
DSC_Braces_If=If-Else Statements Must Use Braces

LBL_Braces_Fix=Add Braces

# Assgnment to itself
LBL_ATI=Assignment To Itself
DSC_ATI=Assignment To Itself

LBL_ATI_Remove_FIX=Remove The Assignment
LBL_ATI_Qualify_FIX=Qualify with this
LBL_ATI_NewParameter_FIX=Introduce Parameter
LBL_ATI_NewField_FIX=Introduce Field

# Imports
LBL_Imports_DELEGATE=Delegate - non GUI
LBL_Imports_UNUSED=Unused Import
LBL_Imports_DUPLICATE=Multiple Import
LBL_Imports_SAME_PACKAGE=Import From The Same Package
LBL_Imports_DEFAULT_PACKAGE=Import From java.lang Package
LBL_Imports_FORBIDDEN=Import From Forbidden Package
LBL_Imports_STAR=Star import

DSC_Imports_DELAGATE=Delegate - non GUI
DSC_Imports_UNUSED=Unused Import
DSC_Imports_DUPLICATE=Multiple Import
DSC_Imports_SAME_PACKAGE=Import From The Same Package
DSC_Imports_DEFAULT_PACKAGE=Import From java.lang Package
DSC_Imports_FORBIDDEN=Import From Forbidden Package
DSC_Imports_STAR=Star import

LBL_Imports_Fix_One_SAME_PACKAGE=Remove import from same package
LBL_Imports_Fix_All_SAME_PACKAGE=Remove all imports from same package

LBL_Imports_Fix_One_DEFAULT_PACKAGE=Remove import from java.lang package
LBL_Imports_Fix_All_DEFAULT_PACKAGE=Remove all imports from java.lang package

# equals and hashcode
MSG_MissingHashCode=Generate missing hashCode or equals
HINT_MissingHashCode=Checks whether a class which overrides equals method also overrides hashCode.
MSG_GenHashCode=Generate missing hashCode()
MSG_GenEquals=Generate missing equals(Object)

# export non accessible element
MSG_ExportNonAccessibleElement=Exporting non-public type through public API
MSG_ExportNonAccessibleElementMakeNonVisible=Make package private
HINT_ExportNonAccessibleElement=Checks that return types and parameter types of all\
public methods and all types of public fields are publicly available from other packages.\
Having private or package private types in a package API is useless.


# Annotation as super interface
# {0} name of the annotation
LBL_AnnotationAsSuperInterface=Don't use Annotation as super interface
HNT_AnnotationAsSuperInterface=Don''t use Annotation {0} as super interface
DSC_AnnotationAsSuperInterface=Despite of the compiler permits such constructs\
Annotations should not be used as superinterfaces.

# Utility class
MSG_UtilityClass=Utility class without constructor
HINT_UtilityClass=Finds out classes containing only static elements and still being instantiable.
MSG_PrivateConstructor=Create private constructor
MSG_MakePrivate=Make constructor private
MSG_PublicConstructor=Utility class with visible constructor
HINT_PublicConstructor=Finds out classes containing only static elements with public or protected constructors.

#Standard Javac warnings
LBL_Javac_DEPRECATED=Deprecated
LBL_Javac_UNCHECKED=Unchecked
LBL_Javac_FALLTHROUGH=Fallthrough
LBL_Javac_SERIALIZATION=Serialization
LBL_Javac_FINALLY=Finally 
LBL_Javac_UNNECESSARY_CAST=Unnecessary Cast
LBL_Javac_EMPTY_STATEMENT_AFTER_IF=Empty Statement After If
LBL_Javac_OVERRIDES=Overrides
LBL_Javac_DIVISION_BY_ZERO=Division By Zero
LBL_Javac_RAWTYPES=Raw Types

DSC_Javac_DEPRECATED=Deprecated
DSC_Javac_UNCHECKED=Unchecked
DSC_Javac_FALLTHROUGH=Fallthrough
DSC_Javac_SERIALIZATION=Serialization
DSC_Javac_FINALLY=Finally 
DSC_Javac_UNNECESSARY_CAST=Unnecessary Cast
DSC_Javac_EMPTY_STATEMENT_AFTER_IF=Empty Statement After If
DSC_Javac_OVERRIDES=Overrides
DSC_Javac_DIVISION_BY_ZERO=Division By Zero
DSC_Javac_RAWTYPES=Raw Types

# double check
MSG_DoubleCheck=Double-checked locking
HINT_DoubleCheck=Searches for examples of double checked locking - e.g.\
when a variable is tested before as well as inside a synchronized block.
MSG_FixDoubleCheck=Remove the outer conditional statement

LBL_IllegalInstanceOf=Illegal Use of instanceOf operator
DSC_IllegalInstanceOf=Show illegal use of instanceof on javax.lang.model.elements, javax.lang.model.type and com.sun.source.tree
MSG_IllegalInstanceOf=Illegal Use of instanceOf

#Wrong string comparison
LBL_WrongStringComparison=Comparing Strings using == or !=
DSC_WrongStringComparison=Checks for usages of == or != operator for comparing Strings.<BR>\
String comparisons should generally be done using the equals() method.

#Empty statements
LBL_Empty_FOR_LOOP=Empty statement after 'for'
LBL_Empty_ENHANCED_FOR_LOOP=Empty statement after 'for'
LBL_Empty_WHILE_LOOP=Empty statement after 'while'
LBL_Empty_DO_WHILE_LOOP=Empty statement after 'do'
LBL_Empty_IF=Empty statement after 'if/else'
LBL_Empty_BLOCK=Empty statement

DSC_Empty_FOR_LOOP=Checks for 'for' statements in form<BR>\
<CODE>for(...);</CODE>.
DSC_Empty_WHILE_LOOP=Checks for 'while' statements in form<BR>\
<CODE>while(...);</CODE>.
DSC_Empty_DO_WHILE_LOOP=Checks for 'do/while' statements in form<BR>\
<CODE>do;<BR>while</CODE>.
DSC_Empty_IF=Checks for 'if/else' statements in form<BR>\
<CODE>if(...);<BR>else;</CODE>.
DSC_Empty_BLOCK=Checks for empty statements in blocks usually represented\
as superfluous semicolon.
ForbiddenImportsCustomizer.btnAdd.text=&Add
ForbiddenImportsCustomizer.btnEdit.text=&Edit
ForbiddenImportsCustomizer.btnRemove.text=&Remove
ForbiddenImportsCustomizer.titleAdd=Add Forbidden Import
ForbiddenImportsCustomizer.titleEdit=Edit Forbidden Import
ForbiddenImportsCustomizer.label=Forbidden import: 
ForbiddenImportsCustomizer.btnAdd=Add
ForbiddenImportsCustomizer.btnEdit=Update
ForbiddenImportsCustomizer.btnCancel=Cancel
ForbiddenImportsCustomizer.hint=<html><i>Use * for a single package, use ** for all packages.


MSG_HiddenField=Field hides another field
HINT_HiddenField=Declaration of a field in a class can hide declaration of \
another field in superclasses. Although possible, this is not very good programming style.
MSG_FixHiddenFiledText=Rename the field
MSG_HiddenFieldByVar=Local variable hides a field
HINT_HiddenFieldByVar=Declaration of a variable in a method can hide declaration of \
a field declared in the surrounding class. Although possible, this is not very good programming style.

LBL_EmptyCancel=Empty cancel() for cancellable tasks
DSC_EmptyCancel=Warn about empty cancel() methods for cancellable tasks
MSG_EmptyCancel=Empty cancel()

#{0}:
#     0 - field
#     1 - method
#     2 - other (unknown)
#{1}: element simple name
MSG_StaticAccess=Accessing static {0,choice,0#field|1#method|1<element} {1}
MSG_StaticAccessName=Accessing static via reference
HINT_StaticAccess=Java language allows to access static fields thru instance \
variables, however this is often misleading and harder to read.
MSG_StaticAccessText=Replace with class reference

#ConvertAnonymousToInner:
HINT_ConvertAnonymousToInner=Convert Anonymous to Member
DN_ConvertAnonymousToInner=Convert Anonymous to Member
DESC_ConvertAnonymousToInner=Convert Anonymous to Member
FIX_ConvertAnonymousToInner=Convert Anonymous to Member

ERR_CaretNotInAnonymousInnerclass=Caret not in anonymous class.
ERR_SelectionNotSupported=Selection not supported.

CTL_ConvertAnonymousToInner=Convert &Anonymous to Member...

HINT_AddOverrideAnnotation=Add @Override Annotation
DN_AddOverrideAnnotation=Add @Override Annotation
DESC_AddOverrideAnnotation=Add @Override Annotation
FIX_AddOverrideAnnotation=Add @Override Annotation

HINT_AssignResultToVariable=Assign Return Value To New Variable
DN_AssignResultToVariable=Assign Return Value To New Variable
DESC_AssignResultToVariable=Assign Return Value To New Variable
FIX_AssignResultToVariable=Assign Return Value To New Variable

HINT_WrongPackage=Incorrect Package
DN_WrongPackage=Wrong Package
DESC_WrongPackage=Wrong Package
#{0}:
#    0: Remove package
#    1: Change package
#{1}: target package name
FIX_WrongPackageFix={0,choice,0#Remove package declaration|1#Change package declaration to {1}}
FIX_WrongPackageMove=Move class to correct folder
ERR_CannotMoveAlreadyExists=Cannot move the source, the target path already exists and is not a folder.
ERR_CannotMove=Cannot move the source.

HINT_SuspiciousNamesCombination=Suspicious names combination
DN_SuspiciousNamesCombination=Suspicious Names Combination
DESC_SuspiciousNamesCombination=Suspicious Names Combination

ERR_ARRAY_EQUALS=.equals() called on array
ERR_INCOMPATIBLE_EQUALS=.equals() on incompatible types
ERR_EQUALS_NOT_CHECKING_TYPE=equals() method not checking type of its parameter

DN_FieldUnusedParam=Assign Unused Parameter to Field
FIX_AssignToExisting=Assign to Existing Field
FIX_CreateField=Create Field
ERR_UnusedParameter=Unused Parameter

DSC_EqualsArray=.equals on array
DSC_EqualsIncompabile=.equals on incompatible types
DN_EqualsArray=.equals on Array
DN_EqualsIncompabile=.equals on Incompatible Types
FIX_ReplaceWithArraysEquals=Replace with Arrays.equals
FIX_ReplaceWithInstanceEquals=Replace with ==

DSC_EqualsMethod=Implementation of .equals methods not checking the type of the input parameter
DN_EqualsMethod=.equals Method not Checking Type
FIX_CreateDeclaration=Create Declaration
DN_DeclarationForInstanceof=Declaration for instanceof
ERR_DeclarationForInstanceof=Declaration for instanceof

DSC_SynchronizationOnNonFinalField=Synchronization on non-final field
ERR_SynchronizationOnNonFinalField=Synchronization on non-final field
DN_SynchronizationOnNonFinalField=Synchronization on non-final field
ForbiddenImportsCustomizer.listItems.AccessibleContext.accessibleDescription=List of forbidden packages
ForbiddenImportsCustomizer.listItems.AccessibleContext.accessibleName=Forbidden packages list
ForbiddenImportsCustomizer.jScrollPane1.AccessibleContext.accessibleDescription=Forbidden packages pane
ForbiddenImportsCustomizer.jScrollPane1.AccessibleContext.accessibleName=Forbidden packages pane
ForbiddenImportsCustomizer.AccessibleContext.accessibleDescription=Forbidden packages customiser
ForbiddenImportsCustomizer.AccessibleContext.accessibleName=Forbidden packages customiser
ForbiddenImportsCustomizer.btnAdd.AccessibleContext.accessibleDescription=Adds new forbidden package to the list

HINT_SuspiciousCall=Suspicious call to {0}:\nExpected type {2}, actual type {1}
HINT_SuspiciousCallIncompatibleTypes=Suspicious call to {0}:\nGiven object cannot contain instances of {1} (expected {2})
DN_CollectionRemove=Suspicous method call
DESC_CollectionRemove=Warns about suspicous calls to Collection.remove/contains and Map.containsKey/containsValue/remove
