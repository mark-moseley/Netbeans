#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
# Microsystems, Inc. All Rights Reserved.

#
# This Bundle is for JUnit module
#




LBL_Action=Create Test
# Actions API
LBL_Action_CreateTest=Create Tests

# Create Tests dialog
LBL_ClassToTest=&Class to Test:
LBL_PackageToTest=Package:
LBL_MultipleClassesSelected=More than one class is selected...
LBL_ClassName=Class &Name:
LBL_Location=&Location:
DefaultPackageName=<default package>
MSG_ClassnameMustNotBeEmpty=Class name must be specified.
MSG_InvalidClassName=Invalid class name
MSG_ClassNameNotDefault=Warning: The projects infrastructure may not be able to initiate execution of the test class if a non-default name is used.
MSG_NoTestTarget=No test target folders found for file {0}. Cannot create any tests.
MSG_AllMethodTypesDisabled=All types of methods (public, protected, package-private, private) would be skipped.
LBL_OK=OK

MSG_StatusBar_CreateTest_Begin=Creating tests ...
MSG_StatusBar_CreateTests_Finished=Tests created.
MSG_StatusBar_CreateTests_Cancelled=Tests generation cancelled.
ACS_StatusBar_CreateTests=This dialog displays progress of creating the tests and allows to cancel the operation.
# Actions API
LBL_Action=<name for action>
# To include a mnemomic for the Main Window menus, use e.g.:
# LBL_Action=My Act&ion
# If you want a special hint when it appears in a toolbar,
# override initialize() as indicated and use:
# HINT_Action=<tooltip for action>
# Actions API
LBL_Action=<name for action>
# To include a mnemomic for the Main Window menus, use e.g.:
# LBL_Action=My Act&ion
# If you want a special hint when it appears in a toolbar,
# override initialize() as indicated and use:
# HINT_Action=<tooltip for action>
# Actions API
LBL_Action_Tests=JUnit Tests
# To include a mnemomic for the Main Window menus, use e.g.:
# LBL_Action=My Act&ion
# If you want a special hint when it appears in a toolbar,
# override initialize() as indicated and use:
# HINT_Action=<tooltip for action>
# Actions API
LBL_Action=<name for action>
LBL_junit_settings=JUnit Module Settings

FMT_generator_status_ignoring=Ignoring: {0} ...

LBL_Action_OpenTest=Open Test

HINT_Action_OpenTest=Open test class
HINT_Action_CreateTest=Create test skeleton
#used in JUnitSettingsBeanInfo
LBL_value_not_found=(value not found)
HINT_internex=<description of first property>
JUnitProgress.lblMessage.text=Working ...
FMT_generator_status_creating=Creating: {0} ...
FMT_generator_status_scanning=Scanning: {0} ...
LBL_generator_progress_title=Unit tests generation in progress ...

MSG_file_from_node_failed=File can't be found for selected node.
MSG_test_class_not_found=Test class "{0}" for class "{1}" was not found.
MSG_testsuite_class_not_found_def_pkg=Suite class "{0}" for the default package was not found.
MSG_testsuite_class_not_found=Suite class "{0}" for package "{1}" was not found.
MSG_testsuite_class_for_root_package_not_found=Suite class "{0}" for root package was not found.
MSG_no_project=Source file {0} does not belong to any project.
MSG_no_tests_in_project=JUnit testing is not set up for source file {0}. \
    Usually this means that you have to first activate JUnit testing in the project \
    that this source file belongs to.
MSG_testdir_not_found=The directory {0} for tests was not found. 
MSG_multiproject_selection=The selection cannot span multiple projects.
MSG_invalid_packages=Some package or class names are invalid. Cannot proceed.

# TestCreator
TestCreator.suiteMethod.JavaDoc.comment=suite method automatically generated by JUnit module
#PARTI18N the localized message needs to be put after the '//' characters
TestCreator.suiteMethod.suiteBlock.comment=// if "JUNIT" tags are present, the body will be regenerated each time a suite class is created
TestCreator.variantMethods.JavaDoc.comment=Test of {0} method, of class {1}.
#PARTI18N - the localized message needs to be put after the '// TODO' characters
TestCreator.variantMethods.defaultComment=// TODO add your test code below by replacing the default call to fail.
#PARTI18N - the localized string should look like 'fail("localized_the_test_case_is_empty");'
TestCreator.variantMethods.defaultBody=fail("The test case is empty.");
TestCreator.abstracImpl.JavaDoc.comment=Generated implementation of abstract class {0}. Please fill dummy bodies of generated methods.
#PARTI18N - the localized message needs to be put after the '// TODO' characters
TestCreator.methodImpl.bodyComment=// TODO fill the body in order to provide useful implementation
TestCreator.javaClass.addTestsHereComment.l1=// TODO add test methods here. The name must begin with 'test'. For example:
TestCreator.javaClass.addTestsHereComment.l2=// public void testHello() {}


# Create tests window
JUnitCfgOfCreate.Title=Create Tests
JUnitCfgOfCreate.AD=Create Tests

# Class name
JUnitCfgOfCreate.clsName.toolTip=Name of the test class
JUnitCfgOfCreate.clsName.AN=Test Class Name
JUnitCfgOfCreate.clsName.AD=Name of the test class to be created

# Location
JUnitCfgOfCreate.location.toolTip=Target source root for the test class
JUnitCfgOfCreate.location.AN=Test Class Location
JUnitCfgOfCreate.location.AD=Target source root for the test class

# Generate options
JUnitCfgOfCreate.jpCodeGen.title=\ Code Generation\ 

# Generate tests for public methods
JUnitCfgOfCreate.chkPublic.text=\ &Public
JUnitCfgOfCreate.chkPublic.toolTip=Generate tests for public member methods.
JUnitCfgOfCreate.chkPublic.AN=Public Methods
JUnitCfgOfCreate.chkPublic.AD=Generate tests for public member methods.
PROP_members_public=Generate Tests for Public Member Methods
HINT_members_public=Generate Tests for Public Member Methods

# Generate tests for protected methods
JUnitCfgOfCreate.chkProtected.text=\ Pr&otected
JUnitCfgOfCreate.chkProtected.toolTip=Generate tests for protected member methods.
JUnitCfgOfCreate.chkProtected.AN=Protected Methods
JUnitCfgOfCreate.chkProtected.AD=Generate tests for protected member methods.
PROP_members_protected=Generate Tests for Protected Member Methods
HINT_members_protected=Generate Tests for Protected Member Methods


# Generate tests for package private methods
JUnitCfgOfCreate.chkPackage.text=\ Pac&kage Private
JUnitCfgOfCreate.chkPackage.toolTip=Generate tests for default member methods.
JUnitCfgOfCreate.chkPackage.AN=Package Private Methods
JUnitCfgOfCreate.chkPackage.AD=Generate tests for default member methods.
PROP_members_package=Generate Tests for Default Member Methods
HINT_members_package=Generate Tests for Default Member Methods


# Generate Comments
JUnitCfgOfCreate.chkComments.text=\ Source Code H&ints
JUnitCfgOfCreate.chkComments.toolTip=Generate comments in test method bodies.
JUnitCfgOfCreate.chkComments.AN=Generate Source Code Hints
JUnitCfgOfCreate.chkComments.AD=Generate comments in test method bodies.
PROP_body_comments=Generate Comments in Test Method Bodies
HINT_body_comments=Generate Comments

# Generate default bodies
JUnitCfgOfCreate.chkContent.text=\ Default &Method Bodies
JUnitCfgOfCreate.chkContent.toolTip=Generate default bodies of test methods.
JUnitCfgOfCreate.chkContent.AN=Generate Default Method Bodies
JUnitCfgOfCreate.chkContent.AD=Generate default bodies of test methods.
PROP_body_content=Generate Default Bodies of Test Methods
HINT_body_content=Generate Default Bodies of Test Methods

# Generate JavaDoc
JUnitCfgOfCreate.chkJavaDoc.text=\ &JavaDoc Comments
JUnitCfgOfCreate.chkJavaDoc.toolTip=Generate JavaDoc comments.
JUnitCfgOfCreate.chkJavaDoc.AN=Generate JavaDoc Comments
JUnitCfgOfCreate.chkJavaDoc.AD=Generate JavaDoc comments.
PROP_javadoc=Generate JavaDoc Comments
HINT_javadoc=Generate JavaDoc Comments


# Include abstract classes
JUnitCfgOfCreate.chkAbstractImpl.text=\ &Abstract Classes
JUnitCfgOfCreate.chkAbstractImpl.toolTip=Generate tests for abstract classes.
JUnitCfgOfCreate.chkAbstractImpl.AN=Include Abstract Classes
JUnitCfgOfCreate.chkAbstractImpl.AD=Include abstract classes.
PROP_generate_abstract_impl=Include Abstract Classes
HINT_generate_abstract_impl=Generate Tests for Abstract Classes

# Include exceptions
JUnitCfgOfCreate.chkExceptions.text=\ &Exception Classes
JUnitCfgOfCreate.chkExceptions.toolTip=Generate tests for exception classes.
JUnitCfgOfCreate.chkExceptions.AN=Include Exception Classes
JUnitCfgOfCreate.chkExceptions.AD=Include exception classes.
HINT_generate_exception_classes=Generate Tests for Exception Classes
PROP_generate_exception_classes=Include Exception Classes

# Include Package Private Classes
JUnitCfgOfCreate.chkPackagePrivateClasses.text=\ Packa&ge Private Classes
JUnitCfgOfCreate.chkPackagePrivateClasses.toolTip=Generate tests for package private classes.
JUnitCfgOfCreate.chkPackagePrivateClasses.AN=Include Package Private Classes
JUnitCfgOfCreate.chkPackagePrivateClasses.AD=Include package private classes.
PROP_include_package_private_classes=Include Package Private Classes
HINT_include_package_private_classes=Generate Tests for Package Private Classes


# Generate suites
JUnitCfgOfCreate.chkGenerateSuites.text=\ Gene&rate Test Suites
JUnitCfgOfCreate.chkGenerateSuites.toolTip=Generate suite classes.
JUnitCfgOfCreate.chkGenerateSuites.AN=Generate Suite Classes
JUnitCfgOfCreate.chkGenerateSuites.AD=Generate suite classes.
PROP_generate_suite_classes=Generate Suite Classes
HINT_generate_suite_classes=Generate Suite Classes


# Generate method setUp()
JUnitCfgOfCreate.chkSetUp.text=\ set&Up
JUnitCfgOfCreate.chkSetUp.toolTip=Generate method setUp()
JUnitCfgOfCreate.chkSetUp.AN=Generate Method setUp
JUnitCfgOfCreate.chkSetUp.AD=Generate method setUp


# Generate method tearDown()
JUnitCfgOfCreate.chkTearDown.text=\ tear&Down
JUnitCfgOfCreate.chkTearDown.toolTip=Generate method tearDown()
JUnitCfgOfCreate.chkTearDown.AN=Generate Method tearDown
JUnitCfgOfCreate.chkTearDown.AD=Generate method tearDown


# CheckBox group titles
JUnitCfgOfCreate.groupAccessLevels=Method Access Levels
JUnitCfgOfCreate.groupClassTypes=Class Types
JUnitCfgOfCreate.groupOptClasses=Optional Classes
JUnitCfgOfCreate.groupOptCode=Optional Code
JUnitCfgOfCreate.groupOptComments=Optional Comments

# Generate main method
PROP_generate_main_method=Generate main Method
HINT_generate_main_method=Generate main Method
PROP_generate_main_method_body=Body of the main Method
HINT_generate_main_method_body=Body of the main Method

# Generate setUp() and tearDown()
PROP_generate_setUp=Generate Method setUp()
HINT_generate_setUp=Generate Method setUp()
PROP_generate_tearDown=Generate Method tearDown()
HINT_generate_tearDown=Generate Method tearDown()
#NOI18N - this value is in .properties just to allow branding
PROP_generate_setUp_default=true
#NOI18N - this value is in .properties just to allow branding
PROP_generate_tearDown_default=true

#NOI18N - this property should not be localized - it is Java code
PROP_generate_main_method_body_default_value=junit.textui.TestRunner.run(suite());

# Test case & test suite templates
#NOI18N - this value is in .properties just to allow branding
PROP_testClassTemplate=Templates/JUnit/SimpleJUnitTest.java
#NOI18N - this value is in .properties just to allow branding
PROP_testSuiteTemplate=Templates/JUnit/SimpleJUnitTest.java

# Test case classname prefix/suffix
#NOI18N - this value is in .properties just to allow branding
PROP_test_classname_prefix=
#NOI18N - this value is in .properties just to allow branding
PROP_test_classname_suffix=Test

# Test suite classname prefix/suffix
#NOI18N - this value is in .properties just to allow branding
PROP_suite_classname_prefix=
#NOI18N - this value is in .properties just to allow branding
PROP_suite_classname_suffix=Suite

PROP_root_suite_classname=Root Suite Class Name
HINT_root_suite_classname=Root Suite Class Name
#NOI18N - this value is in .properties just to allow branding
PROP_root_suite_classname_default_value=RootSuite

#NOI18N - this value is in .properties just to allow branding
PROP_generate_tests_from_test_classes=false

#
# Layer stuff
#

# Help stuff
Menu/Help/HelpShortcuts/org-netbeans-modules-junit-mainpage.xml=JUnit Module Help
Actions/Help/org-netbeans-modules-junit-mainpage.xml=JUnit Module Help

# Options stuff
UI/Services/Testing=Testing
Actions/JUnitTests=JUnit Tests
org-netbeans-modules-junit-JUnitSettings.settings=JUnit Module Settings

# Templates stuff
Templates/JUnit=JUnit
Templates/JUnit/SimpleJUnitTest.java=Test for Existing Class
Templates/JUnit/EmptyJUnitTest.java=Empty Test
Templates/JUnit/TestSuite.java=Test Suite


#
# No longer used labels (though they may be used in the future again)
#

# manifest.mf
OpenIDE-Module-Name=JUnit Tests
OpenIDE-Module-Display-Category=Testing Tools
OpenIDE-Module-Short-Description=Creates tests suitable for the JUnit framework.
OpenIDE-Module-Long-Description=The JUnit module allows you to create test classes suitable for the JUnit framework.

#if no testable class is found in the selected folders
MSG_No_test_created=No tests were created because no testable class was found or it is not known where tests should be generated for the selected file(s).

MSG_template_not_found=Template file {0} was not found. Check JUnit module configuration.
MSG_skipped_class=Class {0} was skipped because it was {1}.
MSG_skipped_classes=Some classes were skipped because they were {0}.
junit=JUnit

MSG_MISSING_TEST=The directory for tests was not found. Use source directory instead?
MSG_MISSING_TEST_TITLE=Missing Test Directory

# human-readable strings for reasons to skip test creation for a class
# The wording should match the sentence "because the class is ..."
TesteableResult_OK=testeable
TesteableResult_PkgPrivate=package-private
TesteableResult_ExceptionClass=an exception class
TesteableResult_NonstaticInnerClass=nonstatic nested
TesteableResult_AbstractClass=abstract
TesteableResult_TestClass=a test class
TesteableResult_NoTesteableMethods=without testeable methods

# separators used between reasons in a report about skipped classes
# the " " are stripped, they are included to correctly represent spaces
COMMA=", " 

# used to separate the last reason in a disjunctive sentence like:
# Some classes were skipped because they were abstract OR package private
# the " are stripped
OR=" or "

# used to separate t he last reason in a conjunctive sentence like:
# The class ... was skipped because it was abstract AND package private.
# the " are stripped
AND=" and "
