<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->
<?xml-stylesheet type="text/xml" href="../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../nbbuild/javadoctools/apichanges.dtd">


<apichanges>

    <!-- First, a list of API names you may use: -->
<apidefs>
   <apidef name="nbjunit">NetBeans JUnit Extensions</apidef>
   <apidef name="diff">Diff Support</apidef>
</apidefs>

    <!-- ACTUAL CHANGES BEGIN HERE: -->

<changes>
    <change id="NbModuleSuite.Configuration.reuseUserDir">
        <api name="nbjunit"/>
        <summary>NbModuleSuite.Configuration.reuseUserDir(boolean reuse)</summary>
        <version major="1" minor="52"/>
        <date day="18" month="6" year="2008"/>
        <author login="mrkam"/>
        <compatibility addition="yes"/>
        <description>
            <p>NbModuleSuite.Configuration now has 
            <a href="@TOP@/org/netbeans/junit/NbModuleSuite.Configuration.html#reuseUserDir(boolean)">reuseUserDir(boolean)</a>
            method which enables test suite to reuse userdir from previous suite run.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbModuleSuite"/>
    </change>
    <change id="NbModuleSuite.Configuration.addTest">
        <api name="nbjunit"/>
        <summary>NbModuleSuite.Configuration.addTest(Class &lt; ? extends Test> test)</summary>
        <version major="1" minor="51"/>
        <date day="11" month="6" year="2008"/>
        <author login="jsedek"/>
        <compatibility addition="yes"/>
        <description>
            <p>NbModuleSuite.Configuration now has 
            <a href="@TOP@/org/netbeans/junit/NbModuleSuite.Configuration.html#addTest(java.lang.Class)">addTest(java.lang.Class)</a>
            method which allows to add Test implementation classes into configuration
            and execution of the NbModuleSuite.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbModuleSuite"/>
    </change>
    <change id="NbModuleSuite.emptyConfiguration">
        <api name="nbjunit"/>
        <summary>NbModuleSuite.emptyConfiguration()</summary>
        <version major="1" minor="51"/>
        <date day="10" month="6" year="2008"/>
        <author login="jtulach"/>
        <compatibility addition="yes"/>
        <description>
            <p>NbModuleSuite now has 
            <a href="@TOP@/org/netbeans/junit/NbModuleSuite.html#emptyConfiguration()">emptyConfiguration()</a>
            method which returns empty, ready to be configured configuration.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbModuleSuite"/>
    </change>
    <change id="NbModuleSuite.MultiTestCases">
        <api name="nbjunit"/>
        <summary>NbModuleSuite can now wrap multiple TestCase</summary>
        <version major="1" minor="50"/>
        <date day="3" month="6" year="2008"/>
        <author login="jtulach"/>
        <compatibility addition="yes"/>
        <description>
            <p>NbModuleSuite.Configuration now has 
            <a href="@TOP@/org/netbeans/junit/NbModuleSuite.Configuration.html#addTest(java.lang.Class,%20hg java.lang.String...)">addTest(clazz, tests)</a>
            method which allows to add multiple test classes into single configuration
            and execution of the NbModuleSuite.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbModuleSuite"/>
    </change>
    <change id="NbModuleSuite.allModules">
        <api name="nbjunit"/>
        <summary>New Utilitity methods in NbModuleSuite</summary>
        <version major="1" minor="49"/>
        <date day="3" month="6" year="2008"/>
        <author login="jtulach"/>
        <compatibility addition="yes"/>
        <description>
            <p>Shura requested few new methods to simplify creation of
            <code>NbModuleSuite</code>'s. Added, <code>allModules</code> and
            another variant of <code>create</code> to complement the general
            customization with <code>NbModuleSuite.Configuration</code>.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbModuleSuite"/>
    </change>
    <change id="NbModuleSuite">
        <api name="nbjunit"/>
        <summary>Support class to allow excution of unit tests inside of NetBeans Runtime Container</summary>
        <version major="1" minor="46"/>
        <date day="29" month="2" year="2008"/>
        <author login="jtulach"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                It always used to be hard to setup the right environment for test
                execution. In case this NetBeans this is even harder. The module
                system is ready to work without classpath isolation, however 
                not every feature is available and not every
                behavior remains the same
                That is why there is now the new <code>NbModuleSuite</code>
                support class that allows to really start the whole NetBeans 
                Runtime Container, satisfy all the dependencies and only then 
                load the testing class and execute it.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbModuleSuite"/>
    </change>
    <change id="RandomlyFails">
        <api name="nbjunit"/>
        <summary>Added <code>@RandomlyFails</code></summary>
        <version major="1" minor="51"/>
        <date day="19" month="6" year="2008"/>
        <author login="jglick"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                New annotation added to easily mark tests
                which occasionally fail for no particular reason.
            </p>
        </description>
        <class package="org.netbeans.junit" name="RandomlyFails"/>
        <issue number="137069"/>
    </change>
    <change id="CollectData">
        <api name="nbjunit"/>
        <summary>Support for Garbage Collecting of Log Message Arguments</summary>
        <version major="1" minor="44"/>
        <date day="14" month="12" year="2007"/>
        <author login="jtulach"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                Methods <code>enableInstances</code> and 
                <code>assertInstances</code> added to <code>Log</code> class to
                simplify writing memory leaks tests integrated with
                <a href="http://wiki.netbeans.org/wiki/view/FitnessViaTimersCounters">timers/counters</a> infastructure.
            </p>
        </description>
        <class package="org.netbeans.junit" name="Log"/>
    </change>
    <change id="PreferencesForTests">
        <api name="nbjunit"/>
        <summary>Default implementation of Preferences isn't used for running tests anymore</summary>
        <version major="1" minor="38"/>
        <date day="13" month="10" year="2006"/>
        <author login="rmatous"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                Not persistent implementation of <code>java.util.prefs.Preferences</code> 
                is installed in place of the platform-specific default implementation for running tests.
                See document
                <a href="@org-openide-util@/org/openide/util/doc-files/preferences.html">Preferences in NetBeans</a>
                to learn more.
            </p>
        </description>
        <class package="org.netbeans.junit" name="NbTestCase"/>
    </change>
    
    <change id="MockServicesAndLookup">
        <api name="nbjunit"/>
        <summary>Added class <code>MockServices</code></summary>
        <version major="1" minor="33"/>
        <date day="30" month="6" year="2006"/>
        <author login="jtulach"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                The MockServices class now supports closer cooperation
                with <code>Lookup</code>. By default, clients listening to
                <code>Lookup.Result</code> changes will be notified about
                change in its content whenever one calls <code>MockServices.setServices</code>.
            </p>
        </description>
        <class package="org.netbeans.junit" name="MockServices"/>
    </change>
    
    <change id="MockServices">
        <api name="nbjunit"/>
        <summary>Added class <code>MockServices</code></summary>
        <version major="1" minor="30"/>
        <date day="11" month="5" year="2006"/>
        <author login="jglick"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                Added new utility to help unit tests create mock implementations
                of global services for lookup.
            </p>
        </description>
        <class package="org.netbeans.junit" name="MockServices"/>
    </change>
    
    <change id="controlFlow">
      <api name="nbjunit"/>
      <summary>Non-deterministic execution can be made deterministic</summary>
      <version major="1" minor="28"/>
      <date day="1" month="4" year="2006"/>
      <author login="jtulach"/>
      <compatibility addition="yes" binary="compatible" semantic="compatible" />
      <description>
        <p>An excelent tool to emulate race condition, deadlock or any other
        non-deterministic behaviour created in the form of
        <a href="@TOP@/org/netbeans/junit/Log.html#controlFlow(java.util.logging.Logger,%20java.util.logging.Logger,%20java.lang.String,%20int)">
        Log.controlFlow</a> method.
        </p>
      </description>
      <class package="org.netbeans.junit" name="NbTestCase"/>
      <class package="org.netbeans.junit" name="Log"/>
      <issue number="35067" />
    </change>


<change id="logging">
      <api name="nbjunit"/>
      <summary> Added support for logging</summary>
      <version major="1" minor="27"/>
      <date day="1" month="4" year="2006"/>
      <author login="jtulach"/>
      <compatibility addition="yes" binary="compatible" semantic="compatible" />
      <description>
        <p>Added two ways how to enable logging in a test case. One can
        either overwrite <a href="@TOP@/org/netbeans/junit/NbTestCase.html#logLevel()">NbTestCase.logLevel</a>
        method and return the right level to capture in the test and then
        all the messages logged with the level and greater will be sent
        to <a href="@TOP@/org/netbeans/junit/NbTestCase.html#getLog()">NbTestCase.getLog()</a>
        stream which is placed in working directory.
        </p>

        <p>
        Or one can directly call
        <a href="@TOP@/org/netbeans/junit/Log.html#enable(java.lang.String,%20java.util.logging.Level)">Log.enable</a>
        to capture all the logging into a <code>CharSequence</code>
        which can be later queried for its content, usually by calling <code>its.toString()</code>
        method.
        </p>
      </description>
      <class package="org.netbeans.junit" name="NbTestCase"/>
      <class package="org.netbeans.junit" name="Log"/>
      <issue number="35067" />
    </change>

</changes>

    <htmlcontents>
    <head>
      <title>Change History for the NetBeans JUnit Extensions API</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the <a href="@TOP@/index.html">NetBeans JUnit Extensions</a> API.</p>

<!-- The actual lists of changes, as summaries and details: -->
      <hr/>
      <standard-changelists module-code-name="org.netbeans.modules.nbjunit"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>

</apichanges>
