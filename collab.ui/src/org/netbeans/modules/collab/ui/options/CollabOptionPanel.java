/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
 * Microsystems, Inc. All Rights Reserved.
 */
package org.netbeans.modules.collab.ui.options;

/**
 *
 * @author  catlan
 */
final class CollabOptionPanel extends javax.swing.JPanel {
    private final CollabOptionModel model;
    
    /** Creates new form CollabOptionPanel */
    public CollabOptionPanel() {
        model = new CollabOptionModel();
        initComponents();
    }
    
    public void update() {
        cbAutoApprove.setSelected(
                model.getAutoApprove()
            );
        cbAutoAcceptConversation.setSelected(
                model.getAutoAcceptConversation()
            );
        cbAutoLogin.setSelected(
                model.getAutoLogin()
            );
        spIdleTimeout.setValue(
                model.getIdleTimeout()
            );
        cbPlayAudioNotifications.setSelected(
                model.getPlayAudioNotifications()
            );
        cbShowPresenceNotifications.setSelected(
                model.getShowPresenceNotifications()
            );
    }
    
    public boolean isChanged() {
        if (cbAutoApprove.isSelected() != model.getAutoApprove())
            return true;
        if (cbAutoAcceptConversation.isSelected() != model.getAutoAcceptConversation())
            return true;
        if (cbAutoLogin.isSelected() != model.getAutoLogin())
            return true;
        if (!spIdleTimeout.getValue().equals(model.getIdleTimeout()))
            return true;
        if (cbPlayAudioNotifications.isSelected() != model.getPlayAudioNotifications())
            return true;
        if (cbShowPresenceNotifications.isSelected() != model.getShowPresenceNotifications())
            return true;
        
        return false;
    }
    
    
    public void applyChanges() {
        model.setAutoApprove(
                cbAutoApprove.isSelected()
            );
        model.setAutoAcceptConversation(
                cbAutoAcceptConversation.isSelected()
            );
        model.setAutoLogin(
                cbAutoLogin.isSelected()
            );
        model.setIdleTimeout(
                (Integer)spIdleTimeout.getValue()
            );
        model.setPlayAudioNotifications(
                cbPlayAudioNotifications.isSelected()
            );
        model.setShowPresenceNotifications(
                cbShowPresenceNotifications.isSelected()
            );
    }
    
    void cancel() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbAutoAcceptConversation = new javax.swing.JCheckBox();
        cbAutoApprove = new javax.swing.JCheckBox();
        cbAutoLogin = new javax.swing.JCheckBox();
        spIdleTimeout = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbPlayAudioNotifications = new javax.swing.JCheckBox();
        cbShowPresenceNotifications = new javax.swing.JCheckBox();

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "LBL_CollabSettings_DisplayName")));
        jPanel2.setOpaque(false);
        cbAutoAcceptConversation.setText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_AutoAcceptConversation_DisplayName"));
        cbAutoAcceptConversation.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_AutoAcceptConversation_Description"));
        cbAutoAcceptConversation.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cbAutoAcceptConversation.setOpaque(false);

        cbAutoApprove.setText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_AutoApprove_DisplayName"));
        cbAutoApprove.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_AutoApprove_Description"));
        cbAutoApprove.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cbAutoApprove.setOpaque(false);

        cbAutoLogin.setText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_AutoLogin_DisplayName"));
        cbAutoLogin.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_AutoLogin_Description"));
        cbAutoLogin.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cbAutoLogin.setOpaque(false);

        spIdleTimeout.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_IdleTimeout_Description"));

        jLabel3.setLabelFor(spIdleTimeout);
        jLabel3.setText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_IdleTimeout_DisplayName"));
        jLabel3.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_CollabSettingsBeanInfo_IdleTimeout_Description"));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cbAutoAcceptConversation)
                    .add(cbAutoApprove)
                    .add(cbAutoLogin)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                        .add(spIdleTimeout, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                .add(cbAutoAcceptConversation)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbAutoApprove)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbAutoLogin)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(spIdleTimeout, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "LBL_NotificationSettings_DisplayName")));
        jPanel3.setOpaque(false);
        cbPlayAudioNotifications.setText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_NotificationSettingsBeanInfo_PlayAudioNotifications_DisplayName"));
        cbPlayAudioNotifications.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_NotificationSettingsBeanInfo_PlayAudioNotifications_Description"));
        cbPlayAudioNotifications.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cbPlayAudioNotifications.setOpaque(false);

        cbShowPresenceNotifications.setText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_NotificationSettingsBeanInfo_ShowPresenceNotifications_DisplayName"));
        cbShowPresenceNotifications.setToolTipText(org.openide.util.NbBundle.getMessage(CollabOptionPanel.class, "PROP_NotificationSettingsBeanInfo_ShowPresenceNotifications_Description"));
        cbShowPresenceNotifications.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cbShowPresenceNotifications.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cbPlayAudioNotifications)
                    .add(cbShowPresenceNotifications))
                .addContainerGap(407, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3Layout.createSequentialGroup()
                .add(cbPlayAudioNotifications)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cbShowPresenceNotifications)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2)
            .add(jPanel3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbAutoAcceptConversation;
    private javax.swing.JCheckBox cbAutoApprove;
    private javax.swing.JCheckBox cbAutoLogin;
    private javax.swing.JCheckBox cbPlayAudioNotifications;
    private javax.swing.JCheckBox cbShowPresenceNotifications;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner spIdleTimeout;
    // End of variables declaration//GEN-END:variables
    
}
