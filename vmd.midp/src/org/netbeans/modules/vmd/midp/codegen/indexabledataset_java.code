# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
    __start_guardedblock__
    __instancename__ = new IndexableDataSet() {
    __stop_guardedblock__
      // declaration field
        __start_guardedblock__
        public int getSize() {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public Object getRow(int index) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public void setRow(int index, Object value) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public void insertRow(int index, Object row) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public void deleteRow(int index) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__
        
        __start_guardedblock__
        public Class getType(String type) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__
        
        __start_guardedblock__
        public Object getValue(String name) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public void setValue(String name, Object value) throws IllegalStateException {
        __stop_guardedblock__
            //TODO Implement this methode
            DataBinder.fireDataSetChanged(this , name);
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public void setAsString(String name, String stringValue) throws IllegalStateException {
        __stop_guardedblock__
             //TODO Implement this methode
            DataBinder.fireDataSetChanged(this , name);
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public boolean isReadOnly(String readOnly) throws IllegalStateException {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

        __start_guardedblock__
        public boolean isReadOnly() {
        __stop_guardedblock__

            throw new IllegalStateException("Not implemented yet.");
        __start_guardedblock__
        }
        __stop_guardedblock__

    __start_guardedblock__
    };