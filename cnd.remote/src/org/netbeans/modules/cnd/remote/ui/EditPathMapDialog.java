/*
 * EditPathMapDialog.java
 *
 * Created on 14 Июль 2008 г., 16:11
 */
package org.netbeans.modules.cnd.remote.ui;

import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.netbeans.modules.cnd.api.compilers.CompilerSetManager;
import org.netbeans.modules.cnd.remote.mapper.RemotePathMap;
import org.netbeans.modules.cnd.remote.server.RemoteServerList;
import org.openide.util.NbBundle;

/**
 *
 * @author  Sergey Grinev
 */
public class EditPathMapDialog extends JPanel {

    private String currentHkey;
    private DefaultComboBoxModel serverListModel;

    /** Creates new form EditPathMapDialog */
    public EditPathMapDialog(String defaultHost) {
        currentHkey = defaultHost;
        serverListModel = new DefaultComboBoxModel();

        for (String hkey : RemoteServerList.getInstance().getServerNames()) {
            if (!CompilerSetManager.LOCALHOST.equals(hkey)) {
                serverListModel.addElement(hkey);
            }
        }

        initTableModel(currentHkey);
        initComponents();
        cbHostsList.setSelectedItem(currentHkey);
        setColumnNames();
    }
    private Map<String, DefaultTableModel> cache = new HashMap<String, DefaultTableModel>();

    private RemotePathMap getRemotePathMap(String hkey) {
        return (RemotePathMap) RemotePathMap.getMapper(hkey);
    }

    private void initTableModel(String hkey) {
        DefaultTableModel tableModel = cache.get(hkey);
        if (tableModel == null) {
            RemotePathMap pm = getRemotePathMap(hkey);
            tableModel = new DefaultTableModel(0, 2);
            for (String local : pm.keySet()) {
                tableModel.addRow(new String[]{local, pm.get(local)});
            }
            if (tableModel.getRowCount() < 8) { // TODO
                for (int i = 8; i > tableModel.getRowCount(); i--) {
                    tableModel.addRow(new String[]{null, null});
                }
            } else {
                tableModel.addRow(new String[]{null, null});
            }
            cache.put(hkey, tableModel);
        }

        if (tblPathMappings != null) {
            tblPathMappings.setModel(tableModel);
            setColumnNames();
        }
    }

    private void setColumnNames() {
        tblPathMappings.getColumnModel().getColumn(0).setHeaderValue(NbBundle.getMessage(EditPathMapDialog.class, "LocalPathColumnName")); // NOI18N
        tblPathMappings.getColumnModel().getColumn(1).setHeaderValue(NbBundle.getMessage(EditPathMapDialog.class, "RemotePathColumnName")); // NOI18N
    }

    /* package */ void applyChanges() {
        for (String hkey : cache.keySet()) {
            Map<String, String> map = new HashMap<String, String>();
            DefaultTableModel model = cache.get(hkey);
            for (int i = 0; i < model.getRowCount(); i++) {
                String local = (String) model.getValueAt(i, 0);
                String remote = (String) model.getValueAt(i, 1);
                if (local != null && remote != null) {
                    map.put(local, remote);
                }
            }
            getRemotePathMap(hkey).updatePathMap(map);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHostName = new javax.swing.JLabel();
        cbHostsList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPathMappings = new javax.swing.JTable();

        lblHostName.setText(org.openide.util.NbBundle.getMessage(EditPathMapDialog.class, "EditPathMapDialog.lblHostName.text")); // NOI18N

        cbHostsList.setModel(serverListModel);
        cbHostsList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbHostsListItemStateChanged(evt);
            }
        });

        tblPathMappings.setModel(cache.get(currentHkey));
        tblPathMappings.getTableHeader().setResizingAllowed(false);
        tblPathMappings.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblPathMappings);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, 0, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(lblHostName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cbHostsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 211, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblHostName)
                    .add(cbHostsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 183, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void cbHostsListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbHostsListItemStateChanged
    currentHkey = (String) cbHostsList.getSelectedItem();
    initTableModel(currentHkey);
}//GEN-LAST:event_cbHostsListItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbHostsList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHostName;
    private javax.swing.JTable tblPathMappings;
    // End of variables declaration//GEN-END:variables
}
