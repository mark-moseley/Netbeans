/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */
/*
 * CmpEntityEjbPanel.java        November 3, 2003, 10:58 AM
 *
 */

package org.netbeans.modules.j2ee.sun.share.configbean.customizers.ejbmodule;

import javax.swing.JPanel;

import org.netbeans.modules.j2ee.sun.dd.api.ejb.Cmp;
import org.netbeans.modules.j2ee.sun.share.configbean.BaseEjb;
import org.netbeans.modules.j2ee.sun.share.configbean.CmpEntityEjb;
import org.netbeans.modules.j2ee.sun.share.configbean.Utils;

/**
 *
 * @author  Rajeshwar Patil
 * @version %I%, %G%
 */
public class CmpEntityEjbPanel extends JPanel {

    private CmpEntityEjbCustomizer masterPanel;


    /** Creates new form CmpEntityEjbPanel */
    public CmpEntityEjbPanel(CmpEntityEjbCustomizer src) {
        this.masterPanel = src;
        initComponents();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mappingPropertiesLabel = new javax.swing.JLabel();
        mappingPropertiesTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        mappingPropertiesLabel.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("MNC_Mapping_Properties").charAt(0));
        mappingPropertiesLabel.setLabelFor(mappingPropertiesTextField);
        mappingPropertiesLabel.setText(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("LBL_Mapping_Properties_1"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 5, 0);
        add(mappingPropertiesLabel, gridBagConstraints);
        mappingPropertiesLabel.getAccessibleContext().setAccessibleName(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("Mapping_Properties_Acsbl_Name"));
        mappingPropertiesLabel.getAccessibleContext().setAccessibleDescription(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("Mapping_Properties_Acsbl_Desc"));

        mappingPropertiesTextField.setToolTipText(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("Mapping_Properties_Tool_Tip"));
        mappingPropertiesTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mappingPropertiesKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 5, 5);
        add(mappingPropertiesTextField, gridBagConstraints);
        mappingPropertiesTextField.getAccessibleContext().setAccessibleName(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("Mapping_Properties_Acsbl_Name"));
        mappingPropertiesTextField.getAccessibleContext().setAccessibleDescription(java.util.ResourceBundle.getBundle("org/netbeans/modules/j2ee/sun/share/configbean/customizers/ejbmodule/Bundle").getString("Mapping_Properties_Acsbl_Desc"));

    }// </editor-fold>//GEN-END:initComponents

    private void mappingPropertiesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mappingPropertiesKeyReleased
        CmpEntityEjb theBean = masterPanel.getCmpEntityBean();
        if(theBean != null) {
            Cmp cmp = theBean.getCmp();
            String newMappingProperties = mappingPropertiesTextField.getText();
            String oldMappingProperties = theBean.getRefreshPeriodInSeconds();

            if(!Utils.strEquivalent(oldMappingProperties, newMappingProperties)) {
                if(Utils.notEmpty(newMappingProperties)) {
                    cmp.setMappingProperties(newMappingProperties);
                } else {
                    cmp.setMappingProperties(null);
                }

                theBean.firePropertyChange("cmpMappingProperties", oldMappingProperties, newMappingProperties); // NOI18N
                masterPanel.validateField(CmpEntityEjb.FIELD_CMP_MAPPINGPROPERTIES);
            }
        }
    }//GEN-LAST:event_mappingPropertiesKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel mappingPropertiesLabel;
    private javax.swing.JTextField mappingPropertiesTextField;
    // End of variables declaration//GEN-END:variables

    public void initFields(CmpEntityEjb theBean) {
        String mappingProperties = null;
        
        if(theBean != null) {
            mappingProperties = theBean.getCmp().getMappingProperties();
        }
        
        mappingPropertiesTextField.setText(mappingProperties);
    }     
    
}
