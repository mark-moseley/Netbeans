<?xml version='1.0' encoding='ISO-8859-1' ?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="xtest_master" default="netbeans" basedir=".">

    <!-- Properties -->
    <property name="netbeans.home" location="../nbbuild/netbeans"/>
    <property name="netbeans.test.home" value="${netbeans.home}"/>

    <property name="xtest.home" location="."/>
    <property name="xtest.mode" value="code"/>

    <property name="xtest.config" value="default"/>
    <property name="xtest.uploaddir" location="results"/>
    <property name="xtest.distdir" location="dist"/>
    <property name="xtest.basedir" location=".."/>
    <property name="xtest.mail.all" value=""/>
    <property name="xtest.mail.failed" value=""/>

    <property name="build.compiler.deprecation" value="off"/>
    <property name="build.compiler.debug" value="off"/>

    <!-- build up the xtest framework -->
    <target name="bootstrap" unless="xtest.noboot">
        <echo message="Bootstrapping XTest-specific Ant extensions..."/>
        <ant antfile="xtest.xml" target="netbeans"/>
    </target>

    <target name="init" depends="bootstrap">
        <tstamp/>
        <property name="buildnumber" value="${DSTAMP}-${TSTAMP}"/>
        <property name="xtest.distname" value="nb-xtest-${buildnumber}"/>

        <taskdef name="nbtaskdef" classname="org.netbeans.xtest.NbMultiTaskDef" classpath="lib/xtest.jar"/>

        <nbtaskdef classpath="lib/xtest.jar">
            <taskdef name="xtestconfig" classname="org.netbeans.xtest.NbTestConfig"/>
            <taskdef name="xtestconfig-print" classname="org.netbeans.xtest.NbTestConfigPrint"/>
            <taskdef name="xtest" classname="org.netbeans.xtest.NbExecutor"/>
        </nbtaskdef>

        <nbtaskdef classpath="lib/xtest.jar;lib/xerces.jar;lib/xalan.jar">
            <taskdef name="xreport" classname="org.netbeans.xtest.NbReport"/>
            <taskdef name="xalan" classname="org.netbeans.xtest.XalanLauncher"/>
        </nbtaskdef>

        <!-- Configuration defines modules, tests and patterns to be executed -->
        <xtestconfig config="${xtest.config}">
            <config name="default" modules="openide,core" testtypes="unit"/>
            <config name="openide" modules="openide" testtypes="unit"/>
            <config name="core" modules="core" testtypes="unit"/>
        </xtestconfig>
    </target>

    <!-- ================================== -->
    <!-- Helper targets, called by executor -->
    <!-- ================================== -->

    <!-- =========================================================================== -->
    <!-- build test distribution helper, called by executor                          -->
    <!-- Build test of module and upload results to the test distribution directory. -->
    <target name="build-test-distribution">
        <echo message="Building ${xtest.testtype} test of ${xtest.module}..."/>

        <mkdir dir="${xtest.distdir}/${xtest.module}/test/${xtest.testtype}"/>
        <ant dir="../${xtest.module}/test/${xtest.testtype}" target="build">
            <property name="xtest.build" 
                      value="${xtest.distdir}/${xtest.module}/test/${xtest.testtype}"/>
        </ant>

        <copy   file="../${xtest.module}/test/${xtest.testtype}/build.xml" 
                toDir="${xtest.distdir}/${xtest.module}/test/${xtest.testtype}"/>
    </target>

    <!-- ============================================== -->
    <!-- build test helper, called by executor          -->
    <!-- Build test of module in its default directory. -->
    <target name="build-test">
        <echo message="Building ${xtest.testtype} test of ${xtest.module}..."/>
        <ant dir="../${xtest.module}/test/${xtest.testtype}" target="build"/>
    </target>

    <!-- ====================================== -->
    <!-- run test helper, called by executor    -->
    <!-- Run test of module nad upload results. -->
    <target name="run-test" depends="clean-up-ide">
        <echo message="Running ${xtest.testtype} test of ${xtest.module}..."/>
        <ant dir="${xtest.basedir}/${xtest.module}/test/${xtest.testtype}" target="test">
            <property name="xtest.results" 
                      value="${xtest.basedir}/${xtest.module}/test/${xtest.testtype}/results"/>
        </ant>

        <mkdir dir="${xtest.uploaddir}/${xtest.module}/${xtest.testtype}"/>
        <copy todir="${xtest.uploaddir}/${xtest.module}/${xtest.testtype}">
            <fileset dir="${xtest.basedir}/${xtest.module}/test/${xtest.testtype}/results"/>
        </copy>
    </target>

    <!-- ==================================================================================== -->
    <!-- create new fresh IDE installation                                                    -->
    <!-- Brings IDE to state before fisrt start. It removes IDE configuration, use carefully! -->
    <target name="clean-up-ide" if="xtest.clean-up-ide">
        <delete>
            <fileset dir="${netbeans.test.home}">
                <include name="system/project.last"/>
                <include name="modules/externalizedModules.ser"/>
                <include name="system/ide.log"/>
            </fileset>
        </delete>
        <delete dir="${netbeans.test.home}/system/Projects"/>
        <delete dir="${xtest.userdir}"/>
        <mkdir dir="${xtest.userdir}"/>
    </target>

    <!-- ============================================= -->
    <!-- clean test results helper, called by executor -->
    <!-- Clean up test results of module.              -->
    <target name="clean-test-results">
        <echo message="Cleaning results of ${xtest.module} ${xtest.testtype} test..."/>
        <ant dir="${xtest.basedir}/${xtest.module}/test/${xtest.testtype}" target="clean_results">
            <property name="xtest.results" 
                      value="${xtest.basedir}/${xtest.module}/test/${xtest.testtype}/results"/>
        </ant>
    </target>

    <!-- =========================================== -->
    <!-- clean test build helper, called by executor -->
    <!-- Clean up build of module test.              -->
    <target name="clean-test-build">
        <echo message="Cleaning build of ${xtest.module} ${xtest.testtype} test..."/>
        <ant dir="../${xtest.module}/test/${xtest.testtype}" target="clean_build"/>
    </target>


    <!-- =================================== -->
    <!-- Main executor, calls helper targets -->
    <!-- =================================== -->

    <!-- ================================================================================================== -->
    <!-- main executor                                                                                      -->
    <!-- Iterate through all modules and tests defined by selected configuration and call specified target. -->
    <target name="executor">
        <xtest  targetname="${target.name}"
                targetParamModule="xtest.module"
                targetParamTesttype="xtest.testtype"
                targetParamIncludes="xtest.includes"
                targetParamExcludes="xtest.excludes">
        </xtest>
    </target>


    <!-- =========================== -->
    <!-- Entry points, call executor -->
    <!-- =========================== -->

    <!-- ================================== -->
    <!-- main entrypoint for building tests -->
    <target name="build" depends="init"
            description="Build all tests of all modules according selected configuration.">
        <antcall target="executor">
            <param name="target.name" value="build-test"/>
        </antcall>
    </target>

    <!-- ============================================== -->
    <!-- main entrypoint for building test distribution -->
    <target name="build-distribution" depends="init"
            description="Build all tests of all modules to distribution directory and ZIP it.">

        <delete dir="${xtest.distdir}"/>
        <delete file="${xtest.distname}.zip"/>

        <antcall target="executor">
            <param name="target.name" value="build-test-distribution"/>
        </antcall>

        <!-- zip task not well suited to making final build, as it does not set +x bits -->
        <!-- so on Unix try to use native ZIP first -->
        <exec executable="zip" dir="." os="Linux SunOS Solaris" failonerror="false">
            <arg value="-r"/>
            <arg value="${xtest.distname}.zip"/>
            <arg value="${xtest.distdir}"/>
        </exec>

        <zip zipfile="${xtest.distname}.zip" basedir="${xtest.distdir}"/>
    </target>

    <!-- =========================================================== -->
    <!-- Run all tests of all modules and create summary of results. -->
    <target name="test-runner" depends="init, clean-results, clean-uploaded-results">
        <antcall target="executor">
            <param name="target.name" value="run-test"/>
        </antcall>

        <!-- make summary  -->
        <xreport    tofile="summary.xml" 
                    resultsdir="${xtest.uploaddir}"
                    statusfailed="xtest.failed">
            <reporter testtype="unit" classname="org.netbeans.xtest.UnitTestReporter"/>
        </xreport>

        <!-- format HTML & plain summary  -->
        <xalan srcfile="${xtest.uploaddir}/summary.xml" trgfile="${xtest.uploaddir}/summary.txt" xslt="xslt/summary-txt.xsl"/>
        <xalan srcfile="${xtest.uploaddir}/summary.xml" trgfile="${xtest.uploaddir}/summary.html" xslt="xslt/summary-html.xsl"/>
        <copy file="xslt/stylesheet.css" todir="${xtest.uploaddir}"/>
    </target>

    <!-- ================================= -->
    <!-- main entrypoint for running tests -->
    <target name="test" depends="test-runner, mail"
            description="Run tests and mail summary of results."/>

    <target name="mail" if="xtest.mail">
        <antcall target="mail-all"/>
        <antcall target="mail-failed"/>
    </target>

    <target name="mail-all">
        <echo message="Mailing test results..."/>

        <mail from="XTest" tolist="${xtest.mail.all}" subject="Results of Netbeans tests"
              files="${xtest.uploaddir}/summary.txt" mailhost="sunpraha.czech.sun.com"/>
    </target>
    
    <target name="mail-failed" if="xtest.failed">
        <echo message="Tests failed mailing results..."/>

        <mail from="XTest" tolist="${xtest.mail.failed}" subject="Netbeans tests failed"
              files="${xtest.uploaddir}/summary.txt" mailhost="sunpraha.czech.sun.com"/>
    </target>

    <!-- ===================================== -->
    <!-- default target, builds and runs tests -->
    <target name="netbeans" depends="build, test"
            description="Build and run tests."/>

    <!-- ================ -->
    <!-- Cleaning targets -->
    <!-- ================ -->

    <target name="clean-distribution"
            description="Delete distribution directory.">
        <echo message="Cleaning tests distribution..."/>
        <delete dir="${xtest.distdir}"/>
    </target>

    <target name="real-clean" depends="clean, clean-distribution"
            description="Clean up built tests, distribution and XTest framework">
        <!-- Add clean up code here (if neccessary) -->
        <echo message="Cleaning old tests..."/>
        <delete>
            <fileset dir=".">
                <include name="nb-xtest-*.zip"/>
            </fileset>
        </delete>

        <!-- This step must be last: -->
        <echo message="Cleaning XTest framework..."/>
        <ant antfile="xtest.xml" target="clean"/>
    </target>

    <target name="clean-uploaded-results"
            description="Delete directory with uploaded results.">
        <echo message="Cleaning uploaded old test results..."/>
        <delete dir="${xtest.uploaddir}"/>
    </target>

    <target name="clean-results" depends="init"
            description="Clean up results of all tests of all modules.">
        <echo message="Cleaning old test results..."/>
        <antcall target="executor">
            <param name="target.name" value="clean-test-results"/>
        </antcall>
    </target>

    <target name="clean-build" depends="init"
            description="Clean up builds of all module tests.">
        <echo message="Cleaning built tests..."/>
        <antcall target="executor">
            <param name="target.name" value="clean-test-build"/>
        </antcall>
    </target>

    <!-- ================================== -->
    <!-- main entrypoint for cleaning tests -->
    <target name="clean" depends="clean-build, clean-results" 
            description="Clean up built tests, test results and distribution."/>

    <target name="print-test-config" depends="init"
            description="Print modules, tests and patterns from selected configuration.">
        <xtestconfig-print/>
    </target>
</project>
