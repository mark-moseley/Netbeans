<?xml version='1.0' encoding='ISO-8859-1' ?><!-- -*- sgml-indent-step: 2 -*- -->
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2003 Sun
Microsystems, Inc. All Rights Reserved.
-->

<!-- ToDo: modern compile can fail even within openide/src for the same -->
<!-- reasons other modules need openide-13javac-workaround.jar! -->
<!-- Not clear how to solve this. Try rerunning build if it happens. -->

<project name="openide" default="netbeans" basedir=".">
  <property name="homepage.base" value="netbeans.org"/>
  <property name="dist.base" value="www.netbeans.org/download/nbms/40"/>
  <property name="license.file" location="../nbbuild/standard-nbm-license.txt"/>

  <property name="nbm_alias" value="nb_ide"/>

  <taskdef name="enhanceclass" classname="org.netbeans.nbbuild.NbEnhanceClass" classpath="../nbbuild/nbantext.jar"/>
  <taskdef name="locjar" classname="org.netbeans.nbbuild.LocalizedJar" classpath="../nbbuild/nbantext.jar"/>
  <taskdef name="makenbm" classname="org.netbeans.nbbuild.MakeNBM" classpath="../nbbuild/nbantext.jar"/>
  <taskdef name="genlist" classname="org.netbeans.nbbuild.MakeListOfNBM" classpath="../nbbuild/nbantext.jar"/>

  <target name="init">
    <ant dir="../core/external" target="unscramble"/>
    <path id="openide-cp">
      <!-- nothing -->
    </path>
    <path id="openide-boot-cp">
      <!-- XXX not nice to use undocumented property here: -->
      <pathelement path="${sun.boot.class.path}"/>
      <pathelement location="openide-13javac-workaround.jar"/>
    </path>
  </target>

  <target name="compile-regular" depends="init">
    <javac destdir="src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <src path="src" />
      <src path="util/src" />
      <src path="awt/src" />
      
      <bootclasspath refid="openide-boot-cp"/>
      <classpath refid="openide-cp"/>
    </javac>
    <javac srcdir="windows/src" destdir="windows/src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <bootclasspath refid="openide-boot-cp"/>
      <classpath refid="openide-cp"/>
      <classpath>
        <pathelement location="src" />
      </classpath>
    </javac>
    <javac srcdir="explorer/src" destdir="explorer/src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <bootclasspath refid="openide-boot-cp"/>
      <classpath refid="openide-cp"/>
      <classpath>
        <pathelement location="src" />
      </classpath>
    </javac>
    <javac srcdir="windows/src" destdir="windows/src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <bootclasspath refid="openide-boot-cp"/>
      <classpath refid="openide-cp"/>
      <classpath>
        <pathelement location="src" />
      </classpath>
    </javac>
    <javac srcdir="explorer/src" destdir="explorer/src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <bootclasspath refid="openide-boot-cp"/>
      <classpath refid="openide-cp"/>
      <classpath>
        <pathelement location="src" />
      </classpath>
    </javac>
  </target>

  <target name="compile-compat" depends="libs">
    <javac srcdir="compat/src" destdir="compat/src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <classpath>
        <pathelement location="dialogs/netbeans/lib/openide-dialogs.jar"/>
        <pathelement location="fs/netbeans/lib/openide-fs.jar"/>
        <pathelement location="nodes/netbeans/lib/openide-nodes.jar"/>
      </classpath>
    </javac>
  </target>
  
  <target name="compile" depends="13javac-workaround,compile-regular"
          description="Compile all source files but do not package them."/>

  <target name="13javac-workaround" unless="usingAjc">
    <!-- JDK 1.3 Javac at least on Linux has a serious bug as regards -->
    <!-- situations where one package contains a public class and a public -->
    <!-- inner class of the same name: though the inner class should be qualified -->
    <!-- by its outer class, something gets confused and the compiler thinks -->
    <!-- it cannot find the simple class whenever it is used. -->
    <!-- Forcing use of 1.2 compiler is possible with -Dbuild.compiler=classic, -->
    <!-- but this slows down builds, messes up Jikes users, and is not apparently -->
    <!-- needed for all 1.3 Javac versions. Easier to ensure that the outer classes -->
    <!-- appear in a separate JAR file at compile time, this assuages the compiler. -->
    <!-- Cf. #4401373. -->
    <javac srcdir="src" destdir="src" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <!-- Compare inner classes of Actions: -->
      <include name="org/openide/awt/ToolbarButton.java"/>
      <include name="org/openide/awt/ToolbarToggleButton.java"/>
      <!-- Compare inner class of RequestProcessor: -->
      <include name="org/openide/util/Task.java"/>
      <!-- Included because Task imports it: -->
      <include name="org/openide/util/TaskListener.java"/>
    </javac>
    <jar jarfile="openide-13javac-workaround.jar"
         basedir="src"
         compress="false">
      <include name="org/openide/awt/ToolbarButton.class"/>
      <include name="org/openide/awt/ToolbarButton$*.class"/>
      <include name="org/openide/awt/ToolbarToggleButton.class"/>
      <include name="org/openide/awt/ToolbarToggleButton$*.class"/>
      <include name="org/openide/util/Task.class"/>
      <include name="org/openide/util/Task$*.class"/>
      <include name="org/openide/util/TaskListener.class"/>
      <include name="org/openide/util/TaskListener$*.class"/>
    </jar>
  </target>

  <!-- See #11746. -->
  <target name="vers-prep-1">
    <uptodate targetfile="manifest-subst.mf" property="spec-vers-up-to-date">
      <srcfiles dir=".">
        <include name="openide-spec-vers.properties"/>
      </srcfiles>
    </uptodate>
  </target>
  <target name="vers-prep-2" depends="vers-prep-1" unless="spec-vers-up-to-date">
    <!-- Either manifest-subst.mf is missing or openide-spec-vers.properties is newer. -->
    <delete>
      <fileset dir=".">
        <include name="*-subst.mf"/>
      </fileset>
    </delete>
  </target>
  <target name="vers-prep" depends="vers-prep-2">
    <property file="openide-spec-vers.properties"/>
    <filter token="SPEC_VERS_SUBST" value="${org.openide.specification.version}"/>
    <filter token="BUILD_NUMBER_SUBST" value="${buildnumber}"/>
  </target>
  
  <target name="old-jars" depends="compile,13javac-workaround,vers-prep,loaders_32143-compat" description="Create JAR files.">
    <mkdir dir="netbeans/lib"/>
    <copy file="manifest.mf" tofile="manifest-subst.mf" filtering="on"/>
    <locjar jarfile="netbeans/lib/openide.jar"
            manifest="manifest-subst.mf"
	    compress="false">
      <locale name="ja"/>
      
      <fileset dir="src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="windows/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="explorer/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      
      <!-- include also patches -->
      <fileset dir="compat/src">
           <!-- But include patch files -->
           <include name="**/$$*$$Patch$$.class" />
      </fileset>
      
    </locjar>
  </target>

  <target name="loaders_32143-compat" depends="libs" unless="loaders_32143-compat.skip" >
    <!-- temporary compatibility for API classes that had to be changed due to
         work in loaders_32143 branch. Shall provide enough time to module
         writers using the old code to update to new replacements.
     -->
     <ant antfile="build.xml" target="jars" dir="loaders" />
     <ant antfile="build.xml" target="openide-compat" dir="actions" />
     <ant antfile="build.xml" target="openide-compat" dir="windows" />
     <ant antfile="build.xml" target="openide-compat" dir="text" />
  </target>
  
  <target name="release">
    <copy todir="netbeans" includeEmptyDirs="false">
      <fileset dir="release" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
    </copy>
  </target>

  <target name="netbeans" depends="jars-from-libs,release" description="Build everything needed for inclusion in the IDE.">
    <genlist targetname="nbm" outputfiledir="netbeans"/>
  </target>

  <target name="nbm" depends="netbeans">
    <makenbm file="openide.nbm"
             topdir="."
             module="netbeans/lib/openide.jar"
	     homepage="http://openide.${homepage.base}/"
	     distribution="http://${dist.base}/openide.nbm">
      <license file="${license.file}"/>
      <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
    </makenbm>
  </target>

  <!-- Define the sets of files for various libraries -->
  <selector id="openide.actions" >
    <or>
        <filename name="**/openide/actions/*" />

        <!-- these might one day get deprecated, but until that
          lets keep them here -->
        <filename name="**/openide/explorer/ExplorerPanel*" />
        <filename name="**/openide/explorer/ExplorerActions.java" />
        <filename name="**/openide/explorer/ExplorerActions.class" />
        <filename name="**/openide/explorer/ExplorerActions$$*.class" />
        <filename name="**/openide/util/HttpServer*" />
        <filename name="**/openide/util/WeakListener.java" />
        <filename name="**/openide/util/WeakListener.class" />
        <filename name="**/openide/util/WeakListener$$*.class" />
    </or>
  </selector>
  <selector id="openide.text" >
    <or>
      <filename name="**/openide/text/*" />
      <filename name="**/openide/cookies/LineCookie*" />
      <filename name="**/openide/cookies/EditorCookie*" />
    </or>
  </selector>
  <selector id="openide.nodes" >
    <and>
       <or>
         <filename name="**/openide/nodes/" />
         <filename name="**/openide/cookies/*" />
         <filename name="**/openide/util/actions/NodeAction*" />
         <filename name="**/openide/util/actions/CookieAction*" />
       </or>
       <not>
         <selector refid="openide.text" />
       </not>
    </and>
  </selector>
  <selector id="openide.awt" >
    <filename name="**/openide/awt/*" />
  </selector>
  <selector id="openide.util" >
     <and>
        <or>
            <filename name="**/openide/ErrorManager*" />
            <filename name="**/openide/ServiceType*" />
            <filename name="**/openide/util/*" />
            <filename name="**/openide/util/enum/*" />
            <filename name="**/openide/util/lookup/*" />
            <filename name="**/openide/util/datatransfer/*" />
            <filename name="**/openide/util/io/*" />
            <filename name="**/openide/util/actions/*" />
            <filename name="**/openide/xml/*" />         
        </or>
        
        <none>
          <selector refid="openide.actions" />
          <selector refid="openide.nodes" />
        </none>
      </and>
  </selector>
  <selector id="openide.dialogs" >
    <and>
        <or>
            <filename name="**/openide/*" />
        </or>
        <not>
            <selector refid="openide.util" />
        </not>
    </and>
  </selector>
  <selector id="openide.fs" >
    <filename name="**/openide/filesystems/*" />
  </selector>
  <selector id="openide.modules" >
    <filename name="**/openide/modules/*" />
  </selector>
  <selector id="openide.options" >
    <filename name="**/openide/options/*" />
  </selector>
  <selector id="openide.windows" >
    <filename name="**/openide/windows/*" />
  </selector>
  <selector id="openide.explorer" >
    <and>
      <filename name="**/openide/explorer/**" />
      <not>
        <selector refid="openide.actions" />
      </not>
    </and>
  </selector>
  
  <!-- compiles one of the sets of above defines files into 
    provided directory
    
    
  -->
  <target name="do-lib-javac" >
    <mkdir dir="${localdir}" />
    <javac sourcepath="" destdir="${localdir}" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}">
      <src path="src" />
      <src path="${localdir}" />
      <selector>
        <or>
          <selector refid="${selector}" />
          <filename name="${include}" />
          <filename name="org/netbeans/modules/openide/**/*.java" />
        </or>
      </selector>
      <classpath refid="classpath" />
    </javac>
    <!-- copy non-java files into new direction -->
    <copy todir="${localdir}" >
      <fileset dir="src" >
        <selector refid="${selector}" />
        <exclude name="**/*java" />
        <exclude name="**/*class" />
      </fileset>
    </copy>
  </target>
  
  <!-- Build whole openide.jar from separate libraries -->
  <target name="jars-from-libs" depends="libs,vers-prep,compile-compat,loaders_32143-compat" description="Create JAR files from copied directories.">
    <property name="openide.jar" value="netbeans/lib/openide.jar" />
    <mkdir dir="netbeans/lib"/>
    <copy file="manifest.mf" tofile="manifest-subst.mf" filtering="on"/>
    <locjar jarfile="${openide.jar}"
            manifest="manifest-subst.mf"
	    compress="false">
      <locale name="ja"/>
      
      <fileset dir="actions/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="awt/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="dialogs/src" excludesfile="../nbbuild/standard-jar-excludes.txt">
         <!-- will be provided by openide-windows -->
         <exclude name="org/openide/awt/HtmlBrowser$$BrowserComponent.class" />
      </fileset>
      <fileset dir="explorer/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="fs/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="nodes/src" excludesfile="../nbbuild/standard-jar-excludes.txt">
         <!-- will be provided by openide-actions -->
         <exclude name="org/openide/cookies/InstanceCookie$$Origin.class" />
      </fileset>
      <fileset dir="options/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="text/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="util/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="modules/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="src" excludesfile="../nbbuild/standard-jar-excludes.txt" >
        <include name="org/openide/resources/**" />
        <include name="META-INF/**" />
      </fileset>
      <fileset dir="windows/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="compat/src" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      
      <!-- include also patches -->
      <fileset dir="compat/src">
           <!-- But include patch files -->
           <include name="**/$$*$$Patch$$.class" />
      </fileset>
      
    </locjar>
  </target>
  
  
  <!-- Build separate libraries for the IDE -->
  
  <target name="libs" depends="
    lib-actions, 
    lib-dialogs,
    lib-explorer,
    lib-fs,
    lib-nodes,
    lib-modules,
    lib-options,
    lib-text,
    lib-util,
    lib-windows,
    lib-awt,
    lib-lookup" />
    
  <target name="libs-clean" >
        <ant dir="awt" target="clean" />
        <ant dir="actions" target="clean" />
        <ant dir="dialogs" target="clean" />
        <ant dir="explorer" target="clean" />
        <ant dir="fs" target="clean" />
        <ant dir="nodes" target="clean" />
        <ant dir="modules" target="clean" />
        <ant dir="options" target="clean" />
        <ant dir="text" target="clean" />
        <ant dir="util" target="clean" />
        <ant dir="windows" target="clean" />
  </target>
    
  
  <target name="lib-actions" depends="lib-util,lib-nodes,lib-windows,lib-text,lib-explorer,lib-fs" >
        <ant dir="actions" />
  </target>        
  
  <target name="lib-awt" depends="lib-util" >
        <ant dir="awt" />
  </target>        

  <target name="lib-dialogs" depends="lib-util,lib-awt" >
        <ant dir="dialogs" />
  </target>        
  
  <target name="lib-explorer" depends="lib-nodes" >
        <ant dir="explorer" />
  </target>        
  
  <target name="lib-fs" depends="lib-util" >
        <ant dir="fs" />
  </target>

  <target name="lib-nodes" depends="lib-util,lib-dialogs" >
        <ant dir="nodes" />
  </target>        

  <target name="lib-modules" depends="lib-util" >
        <ant dir="modules" />
  </target>        
  
  <target name="lib-options" depends="lib-util" >
        <ant dir="options" />
  </target>        

  <target name="lib-text" depends="lib-windows,lib-options" > <!-- JST-PENDING: Remove somehow dependency on options -->
        <ant dir="text" />
  </target>        

  <target name="lib-util" depends="13javac-workaround" >
        <ant dir="util" />
  </target>        
  
  <target name="lib-windows" depends="lib-nodes" >
        <ant dir="windows" />
  </target>        
  
  <!-- JST-PENDING: Separate lookup as well and remove WeakSet, ErrorManager
        logging
        -->
  <target name="lib-lookup" > <!--depends="compile,13javac-workaround,vers-prep,lookup-src" -->
  <!-- JST-PENDING: Separate lookup or not?
	<mkdir dir="standalone"/>
        <copy file="openide-lookup.mf" tofile="openide-lookup-subst.mf" filtering="on"/>
        
  	<jar jarfile="standalone/openide-lookup.jar"
	     manifest="openide-lookup-subst.mf"
	     compress="false">
             <fileset dir="src" excludesfile="../nbbuild/standard-jar-excludes.txt" >
                  <include name="org/openide/ErrorManager*class"/>
                  <include name="org/openide/util/lookup/*"/>
                  <include name="org/openide/util/*Lookup*"/>
                  <include name="org/openide/util/WeakSet*"/>
                  <include name="org/openide/util/enum/*"/>
                  
                  <!- exlude localized resources, they are part of openide.jar ->
                  <exclude name="org/openide/**/*_*" />
                  <exclude name="org/openide/util/*_*" />
             </fileset>
        </jar>
        -->
  </target>        
  
  
  <target  name="lookup-src" description="Creates zip file with lookup sources.">
    <mkdir dir="standalone"/>
    <zip compress="true" zipfile="standalone/lookup-src.zip">
        <fileset dir="src">
            <include name="org/openide/ErrorManager.java"/>
            <include name="org/openide/util/lookup/*"/>
            <include name="org/openide/util/*Lookup*"/>
            <include name="org/openide/util/WeakSet.java"/>
            <include name="org/openide/util/enum/*"/>
            
            <exclude name="org/openide/**/*_*" />
            <exclude name="org/openide/util/*_*" />
            <exclude name="**/*.class"/>
            <exclude name="**/.nbattrs"/>
        </fileset>
    </zip>
  </target>
  
  <!-- dependencies between libraries -->
  
  <target name="deplib" description="Generates a file describing dependencies between libraries" >
      <taskdef name="dep" classname="org.netbeans.nbbuild.GenerateDependencies" classpath="../nbbuild/nbantext.jar"/>
  
      <dep destfile="dep.xml" >
            <include name="actions/manifest.mf" />
            <include name="dialogs/manifest.mf" />
            <include name="explorer/manifest.mf" />
            <include name="fs/manifest.mf" />
            <include name="nodes/manifest.mf" />
            <include name="modules/manifest.mf" />
            <include name="options/manifest.mf" />
            <include name="text/manifest.mf" />
            <include name="util/manifest.mf" />
            <include name="windows/manifest.mf" />
      </dep>
  </target>

  <!-- Open API documentation. -->

  <target name="open-apis-check-existence-1" unless="open-apis-force-rebuild">
    <available property="open-apis-exists" file="javadoc/OpenAPIs.zip"/>
  </target>

  <target name="open-apis-check-existence" depends="open-apis-check-existence-1" unless="open-apis-exists">
    <property name="open-apis-force-rebuild" value="true"/>
    <echo message="Open APIs are not built at all, will be created."/>
  </target>

  <target name="open-apis-check-timestamps-1" depends="open-apis-check-existence" unless="open-apis-force-rebuild">
    <uptodate property="open-apis-up-to-date" targetfile="javadoc/OpenAPIs.zip">
      <srcfiles dir="src">
        <include name="org/openide/**/*.java"/>
      </srcfiles>
      <srcfiles dir="api/doc">
        <include name="org/openide/"/>
        <include name="overview.html"/>
        <include name="changes/apichanges.xml"/>
      </srcfiles>
      <srcfiles dir="../nbbuild/javadoctools">
        <include name="apichanges.xsl"/>
        <include name="*.css"/>
      </srcfiles>
      <srcfiles dir="arch">
        <include name="*.xml"/>
      </srcfiles>
    </uptodate>
  </target>

  <target name="open-apis-check-timestamps" depends="open-apis-check-timestamps-1" unless="open-apis-up-to-date">
    <property name="open-apis-force-rebuild" value="true"/>
    <echo>Open APIs are out of date and will be rebuilt.
To avoid rebuilding them after every change in API sources,
use -Dopen-apis-up-to-date=true
</echo>
  </target>

  <target name="open-apis-maybe-skip" depends="open-apis-check-timestamps" unless="open-apis-force-rebuild">
    <echo>Not building Open APIs because they are up-to-date...
To force them to be rebuilt, run again with -Dopen-apis-force-rebuild=true
</echo>
  </target>
  
  <target name="javadoc" depends="javadoc-plain,export-interfaces" if="open-apis-force-rebuild"
          description="Create Open API documentation." />
          
          
  <target name="javadoc-plain" depends="init,open-apis-check-timestamps,open-apis-maybe-skip" if="open-apis-force-rebuild" >
    <taskdef name="checklinks" classname="org.netbeans.nbbuild.CheckLinks">
      <classpath>
        <pathelement location="../nbbuild/nbantext.jar"/>
        <fileset dir="../libs/external">
          <include name="regexp*.jar"/>
        </fileset>
      </classpath>
    </taskdef>
    <taskdef name="arch" classname="org.netbeans.nbbuild.Arch">
      <classpath>
        <pathelement location="../nbbuild/nbantext.jar"/>
        <fileset dir="../libs/external">
          <include name="xerces*.jar"/>
        </fileset>
      </classpath>
    </taskdef>
    <property name="jdk-docs-location" value="http://java.sun.com/j2se/1.4.2/docs/api"/>
    <property name="javadoc.web.root" value="http://www.netbeans.org/download/dev/javadoc"/>
    <property name="execution-docs-location" value="${javadoc.web.root}/ExecutionAPI"/>
    <property name="io-docs-location" value="${javadoc.web.root}/InputOutputAPI"/>
    <!-- XXX delete (and @COMPILER@ token below too) when deprecated by Projects: -->
    <property name="compiler-docs-location" value="${javadoc.web.root}/CompilerAPI"/>
    <property name="loaders-docs-location" value="${javadoc.web.root}/LoadersAPI"/>
    <property name="javahelp-docs-location" value="${javadoc.web.root}/JavaHelpAPI"/>
    <property name="java-api-docs-location" value="${javadoc.web.root}/JavaSupportAPIs"/>
    <tstamp/>
    <property name="open-apis-footer" value='&lt;span class="footnote"&gt;Built on ${TODAY}.&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;Portions Copyright 1997-2003 Sun Microsystems, Inc. All rights reserved.&lt;/span&gt;'/>
    <echo message="Build Open API documentation..."/>
    <mkdir dir="javadoc/OpenAPIs"/>
    <javadoc destdir="javadoc/OpenAPIs"
             packagenames="org.openide,org.openide.actions,org.openide.awt,org.openide.cookies,org.openide.explorer,org.openide.explorer.propertysheet,org.openide.explorer.propertysheet.editors,org.openide.explorer.view,org.openide.filesystems,org.openide.modules,org.openide.nodes,org.openide.options,org.openide.text,org.openide.util,org.openide.util.actions,org.openide.util.datatransfer,org.openide.util.enum,org.openide.util.io,org.openide.util.lookup,org.openide.windows,org.openide.xml"
             doctitle="NetBeans Open APIs"
             windowtitle="NetBeans APIs"
             overview="api/doc/overview.html"
             bottom="${open-apis-footer}"
             use="true"
             splitindex="true"
             author="false"
             version="false"
             maxmemory="64m"
	     stylesheetfile="../nbbuild/javadoctools/javadoc.css"
    >
      <sourcepath>
        <pathelement location="api/doc"/>
        <pathelement location="src"/>
      </sourcepath>
      <classpath refid="openide-cp"/>
      <link href="${jdk-docs-location}"
            offline="true"
            packagelistLoc="api/doc"
      />
      <group title="&lt;a href=&quot;@TOP@org/openide/modules/doc-files/api.html&quot;&gt;Modules API&lt;/a&gt;"
             packages="org.openide.modules"/>
      <group title="ServiceType, WizardDescriptor, ..."
             packages="org.openide"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/doc-files/services-api.html&quot;&gt;Services &amp;amp; Lookup API&lt;/a&gt;"
             packages="org.openide.util.lookup:org.openide.cookies"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/filesystems/doc-files/api.html&quot;&gt;Filesystems API&lt;/a&gt;"
             packages="org.openide.filesystems"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/nodes/doc-files/api.html&quot;&gt;Nodes API&lt;/a&gt;"
             packages="org.openide.nodes"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/explorer/doc-files/api.html&quot;&gt;Explorer API&lt;/a&gt;"
             packages="org.openide.explorer:org.openide.explorer.propertysheet:org.openide.explorer.propertysheet.editors:org.openide.explorer.view"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/actions/doc-files/api.html&quot;&gt;Actions API&lt;/a&gt;"
             packages="org.openide.actions:org.openide.util.actions"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/text/doc-files/api.html&quot;&gt;Editor API&lt;/a&gt;"
             packages="org.openide.text"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/windows/doc-files/api.html&quot;&gt;Window System API&lt;/a&gt;"
             packages="org.openide.windows"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/options/doc-files/api.html&quot;&gt;Options API&lt;/a&gt;"
             packages="org.openide.options"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/util/doc-files/api.html&quot;&gt;Utility Classes&lt;/a&gt;"
             packages="org.openide.awt:org.openide.util:org.openide.util.datatransfer:org.openide.util.enum:org.openide.util.io:org.openide.xml"/>
    </javadoc>
    <copy todir="javadoc/OpenAPIs">
      <fileset dir="../nbbuild/javadoctools">
        <include name="*.css"/>
      </fileset>
    </copy>
    <ant dir="../libs/external" target="unscramble"/>
    <xmlvalidate file="api/doc/changes/apichanges.xml" failonerror="true"/>
    <style in="api/doc/changes/apichanges.xml" out="javadoc/OpenAPIs/apichanges.html" style="../nbbuild/javadoctools/apichanges.xsl"/>
    <mkdir dir="javadoc/OpenAPIs/arch"/>
    <!-- Warn about incorrect question version, but do not make build fail: -->
    <property name="arch.warn" value="true"/>
    <arch answers="arch/arch-openide-modules.xml" output="javadoc/OpenAPIs/arch/openide-modules.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-dialogs.xml" output="javadoc/OpenAPIs/arch/openide-dialogs.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-lookup.xml" output="javadoc/OpenAPIs/arch/openide-lookup.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-filesystems.xml" output="javadoc/OpenAPIs/arch/openide-filesystems.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-nodes.xml" output="javadoc/OpenAPIs/arch/openide-nodes.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-explorer.xml" output="javadoc/OpenAPIs/arch/openide-explorer.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-actions.xml" output="javadoc/OpenAPIs/arch/openide-actions.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-windowsystem.xml" output="javadoc/OpenAPIs/arch/openide-windowsystem.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-utilities.xml" output="javadoc/OpenAPIs/arch/openide-utilities.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-editor.xml" output="javadoc/OpenAPIs/arch/openide-editor.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-propertysheet.xml" output="javadoc/OpenAPIs/arch/openide-propertysheet.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <replace dir="javadoc/OpenAPIs">
      <include name="**/*.html"/>
      <replacefilter token="@JDK@" value="${jdk-docs-location}"/>
      <replacefilter token="@OPENIDE/EXECUTION@" value="${execution-docs-location}"/>
      <replacefilter token="@OPENIDE/IO@" value="${io-docs-location}"/>
      <replacefilter token="@OPENIDE/COMPILER@" value="${compiler-docs-location}"/>
      <replacefilter token="@OPENIDE/LOADERS@" value="${loaders-docs-location}"/>
      <replacefilter token="@CORE/JAVAHELP@" value="${javahelp-docs-location}"/>
      <replacefilter token="@JAVA/API@" value="${java-api-docs-location}"/>
      <replacefilter token="@FOOTER@" value="${open-apis-footer}"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="">
      <include name="*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../">
      <include name="*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../">
      <include name="*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../">
      <include name="*/*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../../">
      <include name="*/*/*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../../../">
      <include name="*/*/*/*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../../../../">
      <include name="*/*/*/*/*/*/*.html"/>
    </replace>
    <!-- [PENDING] fuller check mode too, checking more HTML files? -->
    <property name="javadoc.check.external.links" value="false"/>
    <checklinks basedir="javadoc/OpenAPIs" checkexternal="${javadoc.check.external.links}">
      <include name="overview-summary.html"/>
      <include name="apichanges.html"/>
      <include name="**/package-summary.html"/>
      <include name="**/doc-files/**/*.html"/>
      <!-- Make hyperlinks point to the source files, not the copied files: -->
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/overview-summary.html" to="${basedir}/api/doc/overview.html"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/*/package-summary.html" to="${basedir}/api/doc/*/package.html"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/apichanges.html" to="${basedir}/api/doc/changes/apichanges.xml"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/arch/*.html" to="${basedir}/arch/arch-*.xml"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/*.html" to="${basedir}/api/doc/*.html"/>
    </checklinks>
    <zip zipfile="javadoc/OpenAPIs.zip" basedir="javadoc/OpenAPIs"/>
  </target>
  
  <target name="export-interfaces" depends="javadoc-plain" if="export.interfaces" >
  	<!-- is there just because the openide APIs are not separated and do not use javadoctools -->
    <taskdef name="arch" classname="org.netbeans.nbbuild.Arch">
      <classpath>
        <pathelement location="../nbbuild/nbantext.jar"/>
        <fileset dir="../libs/external">
          <include name="xerces*.jar"/>
        </fileset>
      </classpath>
    </taskdef>
    
    <!-- Warn about incorrect question version, but do not make build fail: -->
    <property name="arch.warn" value="true"/>
    <property name="arch.xsl" location="../nbbuild/javadoctools/exportInterfaces.xsl" />
    <property name="arch.target" value="OpenAPIs/arch" />
    <arch answers="arch/arch-openide-modules.xml" output="${export.interfaces}/openide-modules.html" />
    <arch answers="arch/arch-openide-dialogs.xml" output="${export.interfaces}/openide-dialogs.html" />
    <arch answers="arch/arch-openide-lookup.xml" output="${export.interfaces}/openide-lookup.html" />
    <arch answers="arch/arch-openide-filesystems.xml" output="${export.interfaces}/openide-filesystems.html" />
    <arch answers="arch/arch-openide-nodes.xml" output="${export.interfaces}/openide-nodes.html" />
    <arch answers="arch/arch-openide-explorer.xml" output="${export.interfaces}/openide-explorer.html" />
    <arch answers="arch/arch-openide-actions.xml" output="${export.interfaces}/openide-actions.html" />
    <arch answers="arch/arch-openide-windowsystem.xml" output="${export.interfaces}/openide-windowsystem.html" />
    <arch answers="arch/arch-openide-utilities.xml" output="${export.interfaces}/openide-utilities.html" />
    <arch answers="arch/arch-openide-editor.xml" output="${export.interfaces}/openide-editor.html" />
    <arch answers="arch/arch-openide-propertysheet.xml" output="${export.interfaces}/openide-propertysheet.html" />
    
  </target>

  <target name="apis-tidy" description="Run the Tidy HTML checker on API prose documents.">
    <apply parallel="true" failonerror="true" executable="tidy">
      <fileset dir="api/doc">
        <include name="**/*.html"/>
        <!-- Machine-generated: -->
        <exclude name="org/openide/filesystems/doc-files/resolverDocumentation.html"/>
        <!-- Missing title tags, it is OK: -->
        <exclude name="**/package.html"/>
        <!-- Maintained separately: -->
        <exclude name="tutorial/"/>
      </fileset>
      <arg value="-e"/>
      <arg value="--gnu-emacs"/>
      <arg value="true"/>
    </apply>
  </target>

  <target name="nb-api-tutorial" description="Make Open APIs Getting Started Tutorial.">
    <zip zipfile="nb-api-tutorial.zip">
      <fileset dir="api/doc/tutorial">
        <exclude name="README.txt"/>
      </fileset>
    </zip>
  </target>

  <target name="clean" description="Remove all build products." depends="libs-clean">
    <delete>
      <fileset dir="src">
        <include name="**/*.class"/>
      </fileset>
      <fileset dir="compat/src">
        <include name="**/*.class"/>
      </fileset>
      <fileset dir=".">
        <include name="*-subst.mf"/>
      </fileset>
    </delete>
    <delete dir="netbeans"/>
    <delete file="openide-13javac-workaround.jar"/>
    <delete dir="javadoc"/>
    <delete file="nb-api-tutorial.zip"/>
    <delete dir="standalone"/>
    <delete dir="Info"/>
    <delete file="openide.nbm"/>
    <ant dir="api/examples" target="clean"/>
  </target>

    <target  name="standalone-fs" depends="standalone-fs-prepare" description="Creates ZIP file suitable for download. ZIP file contains all JARs necessary for using standalone filesystems (excluding a JAXP implementation).">
        <zip compress="true" zipfile="standalone/nbfilesystems.zip">
            <fileset dir="standalone">
                <include name="openide-fs.jar"/>
                <include name="openide-util.jar"/>
                <include name="openide-lookup.jar"/>
                <include name="README-FS.txt"/>
            </fileset>
        </zip>
    </target>

    <target name="standalone-fs-prepare" depends="lib-lookup,lib-util,lib-fs">
        <mkdir dir="standalone"/>
        <echo file="standalone/README-FS.txt"><![CDATA[Filesystems Library
===================

Please visit the documentation at http://openide.netbeans.org/fs/

If you want to use the library in your application just put nbfilesystems.jar
into your classpath:

	java -cp nbfilesystems.jar yourpackage.YourClass

You need a JAXP-compliant XML parser in the classpath too.

Comments or questions? Post to the dev@openide.netbeans.org mailing list.
]]></echo>

    </target>

</project>
