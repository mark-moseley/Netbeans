<?xml version="1.0" encoding="UTF-8"?><!-- -*- sgml-indent-step: 2 -*- -->
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="openide" default="netbeans" basedir=".">
  <import file="../nbbuild/default.xml"/>

  <target name="init" depends="default.init">
    <patternset id="openide.files">
      <include name="${nb.lib.dir}/openide.jar"/>
      <include name="${nb.system.dir}/ModuleAutoDeps/org-openide.xml"/>
    </patternset>
    <path id="openide-cp">
      <!-- nothing -->
    </path>
    <property name="build.compiler.debug" value="true"/> <!-- by default -->
  </target>

  <!-- See #11746. -->
  <target name="vers-prep-1">
    <uptodate targetfile="build/manifest-subst.mf" property="spec-vers-up-to-date">
      <srcfiles dir=".">
        <include name="openide-spec-vers.properties"/>
      </srcfiles>
    </uptodate>
  </target>
  <target name="vers-prep-2" depends="vers-prep-1" unless="spec-vers-up-to-date">
    <!-- Either manifest-subst.mf is missing or openide-spec-vers.properties is newer. -->
    <delete>
      <fileset dir=".">
        <include name="build/*-subst.mf"/>
      </fileset>
    </delete>
  </target>
  <target name="vers-prep" depends="vers-prep-2">
    <property file="openide-spec-vers.properties"/>
    <filter token="SPEC_VERS_SUBST" value="${openide.specification.version}"/>
    <filter token="BUILD_NUMBER_SUBST" value="${buildnumber}"/>
  </target>
  
  <target name="release" depends="init">
    <copy todir="${netbeans.dest.dir}/${cluster.dir}" includeEmptyDirs="false">
      <fileset dir="release" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
    </copy>
  </target>

  <target name="netbeans" depends="init,jars-from-libs,release,libs" description="Build everything needed for inclusion in the IDE.">
    <genlist outputfiledir="${netbeans.dest.dir}/${cluster.dir}" module="${nb.lib.dir}/openide.jar">
      <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
        <patternset refID="openide.files"/>
      </fileset>
    </genlist>
  </target>

  <target name="nbm" depends="netbeans">
    <makenbm file="build/openide.nbm"
             productdir="${netbeans.dest.dir}/${cluster.dir}"
             module="${nb.lib.dir}/openide.jar"
	     homepage="http://openide.${homepage.base}/"
	     distribution="http://${dist.base}/openide.nbm">
      <license file="${license.file}"/>
      <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
    </makenbm>
  </target>

  <!-- Define the sets of files for various libraries -->
  <selector id="openide.compat" >
    <or>
        <!-- this is equal to deprecation of the stuff -->
        <filename name="**/openide/explorer/ExplorerPanel*" />
        <filename name="**/openide/explorer/ExplorerActions.java" />
        <filename name="**/openide/explorer/ExplorerActions.class" />
        <filename name="**/openide/explorer/ExplorerActions$$*.class" />
        <filename name="**/openide/util/HttpServer*" />
        <filename name="**/openide/util/WeakListener.java" />
        <filename name="**/openide/util/WeakListener.class" />
        <filename name="**/openide/util/WeakListener$$*.class" />
    </or>
  </selector>
  
  
  <selector id="openide.actions" >
    <or>
        <filename name="**/openide/actions/*" />
        
        <!-- resource -->
        <filename name="**/openide/resources/actions/*" />
        <filename name="**/openide/resources/propertysheet/customize.gif" />
    </or>
  </selector>
  <selector id="openide.text" >
    <or>
      <filename name="**/openide/text/*" />
      <filename name="**/openide/cookies/LineCookie*" />
      <filename name="**/openide/cookies/EditorCookie*" />

      <!-- resources -->
      <filename name="**/openide/resources/editorMode*" />
      <filename name="**/openide/resources/printSettings*" />
    </or>
  </selector>
  <selector id="openide.nodes" >
    <and>
       <or>
         <filename name="**/openide/nodes/" />
         <filename name="**/openide/cookies/*" />
         <filename name="**/openide/util/actions/NodeAction*" />
         <filename name="**/openide/util/actions/CookieAction*" />
         
         <!-- resources -->
         <filename name="**/openide/resources/defaultNode*" />
         <filename name="**/openide/resources/beans*" />
       </or>
       <not>
         <selector refid="openide.text" />
       </not>
    </and>
  </selector>
  <selector id="openide.awt" >
    <or>
        <filename name="**/openide/awt/*" />

        <!-- resources -->
        <filename name="**/openide/resources/html/*" />
        <!-- already in openide.util -->
        <!-- <filename name="**/openide/resources/actions/empty.gif" /> -->
    </or>
  </selector>
  
  <selector id="openide.util.enum" >
    <filename name="**/openide/util/enum/*" />
  </selector>
           
  <selector id="openide.util" >
     <and>
        <or>
            <filename name="**/openide/ErrorManager*" />
            <filename name="**/openide/ServiceType*" />
            <filename name="**/openide/util/*" />
            <filename name="**/openide/util/enum/*" />
            <filename name="**/openide/util/lookup/*" />
            <filename name="**/openide/util/datatransfer/*" />
            <filename name="**/openide/util/io/*" />
            <filename name="**/openide/util/actions/*" />
            <filename name="**/openide/xml/*" />         

            <!-- resources -->
            <filename name="**/openide/resources/actions/empty.gif" />
            <filename name="**/openide/resources/progress-cursor*"/>
        </or>
        
        <none>
          <selector refid="openide.compat" />
          <selector refid="openide.util.enum" />
          <selector refid="openide.actions" />
          <selector refid="openide.nodes" />
        </none>
      </and>
  </selector>
  <selector id="openide.dialogs" >
    <and>
        <or>
            <filename name="**/openide/*" />
            <!-- resources -->
            <filename name="**/openide/resources/defaultWizard.gif" />
        </or>
        <not>
            <selector refid="openide.util" />
        </not>
    </and>
  </selector>
  <selector id="openide.fs" >
    <or>
        <filename name="**/openide/filesystems/*" />
        <filename name="**/openide/resources/localFS*" />
        <filename name="**/openide/resources/jarFS*" />
    </or>
  </selector>
  <selector id="openide.modules" >
    <filename name="**/openide/modules/*" />
  </selector>
  <selector id="openide.options" >
    <filename name="**/openide/options/*" />
  </selector>
  <selector id="openide.windows" >
    <filename name="**/openide/windows/*" />
  </selector>
  <selector id="openide.explorer" >
    <and>
      <or>
        <filename name="**/openide/explorer/**" />
        
        <!-- resources -->
        <filename name="**/openide/resources/propertysheet/propertySheetHelp.gif" />
        <filename name="**/openide/resources/propertysheet/propertySheetHelp.gif" />
        <filename name="**/openide/resources/actions/setDefaultValue.gif" />
        <filename name="**/openide/resources/propertysheet/invalid.gif" />
        <filename name="**/openide/resources/propertysheet/modified.gif" />
        <filename name="**/openide/resources/cursorscopysingle.gif" />
        <filename name="**/openide/resources/cursorsnone.gif" />
        <filename name="**/openide/resources/cursorsmovesingle.gif" />
        <filename name="**/openide/resources/cursorsnone.gif" />
        <filename name="**/openide/resources/cursorsunknownsingle.gif" />
        <filename name="**/openide/resources/cursorsnone.gif" />
        <filename name="**/openide/resources/cursorsnone.gif" />
        <filename name="**/openide/resources/cursorscopysingle.gif" />
        <filename name="**/openide/resources/defaultNode.gif" />
        <filename name="**/openide/resources/columns.gif" />
        <filename name="**/openide/resources/columnsSortedAsc.gif" />
        <filename name="**/openide/resources/columnsSortedDesc.gif" />
      </or>
      <none>
        <selector refid="openide.compat" />
        <selector refid="openide.actions" />
        <selector refid="openide.nodes" />
      </none>
    </and>
  </selector>
  
  <!-- compiles one of the sets of above defines files into 
    provided directory
  -->
  <target name="do-lib-javac-localdir" if="localdir">
    <mkdir dir="${destdir}"/>
    <javac sourcepath="" destdir="${destdir}" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}" source="1.4">
      <src path="src" />
      <src path="${localdir}" />
      <selector>
        <or>
          <selector refid="${selector}" />
          <filename name="${include}" />
          <filename name="org/netbeans/modules/openide/**/*.java" />
        </or>
      </selector>
      <classpath refid="classpath" />
    </javac>
    <!-- copy non-java files into new direction -->
    <copy todir="${destdir}" >
      <fileset dir="src" >
        <selector refid="${selector}" />
        <exclude name="**/*.java" />
        <exclude name="**/*.class" />
      </fileset>
    </copy>
    <copy todir="${destdir}">
      <fileset dir="${localdir}">
        <excludesfile name="${nbroot}/nbbuild/standard-jar-excludes.txt"/>
      </fileset>
    </copy>
  </target>
  <target name="do-lib-javac-nolocaldir" unless="localdir">
    <mkdir dir="${destdir}"/>
    <javac sourcepath="" destdir="${destdir}" deprecation="${build.compiler.deprecation}" debug="${build.compiler.debug}" source="1.4">
      <src path="src" />
      <selector>
        <or>
          <selector refid="${selector}" />
          <filename name="${include}" />
          <filename name="org/netbeans/modules/openide/**/*.java" />
        </or>
      </selector>
      <classpath refid="classpath" />
    </javac>
    <!-- copy non-java files into new direction -->
    <copy todir="${destdir}" >
      <fileset dir="src" >
        <selector refid="${selector}" />
        <exclude name="**/*.java" />
        <exclude name="**/*.class" />
      </fileset>
    </copy>
  </target>
  <target name="do-lib-javac" depends="do-lib-javac-localdir,do-lib-javac-nolocaldir"/>

  <target name="do-lib-javadoc" >
    <ant dir="${nbroot}/nbbuild/javadoctools" antfile="template.xml" target="javadoc" inheritRefs="true" >
      <property name="javadoc.base" location="${localdir}/.."/>
      <property name="javadoc.src" location="src"/>
      <property name="javadoc.classpath" refid="classpath"/>
      <property name="javadoc.apichanges" location="api/doc/changes/apichanges.xml"/>      
<!--      <property name="javadoc.docfiles" location="api/doc"/>
      <property name="javadoc.overview" location="api/doc/overview.html"/> -->
      
      <property name="javadoc.files" value="${selector}" />
    </ant>
  </target>

  <!-- Build whole openide.jar from separate libraries -->
  <target name="jars-from-libs" depends="init,libs,vers-prep" description="Create JAR files from copied directories." unless="no-openide.jar">
    <property name="openide.jar" value="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide.jar" />
    <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}"/>
    <copy file="manifest.mf" tofile="build/manifest-subst.mf" filtering="on"/>
    <!-- To find overlaps, use: zipinfo netbeans/lib/openide.jar|fgrep stor|cut -c21-29,54-|sort -k2|uniq|uniq -d -s9 -->
    <jar jarfile="${openide.jar}" manifest="build/manifest-subst.mf" compress="false" duplicate="fail" >
      <fileset dir="actions/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="awt/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="dialogs/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt" />
      <fileset dir="explorer/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="fs/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="nodes/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="options/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="text/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="util/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="util/enum/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="modules/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="windows/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
      <fileset dir="compat/build/classes" excludesfile="../nbbuild/standard-jar-excludes.txt"/>
    </jar>
  </target>
  
  
  <!-- Build separate libraries for the IDE -->
  
  <target name="libs" depends="
    lib-actions, 
    lib-dialogs,
    lib-explorer,
    lib-fs,
    lib-nodes,
    lib-modules,
    lib-options,
    lib-text,
    lib-util,
    lib-util-enum,
    lib-windows,
    lib-awt,
    lib-compat" />
    
  <target name="libs-clean" >
        <ant dir="awt" target="clean" />
        <ant dir="actions" target="clean" />
        <ant dir="dialogs" target="clean" />
        <ant dir="explorer" target="clean" />
        <ant dir="fs" target="clean" />
        <ant dir="nodes" target="clean" />
        <ant dir="modules" target="clean" />
        <ant dir="options" target="clean" />
        <ant dir="text" target="clean" />
        <ant dir="util" target="clean" />
        <ant dir="util/enum" target="clean" />
        <ant dir="windows" target="clean" />
        <ant dir="compat" target="clean" />
  </target>
    
  
  <target name="lib-actions" depends="lib-util,lib-nodes,lib-windows,lib-text,lib-explorer,lib-fs" >
        <ant dir="actions" />
  </target>        
  
  <target name="lib-awt" depends="lib-util" >
        <ant dir="awt" />
  </target>        

  <target name="lib-dialogs" depends="lib-util,lib-awt" >
        <ant dir="dialogs" />
  </target>        
  
  <target name="lib-explorer" depends="lib-nodes" >
        <ant dir="explorer" />
  </target>        
  
  <target name="lib-fs" depends="lib-util" >
        <ant dir="fs" />
  </target>

  <target name="lib-nodes" depends="lib-util,lib-dialogs" >
        <ant dir="nodes" />
  </target>        

  <target name="lib-modules" depends="lib-util" >
        <ant dir="modules" />
  </target>        
  
  <target name="lib-options" depends="lib-util" >
        <ant dir="options" />
  </target>        

  <target name="lib-text" depends="lib-windows,lib-options" > <!-- JST-PENDING: Remove somehow dependency on options -->
        <ant dir="text" />
  </target>        

  <target name="lib-util">
        <ant dir="util" />
  </target>
  
  <target name="lib-util-enum">
        <ant dir="util/enum" />
  </target>        
  
  <target name="lib-windows" depends="lib-nodes" >
        <ant dir="windows" />
  </target>        
  
  <target name="lib-compat" depends="lib-awt,lib-util,lib-nodes,lib-windows,lib-text,lib-explorer,lib-fs,lib-actions" >
        <ant dir="compat" />
  </target>        
  
  
  <!-- JST-PENDING: Separate lookup as well and remove WeakSet, ErrorManager
        logging
        -->
  <target name="lib-lookup" > <!--depends="vers-prep,lookup-src" -->
  <!-- JST-PENDING: Separate lookup or not?
	<mkdir dir="build/standalone"/>
        <copy file="openide-lookup.mf" tofile="build/openide-lookup-subst.mf" filtering="on"/>
        
  	<jar jarfile="build/standalone/openide-lookup.jar"
	     manifest="build/openide-lookup-subst.mf"
	     compress="false">
             <fileset dir="src" excludesfile="../nbbuild/standard-jar-excludes.txt" >
                  <include name="org/openide/ErrorManager*class"/>
                  <include name="org/openide/util/lookup/*"/>
                  <include name="org/openide/util/*Lookup*"/>
                  <include name="org/openide/util/WeakSet*"/>
                  <include name="org/openide/util/enum/*"/>
             </fileset>
        </jar>
        -->
  </target>        
  
  
  <!-- PENDING
  <target  name="lookup-src" description="Creates zip file with lookup sources.">
    <mkdir dir="build/standalone"/>
    <zip compress="true" zipfile="build/standalone/lookup-src.zip">
        <fileset dir="src">
            <include name="org/openide/ErrorManager.java"/>
            <include name="org/openide/util/lookup/*"/>
            <include name="org/openide/util/*Lookup*"/>
            <include name="org/openide/util/WeakSet.java"/>
            <include name="org/openide/util/enum/*"/>
            
            <exclude name="org/openide/**/*_*" />
            <exclude name="org/openide/util/*_*" />
            <exclude name="**/*.class"/>
            <exclude name="**/.nbattrs"/>
        </fileset>
    </zip>
  </target>
  -->
  
  <!-- dependencies between libraries -->
  
  <target name="deplib" description="Generates a file describing dependencies between libraries" >
      <taskdef name="dep" classname="org.netbeans.nbbuild.GenerateDependencies" classpath="../nbbuild/nbantext.jar"/>
  
      <dep destfile="dep.xml" >
            <include name="actions/manifest.mf" />
            <include name="dialogs/manifest.mf" />
            <include name="explorer/manifest.mf" />
            <include name="fs/manifest.mf" />
            <include name="nodes/manifest.mf" />
            <include name="modules/manifest.mf" />
            <include name="options/manifest.mf" />
            <include name="text/manifest.mf" />
            <include name="util/manifest.mf" />
            <include name="windows/manifest.mf" />
      </dep>
  </target>

  <!-- Open API documentation. -->

  <target name="open-apis-check-existence-1" unless="open-apis-force-rebuild">
    <available property="open-apis-exists" file="javadoc/OpenAPIs.zip"/>
  </target>

  <target name="open-apis-check-existence" depends="open-apis-check-existence-1" unless="open-apis-exists">
    <property name="open-apis-force-rebuild" value="true"/>
    <echo message="Open APIs are not built at all, will be created."/>
  </target>

  <target name="open-apis-check-timestamps-1" depends="open-apis-check-existence" unless="open-apis-force-rebuild">
    <uptodate property="open-apis-up-to-date" targetfile="javadoc/OpenAPIs.zip">
      <srcfiles dir="src">
        <include name="org/openide/**/*.java"/>
      </srcfiles>
      <srcfiles dir="api/doc">
        <include name="org/openide/"/>
        <include name="overview.html"/>
        <include name="changes/apichanges.xml"/>
      </srcfiles>
      <srcfiles dir="../nbbuild/javadoctools">
        <include name="apichanges.xsl"/>
        <include name="*.css"/>
      </srcfiles>
      <srcfiles dir="arch">
        <include name="*.xml"/>
      </srcfiles>
    </uptodate>
  </target>

  <target name="open-apis-check-timestamps" depends="open-apis-check-timestamps-1" unless="open-apis-up-to-date">
    <property name="open-apis-force-rebuild" value="true"/>
    <echo>Open APIs are out of date and will be rebuilt.
To avoid rebuilding them after every change in API sources,
use -Dopen-apis-up-to-date=true
</echo>
  </target>

  <target name="open-apis-maybe-skip" depends="open-apis-check-timestamps" unless="open-apis-force-rebuild">
    <echo>Not building Open APIs because they are up-to-date...
To force them to be rebuilt, run again with -Dopen-apis-force-rebuild=true
</echo>
  </target>
  
  <target name="javadoc" depends="javadoc-plain,export-interfaces,export-apichanges" if="open-apis-force-rebuild" />
          
  <target name="all-javadoc" description="Create Open API documentation." >
        <ant dir="util" target="javadoc" />
        <ant dir="awt" target="javadoc" />
        <ant dir="dialogs" target="javadoc" />
        <ant dir="explorer" target="javadoc" />
        <ant dir="fs" target="javadoc" />
        <ant dir="nodes" target="javadoc" />
        <ant dir="modules" target="javadoc" />
        <ant dir="options" target="javadoc" />
        <ant dir="text" target="javadoc" />
        <ant dir="windows" target="javadoc" />
        <ant dir="actions" target="javadoc" />
  </target>
          
          
          
  <target name="javadoc-plain" depends="init,open-apis-check-timestamps,open-apis-maybe-skip" if="open-apis-force-rebuild" >
    <taskdef name="checklinks" classname="org.netbeans.nbbuild.CheckLinks">
      <classpath>
        <pathelement location="../nbbuild/nbantext.jar"/>
      </classpath>
    </taskdef>
    <taskdef name="arch" classname="org.netbeans.nbbuild.Arch">
      <classpath>
        <pathelement location="../nbbuild/nbantext.jar"/>
      </classpath>
    </taskdef>
    <property name="jdk-docs-location" value="http://java.sun.com/j2se/1.4.2/docs/api"/>
    <property name="javadoc.web.root" value="http://www.netbeans.org/download/dev/javadoc"/>
    <property name="execution-docs-location" value="${javadoc.web.root}/ExecutionAPI"/>
    <property name="io-docs-location" value="${javadoc.web.root}/InputOutputAPI"/>
    <property name="loaders-docs-location" value="${javadoc.web.root}/LoadersAPI"/>
    <property name="javahelp-docs-location" value="${javadoc.web.root}/JavaHelpAPI"/>
    <property name="java-api-docs-location" value="${javadoc.web.root}/JavaSupportAPIs"/>
    <tstamp/>
    <property name="open-apis-footer" value='&lt;span class="footnote"&gt;Built on ${TODAY}.&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;Portions Copyright 1997-2005 Sun Microsystems, Inc. All rights reserved.&lt;/span&gt;'/>
    <echo message="Build Open API documentation..."/>
    <mkdir dir="javadoc/OpenAPIs"/>
    <javadoc destdir="javadoc/OpenAPIs"
             packagenames="org.openide,org.openide.actions,org.openide.awt,org.openide.cookies,org.openide.explorer,org.openide.explorer.propertysheet,org.openide.explorer.propertysheet.editors,org.openide.explorer.view,org.openide.filesystems,org.openide.modules,org.openide.nodes,org.openide.options,org.openide.text,org.openide.util,org.openide.util.actions,org.openide.util.datatransfer,org.openide.util.io,org.openide.util.lookup,org.openide.windows,org.openide.xml"
             doctitle="NetBeans Open APIs"
             windowtitle="NetBeans APIs"
             overview="api/doc/overview.html"
             bottom="${open-apis-footer}"
             use="true"
             splitindex="true"
             author="false"
             version="false"
             maxmemory="64m"
	     stylesheetfile="../nbbuild/javadoctools/javadoc.css"
             source="1.4"
    >
      <sourcepath>
        <pathelement location="api/doc"/>
        <pathelement location="src"/>
      </sourcepath>
      <classpath refid="openide-cp"/>
      <link href="${jdk-docs-location}"
            offline="true"
            packagelistLoc="api/doc"
      />
      <group title="&lt;a href=&quot;@TOP@org/openide/modules/doc-files/api.html&quot;&gt;Modules API&lt;/a&gt;"
             packages="org.openide.modules"/>
      <group title="ServiceType, WizardDescriptor, ..."
             packages="org.openide"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/doc-files/services-api.html&quot;&gt;Services &amp;amp; Lookup API&lt;/a&gt;"
             packages="org.openide.util.lookup:org.openide.cookies"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/filesystems/doc-files/api.html&quot;&gt;Filesystems API&lt;/a&gt;"
             packages="org.openide.filesystems"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/nodes/doc-files/api.html&quot;&gt;Nodes API&lt;/a&gt;"
             packages="org.openide.nodes"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/explorer/doc-files/api.html&quot;&gt;Explorer API&lt;/a&gt;"
             packages="org.openide.explorer:org.openide.explorer.propertysheet:org.openide.explorer.propertysheet.editors:org.openide.explorer.view"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/actions/doc-files/api.html&quot;&gt;Actions API&lt;/a&gt;"
             packages="org.openide.actions:org.openide.util.actions"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/text/doc-files/api.html&quot;&gt;Editor API&lt;/a&gt;"
             packages="org.openide.text"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/windows/doc-files/api.html&quot;&gt;Window System API&lt;/a&gt;"
             packages="org.openide.windows"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/options/doc-files/api.html&quot;&gt;Options API&lt;/a&gt;"
             packages="org.openide.options"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/util/doc-files/api.html&quot;&gt;Utility Classes&lt;/a&gt;"
             packages="org.openide.awt:org.openide.util:org.openide.util.datatransfer:org.openide.util.enum:org.openide.util.io:org.openide.xml"/>
    </javadoc>
    <copy todir="javadoc/OpenAPIs">
      <fileset dir="../nbbuild/javadoctools">
        <include name="*.css"/>
      </fileset>
    </copy>
    <!-- To make sure the XHTML DTDs are available for validation: -->
    <ant dir="../libs/external" target="unscramble"/>
    <xmlvalidate file="api/doc/changes/apichanges.xml" failonerror="true"/>
    <style in="api/doc/changes/apichanges.xml" out="javadoc/OpenAPIs/apichanges.html" style="../nbbuild/javadoctools/apichanges.xsl"/>
    <mkdir dir="javadoc/OpenAPIs/arch"/>
    <!-- Warn about incorrect question version, but do not make build fail: -->
    <property name="arch.warn" value="true"/>
    <arch answers="arch/arch-openide-modules.xml" output="javadoc/OpenAPIs/arch/openide-modules.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-dialogs.xml" output="javadoc/OpenAPIs/arch/openide-dialogs.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-lookup.xml" output="javadoc/OpenAPIs/arch/openide-lookup.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-filesystems.xml" output="javadoc/OpenAPIs/arch/openide-filesystems.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-nodes.xml" output="javadoc/OpenAPIs/arch/openide-nodes.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-explorer.xml" output="javadoc/OpenAPIs/arch/openide-explorer.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-actions.xml" output="javadoc/OpenAPIs/arch/openide-actions.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-windowsystem.xml" output="javadoc/OpenAPIs/arch/openide-windowsystem.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-utilities.xml" output="javadoc/OpenAPIs/arch/openide-utilities.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-editor.xml" output="javadoc/OpenAPIs/arch/openide-editor.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <arch answers="arch/arch-openide-propertysheet.xml" output="javadoc/OpenAPIs/arch/openide-propertysheet.html" stylesheet="../prose.css" overviewlink="../overview-summary.html" footer="@FOOTER@"/>
    <replace dir="javadoc/OpenAPIs">
      <include name="**/*.html"/>
      <replacefilter token="@JDK@" value="${jdk-docs-location}"/>
      <replacefilter token="@OPENIDE/EXECUTION@" value="${execution-docs-location}"/>
      <replacefilter token="@OPENIDE/IO@" value="${io-docs-location}"/>
      <replacefilter token="@OPENIDE/LOADERS@" value="${loaders-docs-location}"/>
      <replacefilter token="@CORE/JAVAHELP@" value="${javahelp-docs-location}"/>
      <replacefilter token="@JAVA/API@" value="${java-api-docs-location}"/>
      <replacefilter token="@FOOTER@" value="${open-apis-footer}"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="">
      <include name="*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../">
      <include name="*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../">
      <include name="*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../">
      <include name="*/*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../../">
      <include name="*/*/*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../../../">
      <include name="*/*/*/*/*/*.html"/>
    </replace>
    <replace dir="javadoc/OpenAPIs" token="@TOP@" value="../../../../../../">
      <include name="*/*/*/*/*/*/*.html"/>
    </replace>
    <!-- [PENDING] fuller check mode too, checking more HTML files? -->
    <property name="javadoc.check.external.links" value="false"/>
    <checklinks basedir="javadoc/OpenAPIs" checkexternal="${javadoc.check.external.links}">
      <include name="overview-summary.html"/>
      <include name="apichanges.html"/>
      <include name="**/package-summary.html"/>
      <include name="**/doc-files/**/*.html"/>
      <!-- Make hyperlinks point to the source files, not the copied files: -->
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/overview-summary.html" to="${basedir}/api/doc/overview.html"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/*/package-summary.html" to="${basedir}/api/doc/*/package.html"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/apichanges.html" to="${basedir}/api/doc/changes/apichanges.xml"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/arch/*.html" to="${basedir}/arch/arch-*.xml"/>
      <mapper type="glob" from="${basedir}/javadoc/OpenAPIs/*.html" to="${basedir}/api/doc/*.html"/>
    </checklinks>
    <zip zipfile="javadoc/OpenAPIs.zip" basedir="javadoc/OpenAPIs"/>
  </target>
  
  <target name="export-interfaces" depends="javadoc-plain" if="export.interfaces" >
  	<!-- is there just because the openide APIs are not separated and do not use javadoctools -->
    <taskdef name="arch" classname="org.netbeans.nbbuild.Arch">
      <classpath>
        <pathelement location="../nbbuild/nbantext.jar"/>
      </classpath>
    </taskdef>
    
    <!-- Warn about incorrect question version, but do not make build fail: -->
    <property name="arch.warn" value="true"/>
    <property name="arch.target" value="OpenAPIs/arch" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-modules.xml" output="${export.interfaces}/openide-modules.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-dialogs.xml" output="${export.interfaces}/openide-dialogs.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-lookup.xml" output="${export.interfaces}/openide-lookup.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-filesystems.xml" output="${export.interfaces}/openide-filesystems.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-nodes.xml" output="${export.interfaces}/openide-nodes.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-explorer.xml" output="${export.interfaces}/openide-explorer.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-actions.xml" output="${export.interfaces}/openide-actions.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-windowsystem.xml" output="${export.interfaces}/openide-windowsystem.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-utilities.xml" output="${export.interfaces}/openide-utilities.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-editor.xml" output="${export.interfaces}/openide-editor.html" />
    <arch xsl="../nbbuild/javadoctools/exportInterfaces.xsl" answers="arch/arch-openide-propertysheet.xml" output="${export.interfaces}/openide-propertysheet.html" />
    
  </target>

  <target name="export-apichanges" depends="javadoc-plain" if="export.apichanges" >
    <property file="../nbbuild/build.properties" />
    <style style="../nbbuild/javadoctools/export-apichanges.xsl" in="api/doc/changes/apichanges.xml" out="${export.apichanges}/OpenAPIs.xml" >
        <param name="changes-since-url" expression="OpenAPIs/apichanges.html"/>
        <param name="changes-since-year" expression="${previous.release.year}"/>
        <param name="changes-since-day" expression="${previous.release.day}"/>
        <param name="changes-since-month" expression="${previous.release.month}"/>    
    </style>
  </target>
  
  
  <target name="apis-tidy" description="Run the Tidy HTML checker on API prose documents.">
    <apply parallel="true" failonerror="true" executable="tidy">
      <fileset dir="api/doc">
        <include name="**/*.html"/>
        <!-- Machine-generated: -->
        <exclude name="org/openide/filesystems/doc-files/resolverDocumentation.html"/>
        <!-- Missing title tags, it is OK: -->
        <exclude name="**/package.html"/>
        <!-- Maintained separately: -->
        <exclude name="tutorial/"/>
      </fileset>
      <arg value="-e"/>
      <arg value="--gnu-emacs"/>
      <arg value="true"/>
    </apply>
  </target>

  <target name="nb-api-tutorial" description="Make Open APIs Getting Started Tutorial.">
    <mkdir dir="build"/>
    <zip zipfile="build/nb-api-tutorial.zip">
      <fileset dir="api/doc/tutorial">
        <exclude name="README.txt"/>
      </fileset>
    </zip>
  </target>

  <target name="clean" description="Remove all build products." depends="init,libs-clean">
    <delete dir="build"/>
    <delete>
      <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
        <patternset refID="openide.files"/>
      </fileset>
    </delete>
    <delete dir="javadoc"/>
    <!-- ant dir="api/examples" target="clean"/ -->
  </target>

    <target  name="standalone-fs" depends="standalone-fs-prepare" description="Creates ZIP file suitable for download. ZIP file contains all JARs necessary for using standalone filesystems (excluding a JAXP implementation).">
        <zip compress="true" zipfile="build/standalone/nbfilesystems.zip">
            <fileset dir="build/standalone">
                <include name="openide-fs.jar"/>
                <include name="openide-util.jar"/>
                <include name="openide-lookup.jar"/>
                <include name="README-FS.txt"/>
            </fileset>
            <fileset dir="util/netbeans/lib">
                <include name="openide-util.jar"/>
            </fileset>
            <fileset dir="fs/netbeans/lib">
                <include name="openide-fs.jar"/>
            </fileset>
        </zip>
    </target>

    <target name="standalone-fs-prepare" depends="lib-util,lib-fs">
        <mkdir dir="build/standalone"/>
        <echo file="build/standalone/README-FS.txt"><![CDATA[Filesystems Library
===================

Please visit the documentation at http://openide.netbeans.org/fs/

If you want to use the library in your application just put openide-fs.jar
and openide-util.jar into your classpath:

	java -cp openide-fs.jar:openide-util.jar yourpackage.YourClass

You shall use the library on JRE 1.4 or newer.

Comments or questions? Post to the dev@openide.netbeans.org mailing list.
]]></echo>

    </target>

    <!-- support for testing under main trunk version of the ide -->
    <target name="compile-test-single" >
        <property name="build.test.unit.results.dir" location="build/test/results" />
        <ant dir="test" target="buildtests" />
    </target>
    
    <target name="test-single" depends="init,compile-test-single" >
        <fail unless="test.includes">Must set test.includes</fail>
        <mkdir dir="${build.test.unit.results.dir}"/>
        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed">
            <jvmarg value="-ea" />
            <batchtest todir="test/results">
                <fileset dir="test/unit/src" includes="${test.includes}"/>
            </batchtest>
            <classpath >
                <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide.jar" />
                <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide-loaders.jar" />
                <pathelement location="build/test/unit/classes" />
                <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
                <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
                <pathelement location="${nb_all}/xtest/lib/insanelib.jar"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
        </junit>
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    
    <target name="debug-test-single-nb" depends="init,compile-test-single" if="netbeans.home" >
        <fail unless="test.class">Must set test.class</fail>
        <nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="${test.class}">
            <classpath> 
                <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide.jar"/>
                <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide-loaders.jar" />
                <pathelement location="build/test/unit/classes" />
                <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
                <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
                <pathelement location="${nb_all}/xtest/lib/insanelib.jar"/>
                <fileset dir="${netbeans.dest.dir}" >
                    <patternset refid="openide.files" />
                </fileset>
            </classpath>
        </nbjpdastart>
        
        <java fork="true" classname="junit.textui.TestRunner">
            <jvmarg value="-ea" />
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <classpath >
                <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide.jar" />
                <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${nb.lib.dir}/openide-loaders.jar" />
                <pathelement location="build/test/unit/classes" />
                <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
                <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
                <pathelement location="${nb_all}/xtest/lib/insanelib.jar"/>
            </classpath>
            <arg line="${test.class}"/>
        </java>
        
    </target>

    
    <!-- be able to execute all unit tests -->
    <target name="test" >
        <ant dir="test" />
    </target>

</project>
