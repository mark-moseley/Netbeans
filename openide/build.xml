<?xml version='1.0' encoding='ISO-8859-1' ?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
Microsystems, Inc. All Rights Reserved.
-->

<!-- Special targets: apiexamples, open-apis -->
<!-- Special properties: -Djdk-docs-location=...../api -->

<!-- ToDo: modern compile can fail even within openide/src for the same -->
<!-- reasons other modules need openide-13javac-workaround.jar! -->
<!-- Not clear how to solve this. Try rerunning build if it happens. -->

<project name="openide" default="netbeans" basedir=".">
  <property name="binroot" value=".."/>

  <taskdef name="tojar" classname="org.netbeans.nbbuild.ToJar" classpath="../nbbuild/nbantext.jar"/>
  <taskdef name="preprocess" classname="org.netbeans.nbbuild.Preprocess" classpath="../nbbuild/nbantext.jar"/>
  <taskdef name="postprocess" classname="org.netbeans.nbbuild.Postprocess" classpath="../nbbuild/nbantext.jar"/>
  <taskdef name="locjar" classname="org.netbeans.nbbuild.LocalizedJar" classpath="../nbbuild/nbantext.jar"/>

  <target name="init">
    <available property="jdk13proxies" classname="java.lang.reflect.Proxy"/>
    <available property="javasound" classname="javax.sound.sampled.AudioSystem"/>
  </target>

  <target name="warn-re-jdk13proxies" depends="init" unless="jdk13proxies">
    <echo message="Warning: due to lack of JDK 1.3 proxies in your compile environment,"/>
    <echo message="this support will not be built and the IDE will not work in JDK 1.3."/>
    <echo message="(Or at least not as efficiently as it would if built with 1.3.)"/>
  </target>
  <target name="compile-regular" depends="init,warn-re-jdk13proxies">
    <javac srcdir="src" destdir="src">
      <exclude name="**/org/openide/util/WeakListener13.java" unless="jdk13proxies"/>
      <!-- Needs core, it is deprecated anyway: -->
      <exclude name="org/openide/loaders/ExtensionListEditor.java"/>
      <classpath>
        <pathelement location="${binroot}/core/release/lib/ext/regexp.jar"/>
        <pathelement location="${binroot}/core/release/lib/ext/jaxp.jar"/>
        <pathelement location="${binroot}/core/release/lib/ext/parser.jar"/>
      </classpath>
    </javac>
    <!-- Hack. Deprecated class. -->
    <javac srcdir="../core/src" destdir="../core/src">
      <include name="org/netbeans/beaninfo/editors/ExtensionListEditor.java"/>
      <classpath>
        <pathelement location="src"/>
      </classpath>
    </javac>
    <javac srcdir="src" destdir="src">
      <include name="org/openide/loaders/ExtensionListEditor.java"/>
      <classpath>
        <pathelement location="../core/src"/>
      </classpath>
    </javac>
  </target>
  
  <target name="compile" depends="compile-regular,compile-preprocessed">
  </target>
  
  <target name="compile-preprocessed" depends="preprocess" >
    <javac srcdir="compatkit-work" destdir="compatkit-work">
      <classpath>
        <pathelement location="src"/>
        <pathelement location="${binroot}/core/release/lib/ext/regexp.jar"/>
        <pathelement location="${binroot}/core/release/lib/ext/jaxp.jar"/>
        <pathelement location="${binroot}/core/release/lib/ext/parser.jar"/>
      </classpath>
    </javac>
    <postprocess file="compatkit-work/org/openide/util/actions/SystemAction.class"
                 old="g3t1c0n" new="getIcon"
                 min="0" max="1"/>
    <postprocess file="compatkit-work/org/openide/filesystems/AbstractFileSystem.class"
                 old="r3fr3shR00t" new="refreshRoot"
                 min="0" max="1"/>
  </target>

  <target name="preprocess">
    <mkdir dir="compatkit-work"/>
    <preprocess srcdir="src" destdir="compatkit-work">
      <switch name="compat" on="true"/>
      <!-- For efficiency and clarity and safety, we explicitly -->
      <!-- list all files known to need preprocessing. -->
      <include name="org/openide/loaders/DataLoaderPool.java"/>
      <!-- Not possible yet: -->
      <!-- <include name="org/openide/loaders/MultiDataObject.java"/> -->
      <include name="org/openide/compiler/ExternalCompiler.java"/>
      <include name="org/openide/util/actions/SystemAction.java"/>
      <include name="org/openide/filesystems/LocalFileSystem.java"/>
      <include name="org/openide/filesystems/JarFileSystem.java"/>
      <include name="org/openide/filesystems/AbstractFileSystem.java"/>
      <include name="org/openide/explorer/propertysheet/PropertyDialogManager.java"/>
    </preprocess>
  </target>
  
  <target name="jars" depends="compile">
    <mkdir dir="netbeans/lib"/>
    <filter token="BUILD_NUMBER_SUBST" value="${buildnumber}"/>
    <copy file="manifest.mf" tofile="manifest-subst.mf" filtering="on"/>
    <locjar jarfile="netbeans/lib/openide.jar"
            manifest="manifest-subst.mf"
            basedir="src"
	    excludesfile="../nbbuild/standard-jar-excludes.txt"
	    compress="false">
      <locale name="ja"/>
    </locjar>
    <!-- JDK 1.3 Javac at least on Linux has a serious bug as regards -->
    <!-- situations where one package contains a public class and a public -->
    <!-- inner class of the same name: though the inner class should be qualified -->
    <!-- by its outer class, something gets confused and the compiler thinks -->
    <!-- it cannot find the simple class whenever it is used. -->
    <!-- Forcing use of 1.2 compiler is possible with -Dbuild.compiler=classic, -->
    <!-- but this slows down builds, messes up Jikes users, and is not apparently -->
    <!-- needed for all 1.3 Javac versions. Easier to ensure that the outer classes -->
    <!-- appear in a separate JAR file at compile time, this assuages the compiler. -->
    <jar jarfile="openide-13javac-workaround.jar"
         basedir="src"
         compress="false">
      <!-- Compare inner classes of Actions: -->
      <include name="org/openide/awt/ToolbarButton*.class"/>
      <exclude name="org/openide/awt/ToolbarButtonUI*.class"/>
      <include name="org/openide/awt/ToolbarToggleButton*.class"/>
      <!-- Compare inner class of RequestProcessor: -->
      <include name="org/openide/util/Task*.class"/>
      <exclude name="org/openide/util/TaskListener*.class"/>
    </jar>
    <!-- Create binary compatibility kit. NOBODY should compile against it unless they -->
    <!-- are trying to make their code obsolete! -->
    <mkdir dir="netbeans/lib/patches"/>
    <!-- [PENDING] some sort of manifest? -->
    <jar jarfile="netbeans/lib/patches/openide-compat.jar"
         basedir="compatkit-work"
	 excludesfile="../nbbuild/standard-jar-excludes.txt"
	 compress="false"/>
  </target>

  <target name="netbeans" depends="jars"/>

  <!-- Open API documentation. -->
  <!-- XXX should be a task called here to check for dead links... -->
  <target name="open-apis-check-timestamps" unless="open-apis-force-rebuild">
    <uptodate property="open-apis-up-to-date" targetfile="OpenAPIs.zip">
      <srcfiles dir="src">
        <include name="org/openide/**/*.java"/>
      </srcfiles>
      <srcfiles dir="../openidex/src">
        <include name="org/openidex/**/*.java"/>
      </srcfiles>
      <srcfiles dir="api/doc">
        <include name="org/openide/"/>
        <include name="overview.html"/>
        <include name="open-apis.css"/>
      </srcfiles>
    </uptodate>
  </target>
  <target name="open-apis-maybe-skip" if="open-apis-up-to-date">
    <echo>Not building Open APIs because they are up-to-date...
To force them to be rebuilt, run again with -Dopen-apis-force-rebuild=true
</echo>
  </target>
  <target name="open-apis" depends="open-apis-check-timestamps,open-apis-maybe-skip" unless="open-apis-up-to-date">
    <property name="jdk-docs-location" value="http://java.sun.com/products/jdk/1.2/docs/api"/>
    <tstamp/>
    <property name="open-apis-footer" value="&lt;font size=-2 color=gray&gt;Built on ${TODAY}.&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;Portions Copyright 1997-2000 Sun Microsystems, Inc. All rights reserved.&lt;/font&gt;"/>
    <echo message="Build Open API documentation..."/>
    <mkdir dir="OpenAPIs"/>
    <javadoc destdir="OpenAPIs"
             packagenames="org.openide.*,org.openidex.*"
             doctitle="NetBeans Open APIs"
             windowtitle="NetBeans APIs"
             overview="api/doc/overview.html"
             bottom="${open-apis-footer}"
             use="true"
             splitindex="true"
             author="false"
             version="false"
             maxmemory="64m"
    >
      <sourcepath>
        <pathelement location="api/doc"/>
        <pathelement location="src"/>
        <pathelement location="../openidex/src"/>
      </sourcepath>
      <classpath>
        <pathelement location="../core/release/lib/ext/parser.jar"/>
        <pathelement location="../core/release/lib/ext/regexp.jar"/>
      </classpath>
      <!-- XXX update api/doc/package-list to match 1.2, not 1.3, list -->
      <link href="${jdk-docs-location}"
            offline="true"
            packagelistLoc="api/doc"
      />
      <group title="&lt;a href=&quot;@TOP@org/openide/modules/doc-files/api.html&quot;&gt;Modules API&lt;/a&gt;"
             packages="org.openide.modules"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/TopManager.html&quot;&gt;TopManager&lt;/a&gt; and &lt;a href=&quot;@TOP@org/openide/Places.html&quot;&gt;Places&lt;/a&gt; APIs; &lt;a href=&quot;@TOP@org/openide/doc-files/services-api.html&quot;&gt;Services API&lt;/a&gt;"
             packages="org.openide"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/filesystems/doc-files/api.html&quot;&gt;FileSystems API&lt;/a&gt;"
             packages="org.openide.filesystems"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/loaders/doc-files/api.html&quot;&gt;DataSystems API&lt;/a&gt;"
             packages="org.openide.cookies:org.openide.loaders:org.openide.util.datatransfer"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/explorer/doc-files/api.html&quot;&gt;Explorer API&lt;/a&gt;"
             packages="org.openide.explorer*"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/nodes/doc-files/api.html&quot;&gt;Nodes API&lt;/a&gt;"
             packages="org.openide.nodes"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/actions/doc-files/api.html&quot;&gt;Actions API&lt;/a&gt;"
             packages="org.openide.actions:org.openide.util.actions"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/windows/doc-files/api.html&quot;&gt;Window System API&lt;/a&gt;"
             packages="org.openide.windows"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/options/doc-files/api.html&quot;&gt;Options API&lt;/a&gt;"
             packages="org.openide.options"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/compiler/doc-files/api.html&quot;&gt;Compiler API&lt;/a&gt;"
             packages="org.openide.compiler"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/execution/doc-files/api.html&quot;&gt;Execution API&lt;/a&gt;"
             packages="org.openide.execution"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/debugger/doc-files/api.html&quot;&gt;Debugger API&lt;/a&gt;"
             packages="org.openide.debugger"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/text/doc-files/api.html&quot;&gt;Editor API&lt;/a&gt;"
             packages="org.openide.text"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/src/doc-files/api.html&quot;&gt;Java Hierarchy API&lt;/a&gt;"
             packages="org.openide.src:org.openide.src.nodes"/>
      <group title="&lt;a href=&quot;@TOP@org/openide/util/doc-files/api.html&quot;&gt;Utility Classes&lt;/a&gt;"
             packages="org.openide.awt:org.openide.util:org.openide.util.enum:org.openide.util.io"/>
      <group title="Proposed APIs"
             packages="org.openidex.*"/>
    </javadoc>
    <copy file="api/doc/open-apis.css" tofile="OpenAPIs/open-apis.css"/>
    <replace dir="OpenAPIs" token="@JDK@" value="${jdk-docs-location}">
      <include name="**/doc-files/*.html"/>
      <include name="**/package-summary.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@FOOTER@" value="${open-apis-footer}">
      <include name="**/doc-files/*.html"/>
    </replace>
    <replace file="OpenAPIs/overview-summary.html" token="@DATE@" value="${TODAY}"/>
    <replace dir="OpenAPIs" token="@TOP@" value="">
      <include name="*.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@TOP@" value="../">
      <include name="*/*.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@TOP@" value="../../">
      <include name="*/*/*.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@TOP@" value="../../../">
      <include name="*/*/*/*.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@TOP@" value="../../../../">
      <include name="*/*/*/*/*.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@TOP@" value="../../../../../">
      <include name="*/*/*/*/*/*.html"/>
    </replace>
    <replace dir="OpenAPIs" token="@TOP@" value="../../../../../../">
      <include name="*/*/*/*/*/*/*.html"/>
    </replace>
    <zip zipfile="OpenAPIs.zip" basedir="OpenAPIs"/>
  </target>

  <!-- API examples. -->

  <target name="examplemodules" depends="example-scripts,example-minicomposer-nodice,example-minicomposer,example-globalactions"/>

  <target name="example-scripts" depends="jars">
    <javac srcdir="api/examples" destdir="api/examples">
      <include name="**/org/netbeans/examples/scripts/"/>
      <classpath>
        <pathelement location="netbeans/lib/openide.jar"/>
      </classpath>
    </javac>
  </target>

  <target name="example-minicomposer-nodice" depends="init" unless="javasound">
    <echo message="Sorry, minicomposer example requires JavaSound to be built."/>
    <echo message="Included in JDK 1.3, else you may need to download it separately."/>
  </target>
  <target name="example-minicomposer" depends="init,jars" if="javasound">
    <javac srcdir="api/examples" destdir="api/examples">
      <include name="**/org/netbeans/examples/modules/minicomposer/"/>
      <classpath>
        <pathelement location="netbeans/lib/openide.jar"/>
      </classpath>
    </javac>
    <tojar srcdir="api/examples" unpackeddir="api/examples/org/netbeans/examples/modules/minicomposer_tojar"/>
    <mkdir dir="examplemodules"/>
    <!-- Note: compression on, because these things are frequently emailed, -->
    <!-- and performance is irrelevant. -->
    <!-- Note also that sources are intentionally included. -->
    <!-- filesystem.attributes OK too, since people may want to unpack & fool with source. -->
    <jar jarfile="examplemodules/minicomposer.jar"
         manifest="api/examples/org/netbeans/examples/modules/minicomposer.mf"
	 basedir="api/examples"
	 includes="org/netbeans/examples/modules/minicomposer/"
	 excludes="**/*.jar.MAKEME"
	 compress="true"/>
  </target>

  <target name="openidex-all" depends="netbeans">
    <ant dir="../openidex"/>
  </target>
  <target name="example-globalactions" depends="jars,openidex-all">
    <javac srcdir="api/examples" destdir="api/examples">
      <include name="org/netbeans/examples/modules/globalactions/"/>
      <classpath>
        <pathelement location="netbeans/lib/openide.jar"/>
        <pathelement location="../openidex/netbeans/lib/ext/openidex.jar"/>
      </classpath>
    </javac>
    <mkdir dir="examplemodules"/>
    <jar jarfile="examplemodules/globalactions.jar"
         manifest="api/examples/org/netbeans/examples/modules/globalactions.mf"
	 basedir="api/examples"
	 includes="org/netbeans/examples/modules/globalactions/"
	 compress="true"/>
  </target>

  <target name="apiexamples" depends="netbeans,examplemodules">
    <ant dir="../sysprops"/>
    <ant dir="../serialversion"/>
    <mkdir dir="examplemodules/apiexamples"/>
    <copy todir="examplemodules/apiexamples">
      <fileset dir="api/examples">
        <include name="org/netbeans/examples/modules/minicomposer/"/>
        <exclude name="org/netbeans/examples/modules/minicomposer/templates.jar.MAKEME"/>
        <include name="org/netbeans/examples/modules/globalactions/"/>
        <include name="org/netbeans/examples/scripts/"/>
      </fileset>
    </copy>
    <copy todir="examplemodules/apiexamples">
      <fileset dir="../sysprops/src"/>
    </copy>
    <copy todir="examplemodules/apiexamples">
      <fileset dir="../serialversion/src"/>
    </copy>
    <mkdir dir="examplemodules/apiexamples/manifests"/>
    <filter token="BUILD_NUMBER_SUBST" value="(demo module)"/>
    <copy file="api/examples/org/netbeans/examples/modules/minicomposer.mf"
          tofile="examplemodules/apiexamples/manifests/minicomposer.mf"/>
    <copy file="api/examples/org/netbeans/examples/modules/globalactions.mf"
          tofile="examplemodules/apiexamples/manifests/globalactions.mf"/>
    <copy file="../sysprops/manifest.mf"
          tofile="examplemodules/apiexamples/manifests/sysprops.mf"
	  filtering="true"/>
    <copy file="../serialversion/manifest.mf"
          tofile="examplemodules/apiexamples/manifests/serialversion.mf"
	  filtering="true"/>
    <zip zipfile="examplemodules/apiexamples.zip"
         basedir="examplemodules/apiexamples"
	 compress="true"/>
  </target>

  <target name="clean">
    <delete>
      <fileset dir="src">
        <include name="**/*.class"/>
      </fileset>
    </delete>
    <delete>
      <fileset dir="api/examples">
        <include name="**/*.class"/>
      </fileset>
    </delete>
    <delete file="manifest-subst.mf"/>
    <delete dir="netbeans"/>
    <delete file="openide-13javac-workaround.jar"/>
    <delete dir="OpenAPIs"/>
    <delete file="OpenAPIs.zip"/>
    <delete dir="examplemodules"/>
    <delete file="api/examples/org/netbeans/examples/modules/minicomposer/templates.jar"/>
    <delete dir="compatkit-work"/>
  </target>

</project>
