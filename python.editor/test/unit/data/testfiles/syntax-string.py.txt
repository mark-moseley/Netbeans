.t.e.s.t. Escapes
Here's an \nescape, here's another one: \\, and here's several: \n\\\\\\
Here's an unbalanced one \
.e.o.f.

.t.e.s.t. URLs
See http://www.zope.org/Members/fdrake/DateTimeWiki/FrontPage
See https://foobar/baz

For more about DST than you ever wanted to know, see
ftp://elsie.nci.nih.gov/pub/
.e.o.f.

.t.e.s.t. String 1

This is the "example" module.

The example module supplies one function, factorial().  For example,

>>> factorial(5)
120
.e.o.f.

.t.e.s.t. String 2
Return the factorial of n, an exact integer >= 0.

    If the result is small enough to fit in an int, return an int.
    Else return a long.

    >>> [factorial(n) for n in range(6)]
    [1, 1, 2, 6, 24, 120]
    >>> [factorial(long(n)) for n in range(6)]
    [1, 1, 2, 6, 24, 120]
    >>> factorial(30)
    265252859812191058636308480000000L
    >>> factorial(30L)
    265252859812191058636308480000000L
    >>> factorial(-1)
    Traceback (most recent call last):
        ...
    ValueError: n must be >= 0
    x = \n foo

    Factorials of floats are OK, but the float must be an exact integer:
    >>> factorial(30.1)
    Traceback (most recent call last):
        ...
    ValueError: n must be exact integer
    >>> factorial(30.0)
    265252859812191058636308480000000L

    It must also not be ridiculously large:
    >>> factorial(1e100)
    Traceback (most recent call last):
        ...
    OverflowError: n too large
    
.e.o.f.
.t.e.s.t. Errors
Here's another one:
>> Wrong
>>>
.e.o.f.
