# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
# 
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
# 
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
# 
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
# 
# Contributor(s):
# 
# Portions Copyrighted 2008 Sun Microsystems, Inc.

#Generator classes
INCREMENT_GENERATOR_DESC=generates identifiers of type <code>long</code>, <code>short</code> \
or <code>int</code> that are unique only when no other process is inserting data into the \
same table. Do not use in a cluster.
IDENTITY_GENERATOR_DESC=supports identify columns in DB2, MySQL, MS SQL Server, Sybase and \
HypersonicSQL. The returned identifier is of type <code>long</code>, <code>short</code> or <code>int</code>.
SEQUENCE_GENERATOR_DESC=uses a sequence in DB2, PostgreSQL, Oracle, SAP DB, McKoi or a generator in Interbase. \
The returned identifier is of type <code>long</code>, <code>short</code> or <code>int</code>.
HILO_GENERATOR_DESC=uses a hi/lo algorithm to efficiently generate identifiers of type \
<code>long</code>, <code>short</code> or <code>int</code>, given a table and column (by default \
<code>hibernate_unique_key</code> and <code>next_hi</code> respectively) as a source of hi values. \
The hi/lo algorithm generates identifiers that are unique only for a particular database.
SEQHILO_GENERATOR_DESC=uses a hi/lo algorithm to efficiently generate identifiers of type \
<code>long</code>, <code>short</code> or <code>int</code>, given a named database sequence.
UUID_GENERATOR_DESC=uses a 128-bit UUID algorithm to generate identifiers of type string, unique \
within a network (the IP address is used). The UUID is encoded as a string of hexadecimal digits of length 32.
GUID_GENERATOR_DESC=uses a database-generated GUID string on MS SQL Server and MySQL.
NATIVE_GENERATOR_DESC=picks identity, sequence or hilo depending upon the capabilities of the underlying database.
ASSIGNED_GENERATOR_DESC=lets the application to assign an identifier to the object before save() is called. \
This is the default strategy if no &lt;generator>&gt; element is specified.
SELECT_GENERATOR_DESC=retrieves a primary key assigned by a database trigger by selecting the row \
by some unique key and retrieving the primary key value.
FOREIGN_GENERATOR_DESC=uses the identifier of another associated object. Usually used in conjunction \
with a <one-to-one> primary key association.
SEQUENCE_IDENTITY_GENERATOR_DESC=a specialized sequence generation strategy which utilizes a database \
sequence for the actual value generation, but combines this with JDBC3 getGeneratedKeys to actually \
return the generated identifier value as part of the insert statement execution. \
This strategy is only known to be supported on Oracle 10g drivers targetted for JDK 1.4. \
Note comments on these insert statements are disabled due to a bug in the Oracle drivers.

#Hibernate types
BIG_DECIMAL_DESC=Maps <code>java.math.BigDecimal</code> to <code>NUMERIC</code> (or Oracle <code>NUMBER</code>).
BIG_INTEGER_DESC=Maps <code>java.math.Biginteger</code> to <code>NUMERIC</code> (or Oracle <code>NUMBER</code>).
BINARY_DESC=Maps byte arrays to an appropriate SQL binary type
BLOB_DESC=Type mapping for the JDBC class <code>java.sql.Blob</code>.
BOOLEAN_DESC=Maps <code>boolean</code> or <code>java.lang.Boolean</code> to an appropriate (vendor-specific) SQL column type.
BYTE_DESC=Maps <code>byte</code> or <code>java.lang.Byte</code> to an appropriate (vendor-specific) SQL column type.
CALENDAR_DESC=Maps <code>java.util.Calendar</code> to SQL type <code>TIMESTAMP</code> (or equivalent).
CALENDAR_DATE_DESC=Maps <code>java.util.Calendar</code> to SQL type <code>DATE</code> (or equivalent).
CHARACTER_DESC=Maps <code>char</code> or <code>java.lang.Character</code> to an appropriate (vendor-specific) SQL column type.
CLASS_DESC=Maps <code>java.lang.Class</code> to <code>VARCHAR</code> (or Oracle <code>VARCHAR2</code>). A <code>Class</code> \
is mapped to its fully qualified name.
CLOB_DESC=Type mapping for the JDBC class <code>java.sql.Clob</code>.
CURRENCY_DESC=Type mapping from <code>java.util.Currency</code> to <code>VARCHAR</code> (or Oracle <code>VARCHAR2</code>). Instances of \
<code>Currency</code> are mapped to their ISO codes.
DATE_DESC=Type mapping from <code>java.util.Date</code> and its subclasses to SQL type <code>DATE</code> (or equivalent).
DOUBLE_DESC=Type mapping from <code>double</code> or <code>java.lang.Double</code> to an appropriate (vendor-specific) SQL column type. 
FLOAT_DESC=Type mapping from <code>float</code> or <code>java.lang.Float</code> to an appropriate (vendor-specific) SQL column type.
IMM_BINARY_DESC=Type mapping for <code>byte[]</code>, where Hibernate treats the object as immutable.
IMM_CALENDAR_DESC=Type mapping from <code>java.util.Calendar</code> to SQL type <code>TIMESTAMP</code> (or equivalent), \
where Hibernate treats the object as immutable.
IMM_CALENDAR_DATE_DESC=Type mapping from <code>java.util.Calendar</code> to SQL type <code>DATE</code> (or equivalent), \
where Hibernate treats the object as immutable.
IMM_DATE_DESC=Type mapping from <code>java.util.Date</code> and its subclasses to SQL type <code>DATE</code> (or equivalent), \
where Hibernate treats the object as immutable.
IMM_SERIALIZABLE_DESC=Maps serializable Java types to an appropriate SQL binary type, where Hibernate treats the object as immutable.
IMM_TIME_DESC=Type mapping from <code>java.util.Date</code> and its subclasses to SQL type <code>TIME</code> (or equivalent), \
where Hibernate treats the object as immutable.
IMM_TIMESTAMP_DESC=Type mapping from <code>java.util.Date</code> and its subclasses to SQL type <code>TIMESTAMP</code> (or equivalent),
where Hibernate treats the object as immutable.
INTEGER_DESC=Type mapping from  <code>int</code> or <code>java.lang.Integer</code> to an appropriate (vendor-specific) SQL column type.
LOCALE_DESC=Type mapping from <code>java.util.Locale</code> to <code>VARCHAR</code> (or Oracle <code>VARCHAR2</code>). \
Instances of Locale are mapped to their ISO codes.
LONG_DESC=Type mapping from <code>long</code> or <code>java.lang.Long</code> to an appropriate (vendor-specific) SQL column type.
SERIALIZABLE_DESC=Maps serializable Java types to an appropriate SQL binary type.
SHORT_DESC=Type mapping from <code>s<hort/code> or <code>java.lang.Short</code> to an appropriate (vendor-specific) SQL column type.
STRING_DESC=Type mapping from <code>java.lang.String</code> to <code>VARCHAR</code> (or Oracle <code>VARCHAR2</code>).
TEXT_DESC=Maps long Java strings to a SQL <code>CLOB</code> or <code>TEXT</code> type.
TIME_DESC=Type mapping from <code>java.util.Date</code> and its subclasses to SQL type <code>TIME</code> (or equivalent).
TIMESTAMP_DESC=Type mapping from <code>java.util.Date</code> and its subclasses to SQL type <code>TIMESTAMP</code> (or equivalent).
TIMEZONE_DESC=Type mapping from <code>java.util.TimeZone</code> to <code>VARCHAR</code> (or Oracle <code>VARCHAR2</code>). \
Instances of <code>TimeZone</code> are mapped to their ID.
TRUE_FALSE_DESC=an alternative encodings for a Java <code>boolean</code> or <code>java.lang.Boolean</code>.
YES_NO_DESC=an alternative encodings for a Java <code>boolean</code> or <code>java.lang.Boolean</code>.

