/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.j2ee.ejbcore.ejb.wizard.mdb;

/**
 *
 * @author  ChrisWebster
 */
public class MessageEJBWizardPanel extends javax.swing.JPanel {
    
    /** Creates new form MessageEJBWizardPanel */
    public MessageEJBWizardPanel() {
        initComponents();
    }
    
    public boolean isQueue() {
        return queueButton.isSelected();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        destinationTypeLabel = new javax.swing.JLabel();
        queueButton = new javax.swing.JRadioButton();
        topicButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        destinationTypeLabel.setText(org.openide.util.NbBundle.getMessage(MessageEJBWizardPanel.class, "LBL_DestinationType"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(destinationTypeLabel, gridBagConstraints);

        buttonGroup1.add(queueButton);
        queueButton.setMnemonic(org.openide.util.NbBundle.getMessage(MessageEJBWizardPanel.class, "LBL_QueueMneumoic").charAt(0));
        queueButton.setSelected(true);
        queueButton.setText(org.openide.util.NbBundle.getMessage(MessageEJBWizardPanel.class, "LBL_Queue"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(queueButton, gridBagConstraints);

        buttonGroup1.add(topicButton);
        topicButton.setMnemonic(org.openide.util.NbBundle.getMessage(MessageEJBWizardPanel.class, "LBL_TopicMneumoic").charAt(0));
        topicButton.setText(org.openide.util.NbBundle.getMessage(MessageEJBWizardPanel.class, "LBL_Topic"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        add(topicButton, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel destinationTypeLabel;
    private javax.swing.JRadioButton queueButton;
    private javax.swing.JRadioButton topicButton;
    // End of variables declaration//GEN-END:variables
    
}
