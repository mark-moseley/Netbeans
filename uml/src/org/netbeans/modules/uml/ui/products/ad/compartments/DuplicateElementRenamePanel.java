/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.uml.ui.products.ad.compartments;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;


/**
 *
 * @author  Craig Conover, craig.conover@sun.com
 */
public class DuplicateElementRenamePanel extends javax.swing.JPanel
    implements DocumentListener, ActionListener
{
    
    public DuplicateElementRenamePanel(String dupeName)
    {
        initComponents();
        newNameText.getDocument().addDocumentListener(this);
        newNameText.setText(dupeName);
        
        messageLabel.setText(NbBundle.getMessage(
            DuplicateElementRenamePanel.class, 
            "MSG_DuplicateElementRenameMessage", dupeName));
        
//        messageLabel.setText("An element named \"" + dupeName +
//            "\" already exists. To continue, please enter a new name.");
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        projectTypeButtonGroup = new javax.swing.ButtonGroup();
        messageLabel = new javax.swing.JLabel();
        newNameLabel = new javax.swing.JLabel();
        newNameText = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();

        messageLabel.setText("(Duplicate Renam Message)");

        newNameLabel.setLabelFor(newNameText);
        org.openide.awt.Mnemonics.setLocalizedText(newNameLabel, org.openide.util.NbBundle.getMessage(DuplicateElementRenamePanel.class, "LBL_TargetProject")); // NOI18N

        statusLabel.setForeground(new java.awt.Color(0, 0, 255));
        statusLabel.setText("<field validation status message>");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(messageLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .add(statusLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(newNameLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(newNameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(messageLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(newNameLabel)
                    .add(newNameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(statusLabel))
        );

        newNameLabel.getAccessibleContext().setAccessibleName("");
        newNameLabel.getAccessibleContext().setAccessibleDescription(null);
        statusLabel.getAccessibleContext().setAccessibleName("Dialog field validation message");
        statusLabel.getAccessibleContext().setAccessibleDescription("Reports the validation messages for all of the input fields of this dialog.");
    }// </editor-fold>//GEN-END:initComponents

    public void requestFocus()
    {
        newNameText.requestFocus();
        updateValidStatus();
    }
    
    private void initListeners()
    {
    }

    // DocumentListener interface implementation
    ////////////////////////////////////////////
    
    public void changedUpdate(DocumentEvent event)
    {
        updateTexts(event);
        
        if (newNameText.getDocument() == event.getDocument())
        {
            firePropertyChange(
                DuplicateElementRenameDescriptor.PROP_NEW_NAME,
                null, newNameText.getText());
       }
    }
    
    public void insertUpdate( DocumentEvent event )
    {
        updateTexts(event);
        
        if (newNameText.getDocument() == event.getDocument())
        {
            firePropertyChange(
                DuplicateElementRenameDescriptor.PROP_NEW_NAME, 
                null, newNameText.getText());
        }
    }
    
    public void removeUpdate(DocumentEvent event)
    {
        updateTexts(event);
        
        if (newNameText.getDocument() == event.getDocument())
        {
            firePropertyChange(
                DuplicateElementRenameDescriptor.PROP_NEW_NAME, 
                null, newNameText.getText());
        }
    }
    
    
    /** 
     * Handles changes in the Project name and project directory
     */
    private void updateTexts(DocumentEvent event)
    {
        Document doc = event.getDocument();
        
        if (doc == newNameText.getDocument())
        {
            String projectName = newNameText.getText();
            updateValidStatus();
        }
    }
    

    // OK or Cancel button clicked
    public void actionPerformed(ActionEvent event)
    {
//        if (event.getActionCommand().equals("OK")) // NOI18N
//        {
//            // TODO: do something ???
//        }
    }

    public String getNewName()
    {
        return newNameText.getText();
    }


    private boolean updateValidStatus()
    {
        enable = true;
        statusMsg = " "; // NOI18N
        
        if (newNameText.getText() == null)
        {
            enable = Boolean.FALSE;
            // statusMsg = "MSG_STATUS_ProjectExists"; // NOI18N
            statusMsg = "not a valid element name"; // NOI18N
            
            return notifyPropertyListeners();
        }
        
        return notifyPropertyListeners();
    }
    
    private boolean notifyPropertyListeners()
    {
        firePropertyChange(
            NotifyDescriptor.PROP_VALID, valid, enable);

        if (!statusMsg.equals(" "))
            statusMsg = NbBundle.getMessage(
                DuplicateElementRenamePanel.class, statusMsg);

        statusLabel.setText(statusMsg);
        valid = enable;
        return valid;

    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel newNameLabel;
    private javax.swing.JTextField newNameText;
    private javax.swing.ButtonGroup projectTypeButtonGroup;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

    private boolean valid = true;
    private String statusMsg = " "; // NOI18N
    private boolean enable = false;
    
    private String PROP_NEW_NAME = "PROP_PROJECT_NAME"; // NOI18N

}
