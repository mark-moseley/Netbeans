/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
 * Microsystems, Inc. All Rights Reserved.
 */
package org.netbeans.modules.xml.tax.beans.customizer;

import java.beans.PropertyChangeEvent;

import org.netbeans.tax.TreeException;
import org.netbeans.tax.TreeConditionalSection;

/**
 *
 * @author  Libor Kramolis
 * @version 0.1
 */
public class TreeConditionalSectionCustomizer extends AbstractTreeCustomizer {

    /** Serial Version UID */
    private static final long serialVersionUID =-396968653847909885L;    


    //
    // init
    //
    
    /** Creates new customizer TreeConditionalSectionCustomizer. */
    public TreeConditionalSectionCustomizer () {
	super();
	
        initComponents ();
    }

    
    //
    // itself
    //

    /** 
     */
    protected final TreeConditionalSection getConditionalSection () {
        return (TreeConditionalSection)getTreeObject();
    }

    /**
     * It will be called from AWT thread and it will never be caller during init stage.
     */
    protected final void safePropertyChange (PropertyChangeEvent pche) {
        super.safePropertyChange (pche);
        
	if (pche.getPropertyName().equals (TreeConditionalSection.PROP_INCLUDE)) {
	    updateIncludeIgnoreComponent();
	} else if (pche.getPropertyName().equals (TreeConditionalSection.PROP_IGNORED_CONTENT)) {
	    updateIgnoredContentComponent();
	}
    }    

    
    protected void updateIncludeIgnoreComponent () {
        includeRadioButton.setSelected (getConditionalSection().isInclude());
        ignoreRadioButton.setSelected (!!! getConditionalSection().isInclude());

        ignoredContentScrollPane.setVisible (!!! getConditionalSection().isInclude());
    }
    
    protected void updateConditionalSectionInclude () {
        try {
            getConditionalSection().setInclude (includeRadioButton.isSelected());
        } catch (TreeException exc) {
	    updateIncludeIgnoreComponent();
            Util.notifyTreeException (exc);
        }
    }
    
    protected void updateIgnoredContentComponent () {
        ignoredContentPane.setText (null2text (getConditionalSection().getIgnoredContent()));
    }
        
    protected void updateConditionalSectionIgnoredContent () {
        try {
            getConditionalSection().setIgnoredContent (text2null (ignoredContentPane.getText()));
        } catch (TreeException exc) {
	    updateIgnoredContentComponent();
            Util.notifyTreeException (exc);
        }
    }
    
    
    /**
     */
    protected void initComponentValues () {
        updateIncludeIgnoreComponent();
        updateIgnoredContentComponent();
    }    

    /**
     */
    protected void updateReadOnlyStatus (boolean editable) {
        includeRadioButton.setEnabled (editable); //???
        ignoreRadioButton.setEnabled (editable); //???
        ignoredContentPane.setEditable (editable);
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        includeButtonGroup = new javax.swing.ButtonGroup();
        includeRadioButton = new javax.swing.JRadioButton();
        ignoreRadioButton = new javax.swing.JRadioButton();
        ignoredContentScrollPane = new javax.swing.JScrollPane();
        ignoredContentPane = new javax.swing.JEditorPane();
        
        
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        includeRadioButton.setSelected(true);
        includeRadioButton.setText(Util.getString("PROP_condSection_include"));
        includeButtonGroup.add(includeRadioButton);
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.insets = new java.awt.Insets(12, 12, 0, 0);
        add(includeRadioButton, gridBagConstraints1);
        
        ignoreRadioButton.setText(Util.getString("PROP_condSection_ignore"));
        includeButtonGroup.add(ignoreRadioButton);
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints1.insets = new java.awt.Insets(12, 12, 0, 11);
        add(ignoreRadioButton, gridBagConstraints1);
        
        ignoredContentScrollPane.setPreferredSize(new java.awt.Dimension(320, 200));
        ignoredContentScrollPane.setViewportView(ignoredContentPane);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints1.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets(12, 12, 0, 11);
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add(ignoredContentScrollPane, gridBagConstraints1);
        
    }//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup includeButtonGroup;
    private javax.swing.JRadioButton includeRadioButton;
    private javax.swing.JRadioButton ignoreRadioButton;
    private javax.swing.JScrollPane ignoredContentScrollPane;
    private javax.swing.JEditorPane ignoredContentPane;
    // End of variables declaration//GEN-END:variables

}
