/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
 * Microsystems, Inc. All Rights Reserved.
 */
package org.netbeans.modules.xml.tax.beans.customizer;

import java.beans.PropertyChangeEvent;

import org.netbeans.tax.TreeException;
import org.netbeans.tax.TreeComment;
import org.netbeans.tax.TreeData;

/**
 *
 * @author  Libor Kramolis
 * @version 0.1
 */
public class TreeCommentCustomizer extends AbstractTreeCustomizer {

    /** Serial Version UID */
    private static final long serialVersionUID =-2298790138555257739L;    


    //
    // init
    //

    /** */
    public TreeCommentCustomizer () {
	super();

        initComponents();
    }


    //
    // itself
    //

    /** 
     */
    protected final TreeComment getComment () {
        return (TreeComment)getTreeObject();
    }

    /** 
     */
    protected final void safePropertyChange (PropertyChangeEvent pche) {
        super.safePropertyChange (pche);
        
	if (pche.getPropertyName().equals (TreeData.PROP_DATA)) {
	    updateDataComponent();
	}
    }

    /** 
     */
    protected final void updateCommentData () {
	try {
	    getComment().setData (dataPane.getText());
	} catch (TreeException exc) {
	    updateDataComponent();
	    Util.notifyTreeException (exc);
	}
    }
    
    /** 
     */
    protected final void updateDataComponent () {
        dataPane.setText (getComment().getData());
    }
    
    /** 
     */
    protected final void initComponentValues () {
        updateDataComponent();
    }


    /**
     */
    protected final void updateReadOnlyStatus (boolean editable) {
        dataPane.setEditable (editable);
    }    


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        dataPanel = new javax.swing.JPanel();
        dataScroll = new javax.swing.JScrollPane();
        dataPane = new javax.swing.JEditorPane();
        
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        setPreferredSize(new java.awt.Dimension(350, 230));
        setMinimumSize(new java.awt.Dimension(350, 230));
        dataPanel.setLayout(new java.awt.BorderLayout());
        
        dataPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataPaneFocusLost(evt);
            }
        });
        
        dataPane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataPaneKeyPressed(evt);
            }
        });
        
        dataScroll.setViewportView(dataPane);
        
        dataPanel.add(dataScroll, java.awt.BorderLayout.CENTER);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints1.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets(12, 12, 0, 11);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add(dataPanel, gridBagConstraints1);
        
    }//GEN-END:initComponents

    private void dataPaneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataPaneKeyPressed
        // Add your handling code here:
	if ( applyKeyPressed (evt) ) {
	    updateCommentData();
	}
    }//GEN-LAST:event_dataPaneKeyPressed

    private void dataPaneFocusLost(java.awt.event.FocusEvent event) {//GEN-FIRST:event_dataPaneFocusLost
        // Add your handling code here:
	updateCommentData();
    }//GEN-LAST:event_dataPaneFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dataPanel;
    private javax.swing.JScrollPane dataScroll;
    private javax.swing.JEditorPane dataPane;
    // End of variables declaration//GEN-END:variables

}
