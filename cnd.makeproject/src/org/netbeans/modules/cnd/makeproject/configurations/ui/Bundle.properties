# This module is part of NetBeans and is open-source.
# You can see http://www.netbeans.org/about/legal/index.html for details.
#
# You may use the binary however you like. The source file license is:
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.

# Sample ResourceBundle properties file

# Libraries Panel
ADD_PROJECT_BUTTON_TXT=Add Project...
ADD_PROJECT_BUTTON_TT=Add the output from another project to the link line
ADD_PROJECT_BUTTON_MN=A
ADD_STANDARD_LIBRARY_BUTTON_TXT=Add Standard Library...
ADD_STANDARD_LIBRARY_BUTTON_TT=Add a standard library to the link line
ADD_STANDARD_LIBRARY_BUTTON_MN=S
ADD_LIBRARY_BUTTON_TXT=Add Library...
ADD_LIBRARY_BUTTON_TT=Add a library (m, gnome, ...) to the link line
ADD_LIBRARY_BUTTON_MN=L
ADD_LIBRARY_FILE_BUTTON_TXT=Add Library File...
ADD_LIBRARY_FILE_BUTTON_TT=Add a library file (/usr/lib/libodbc.a) to the link line
ADD_LIBRARY_FILE_BUTTON_MN=B
ADD_OPTION_BUTTON_TXT=Add Option...
ADD_OPTION_BUTTON_TT=Add an option to the link line
ADD_OPTION_BUTTON_MN=O
DOWN_OPTION_BUTTON_MN=w

ADD_PROJECT_DIALOG_TITLE=Add Project
ADD_PROJECT_DIALOG_AD=Add Project Dialog
ADD_BUTTON_TXT=Add Project
SELECT_STATNDARD_LIBRARY_DIALOG_TITLE=Select Standard Library
SELECT_LIBRARY_CHOOSER_TITLE=Select Library
SELECT_LIBRARY_FILE_CHOOSER_TITLE=Select Library File
SELECT_CHOOSER_BUTTON=Select
SELECT_OPTION_DIALOG_TITLE=Select Option
LIBRARIES_AND_OPTIONS_TXT=Libraries and Options:
LIBRARIES_AND_OPTIONS_MN=p

# Projects Panel
ADD_PROJECTS_BUTTON_TXT=Add...
ADD_PROJECTS_BUTTON_TT=Add project to the list of required projects
ADD_PROJECTS_BUTTON_MN=A
PROJECTS_TXT=Projects:
PROJECTS_MN=P


# LibraryOptionPanel
STATIC_BINDINGS_TXT=Static Bindings
STATIC_BINDINGS_MN=S
DYNAMIC_BINDINGS_TXT=Dynamic Bindings
DYNAMIC_BINDINGS_MN=D
OTHER_OPTION_TXT=Other Option
OTHER_OPTION_MN=O

#Make Artifact Chooser
PROJECT_NAME_TXT=Project Name:
PROJECT_LIBRARY_FILES_TXT=Configurations:
PROJECT_LIBRARY_FILES_MN=f
PROJECT_LIBRARY_FILES_AD=Configurations
ADD_ITSELF_ERROR=Cannot add reference to itself.
ADD_CYCLIC_ERROR=Cannot add cyclic references.

# OptionsPanel
ALL_OPTIONS_TXT=All Options:
ALL_OPTIONS_MN=A
INHERIT_TXT=Inherit from project
INHERIT_MN=I
INHERIT_AD=Inherit from project
ADDITIONAL_OPTIONS_TXT=Additional Options:
ADDITIONAL_OPTIONS_AD=Additional Options
ADDITIONAL_OPTIONS_MN=O

#StdLibPanel
STANDARD_LIBRARIES_TXT=Standard Libraries:
STANDARD_LIBRARIES_MN=S
MANAGE_LIBRARIES_TXT=Manage Libraries...
MANAGE_LIBRARIES_MN=M

#TableEditorPanel
CLICK_TO_CHANGE=Configuration - click to change...
ITEM=Item
CONFIGURATION=Configuration
BUILD=Build
BROKEN=Broken:

# StdLibPanel
LIBRARY_LIST_SD=List of standard libraries
LIBRARY_LIST_NM=Standard Libraries

# LibraryOptionPanel
LINKER_OPTIONS_PANEL_SD=linker Options Dialog
LINKER_OPTIONS_DYNAMIC_RB_SD=Add dynamic linker option
LINKER_OPTIONS_STATIC_RB_SD=Add static linker option
LINKER_OPTIONS_OTHER_RB_SD=Add other linker option
LINKER_OPTIONS_OTHER_TF_SD=Other linker option

# ProjectPropPanel
ProjectPropPanel.sourceRootLabel.text=Source Folders:
ProjectPropPanel.sourceRootLabel.mn=o
ProjectPropPanel.projectLabel.text=Project Location:
ProjectPropPanel.projectLabel.ad=Project Location
ProjectPropPanel.projectLabel.mn=L
ADD_BUTTON_MN=d
ADD_BUTTON_TXT=Add

# {0} - name of configuration
ProjectPropPanel.encodingLabel.text=&Encoding:
PackagingFilesPanel.duplicateButton.text=Duplicate
PackagingFilesPanel.removeButton.text=Remove
PackagingFilesPanel.addButton.text=Add
PackagingInfo2Panel.docTextArea.text=djskadjas dasdj adkadjakldjadjakldjadjaklsdjasdj adad asdjaskdjas dasdas dsajdlksajdsald sadsa dasjdlsakdjsa dsajd sajdsakdsa dsa dsajdsajdsad sad sadsa dsa dsadsadsa dsa dsa dsa
PACKAGING_ARCH_DOC=A comma-separated list of alphanumeric tokens that indi\
         cate  the  architecture associated with the package. The \
         pkgmk(1) tool can be used to create or modify this value \
         when  actually  building the package. The maximum length \
         of a token is 16 characters  and  it  cannot  include  a \
         comma. \
 \
         Solaris's installation software meaningfully  uses  only \
         one architecture token of the form: \
 \
           <instruction_set_architecture>[.<platform_group>] \
 \
         where platform_group is intended only for  Solaris  ins\
         tallation  packages.  Third  party  application software \
         should restrict itself to ARCH values from the following \
         Solaris-supported  instruction  set architectures (uname \
         -p): sparc, i386, and ppc. Examples of Solaris' platform \
         groups  (uname  -m)  are sun4u for the SPARC instruction \
         set and i86pc for the i386 instruction set. See uname(1) \
         and isalist(1) for more details.
PACKAGING_CATEGORY_DOC=A comma-separated list of categories under which a pack\
         age  can be displayed. A package must at least belong to \
         the  system  or  application  category.  Categories  are \
         case-insensitive  and  can  contain  only alphanumerics. \
         Each category is limited in length to 16 characters.
PACKAGING_NAME_DOC=Text that specifies the package name (maximum length  of \
         256  ASCII  characters).  Use  the NAME parameter as the \
         foundation for describing the functionality and  purpose \
         of  the package; spell out any acronyms and avoid inter\
         nal product/project code names. The DESC  parameter  can \
         then  be used to expand the descriptive information. Use \
         the NAME parameter to state as specifically as  possible \
         the  use  of  the package, why a user would need to load \
         it, and so on.
PACKAGING_PKG_DOC=Abbreviation for the package being installed. All  char\
         acters in the abbreviation must be alphanumeric. You can \
         also use the - and + characters in the abbreviation. The \
         first character cannot be numeric, a + or a -. \
         The abbreviation is limited to a maximum  length  of  32 \
         characters. install, new, and all are reserved abbrevia\
         tions. It is customary to make the  first  four  letters \
         unique to your company, such as the company's stock sym\
         bol.
PACKAGING_VERSION_DOC=Text that specifies the current version associated  with \
         the  software  package.  The maximum length is 256 ASCII \
         characters and the first  character  cannot  be  a  left \
         parenthesis.  The pkgmk(1) tool can be used to create or \
         modify this value when actually  building  the  package. \
         Current  Solaris  software  practice  is  to assign this \
         parameter monotonically increasing Dewey decimal  values \
         of the form: \
           <major_revision>.<minor_revision>[.<micro_revision>] \
         where all the revision fields are integers. The version\
         ing  fields  can  be  extended to an arbitrary string of \
         numbers in Dewey-decimal format, if necessary.
PACKAGING_BASEDIR_DOC=The pathname to a default directory where  "relocatable" \
         files  can  be  installed.  If blank, the package is not \
         relocatable and any files that have  relative  pathnames \
         are  not  installed.  An  administrator can override the \
         default directory.
PACKAGING_CLASSES_DOC=A space-separated list of classes defined for a package. \
         The  order of the list determines the order in which the \
         classes  are  installed.  Classes   listed   first   are \
         installed first (on a media by media basis). This param\
         eter can be modified by the request script.
PACKAGING_DESC_DOC=Text that describes the package (maximum length  of  256 \
         ASCII  characters). This parameter value is used to pro\
         vide the installer with a description of what the  pack\
         age  contains  and  should build on the description pro\
         vided in the NAME parameter.  Try to make the two param\
         eters  work  together  so  that  a pkginfo -l provides a \
         fairly comprehensive textual description of the package.
PACKAGING_EMAIL_DOC=An  electronic  address  where  further  information  is \
         available or bugs can be reported (maximum length of 256 \
         ASCII characters).
PACKAGING_HOTLINE_DOC=Phone number and/or mailing address where further infor\
         mation  can be received or bugs can be reported (maximum \
         length of 256 ASCII characters).
PACKAGING_INTONLY_DOC=Indicates that the  package  should  only  be  installed \
         interactively when set to any non-null value.
PACKAGING_ISTATES_DOC=A list of allowable run states for package  installation \
         (for  example,  "S s 1" allows run states of S, s or 1). \
         The Solaris operating environment supports the run  lev- \
         els  s,  S,  0, 1, 2, 3, 5, and 6. Applicable run levels \
         for this parameter are s, S, 1, 2, and 3.  See  init(1M) \
         for details.
PACKAGING_MAXINST_DOC=The maximum number of package instances that  should  be \
         allowed  on a machine at the same time. By default, only \
         one instance of a package  is  allowed.  This  parameter \
         must  be  set  in  order to have multiple instances of a \
         package. In order to support multiple instances of pack\
         ages (for example, packages that differ in their ARCH or \
         VERSION parameter value), the value  of  this  parameter \
         must  be  high  enough  to  allow for all instances of a \
         given package, including multiple versions coexisting on \
         a software server.

PackagingNewEntryPanel.entryLabel.text=Name:
PackagingNewEntryPanel.valueLabel.text=Value:
