<?xml version="1.0" encoding="UTF-8"?>
<!-- Search for CHANGEME in this document when copying and using it: -->
<!--
The contents of this file are subject to the terms of the Common Development
and Distribution License (the License). You may not use this file except in
compliance with the License.

You can obtain a copy of the License at http://www.netbeans.org/cddl.html
or http://www.netbeans.org/cddl.txt.

When distributing Covered Code, include this CDDL Header Notice in each file
and include the License file at http://www.netbeans.org/cddl.txt.
If applicable, add the following below the CDDL Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
Microsystems, Inc. All Rights Reserved.
-->
<?xml-stylesheet type="text/xml" href="../../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<!--

INFO FOR PEOPLE ADDING CHANGES:

Check the DTD (apichanges.dtd) for details on the syntax. You do not
need to regenerate the HTML, as this is part of Javadoc generation; just
change the XML. Rough syntax of a change (several parts optional):

<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>

Also permitted elements: <package>, <branch>. <version> is API spec
version, recommended for all new changes. <compatibility> should say
if things were added/modified/deprecated/etc. and give all information
related to upgrading old code. List affected top-level classes and
link to issue numbers if applicable. See the DTD for more details.

Changes need not be in any particular order, they are sorted in various
ways by the stylesheet anyway.

Dates are assumed to mean "on the trunk". If you *also* make the same
change on a stabilization branch, use the <branch> tag to indicate this
and explain why the change was made on a branch in the <description>.

Please only change this file on the trunk! Rather: you can change it
on branches if you want, but these changes will be ignored; only the
trunk version of this file is important.

Deprecations do not count as incompatible, assuming that code using the
deprecated calls continues to see their documented behavior. But do
specify deprecation="yes" in <compatibility>.

This file is not a replacement for Javadoc: it is intended to list changes,
not describe the complete current behavior, for which ordinary documentation
is the proper place.

-->

<apichanges>

    <!-- First, a list of API names you may use: -->
    <apidefs>
        <apidef name="general">Java Source API</apidef>
        <!-- etc. -->
    </apidefs>

    <!-- ACTUAL CHANGES BEGIN HERE: -->

    <changes>
        <change id="JavaSource-Task">
            <api name="general"/>
            <summary>CancellableTask split into Task and CancellableTask.</summary>
            <version major="0" minor="17"/>
            <date day="13" month="6" year="2007"/>
            <author login="tzezula"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                The JavaSource.runModificationTask(), runWhenScanFinished() and runUserActionTask() never call the cancel method of the
                CancellableTask, the implementor of such a CancellableTask just writes an empty cancel method. The compatible API
                change splits the CancellableTask into Task with run method and CancellableTask which extends the Task by cancel method.
                The JavaSource methods mentioned above take Task rather than CancellableTask. The CancellableTask is used only for tasks
                registered by factories.
            </description>
        </change>
        <change id="ClassIndex-interruption">
            <api name="general"/>
            <summary>ClassIndex methods are cancellable</summary>
            <version major="0" minor="16"/>
            <date day="13" month="6" year="2007"/>
            <author login="tzezula"/>
            <compatibility addition="no" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="incompatible" source="compatible"/>
            <description>
                The ClassIndex methods called from the CancellableTask are cancellable. In case when they are cancelled by the JavaSource infrastructure
                they return null instead of the Set to allow client to determine this state. The incompatible semantic change is that tasks registered by
                factories have to check if the value returned from class index is null.
            </description>
        </change>
        <change id="CompilationInfo-getTopLevelElements">
            <api name="general"/>
            <summary>Added a method to obtain top level elements defined in the source/class file.</summary>
            <version major="0" minor="14"/>
            <date day="5" month="6" year="2007"/>
            <author login="tzezula"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                Added a method to obtain top level elements defined in the given source or class file.
            </description>
            <issue number="93100"/>
        </change>
        
        <change id="TreePathHandle-create-Element">
            <api name="general"/>
            <summary>Added factory method which returns a new TreePathHandle for given Element and CompilationInfo.</summary>
            <version major="0" minor="13"/>
            <date day="24" month="4" year="2007"/>
            <author login="jbecicka"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                There is no simple way how to weakly reference all elements from javac. For instance local variables cannot be referenced by
                ElementHandles while source-less Elements cannot be referenced by TreePathHandles. This fix allows to create TreePathHandles 
                for any javac Element (both local and source less).
            </description>
            <issue number="102333"/>
        </change>

        <change id="runWhenScanFinished">
            <api name="general"/>
            <summary>Added a method to run a CancellableTask when the backgound scan is finished.</summary>
            <version major="0" minor="12"/>
            <date day="19" month="4" year="2007"/>
            <author login="tzezula"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                The JavaSource.runWhenScanFinished performs the given task either synchronously when no background scan is running. When the background
                scan is running the task is performed asynchronously when the scan completes.
            </description>
            <issue number="91117"/>
            <issue number="99923"/>
        </change>
        
        <change id="dependent-roots">
            <api name="general"/>
            <summary>Added a method which returns all the project source roots depending on a given source root.</summary>
            <version major="0" minor="10"/>
            <date day="13" month="4" year="2007"/>
            <author login="tzezula"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                The refactoring and find usages need to find the dependent roots of a project root in which the refactored type
                is declared, but finding such an information using the project API may be very expensive especially when lots of
                projects is opened. The goal of this API is to provide and cache this information.
            </description>
            <issue number="92030"/>
        </change>

        <change id="ClassIndexListener">
            <api name="general"/>
            <summary>Added a listener for listening on changes in the <code>ClassIndex</code>.</summary>
            <version major="0" minor="8"/>
            <date day="4" month="4" year="2007"/>
            <author login="tzezula"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                The listener for listening on changes in the <code>ClassIndex</code> was added. The listener fires
                events when a declared type was removed, added, changed in the <code>ClassIndex</code> oe when the underlaying
                <code>ClassPath</code> was changed.
            </description>
            <issue number="91763"/>
        </change>

        <change id="package-property">
            <api name="general"/>
            <summary>Adding template attribute <code>package</code></summary>
            <version major="0" minor="7"/>
            <date day="26" month="3" year="2007"/>
            <author login="jpokorsky"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
            <description>
                Added the template attribute <code>package</code> for templates using scripting language.
            </description>
            <issue number="95399"/>
        </change>

        <change id="type-utilities">
            <api name="general"/>
            <summary>Removing CommentUtilities, adjusting TreeMaker and introducing TypeUtilities</summary>
            <version major="0" minor="6"/>
            <date day="18" month="3" year="2007"/>
            <author login="jlahoda"/>
            <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible">
            </compatibility>
            <description>
                <ul>
                    <li>removed org.netbeans.api.java.source.CommentUtilities</li>
                    <li>removed org.netbeans.api.java.source.TreeMaker.Variable(..., TypeElement)</li>
                    <li>removed org.netbeans.api.java.source.TreeMaker.Method(..., TypeElement)</li>
                    <li>added org.netbeans.api.java.source.TypeUtilities</li>
                </ul>
            </description>
            <class package="org.netbeans.api.java.source" name="TypeUtilities"/>
            <issue number="97542"/>
        </change>
        
    </changes>

    <!-- Now the surrounding HTML text and document structure: -->

    <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <==============

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE CHANGEME/apichanges.xml

-->
    <head>
      <title>Change History for the Java Source API</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the <!--<a href="@org-netbeans-modules-java-source@/architecture-summary.html">-->Java Source API<!--</a>-->.</p>

<!-- The actual lists of changes, as summaries and details: -->
      <hr/>
      <standard-changelists module-code-name="org.netbeans.modules.java.source"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>

</apichanges>
