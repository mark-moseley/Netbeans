public CharSequence subSequence(int arg0, int arg1)
public String concat(String arg0)
public String replace(CharSequence arg0, CharSequence arg1)
public String replace(char arg0, char arg1)
public String replaceAll(String arg0, String arg1)
public String replaceFirst(String arg0, String arg1)
public String substring(int arg0)
public String substring(int arg0, int arg1)
public String toLowerCase()
public String toLowerCase(Locale arg0)
public String toString()
public String toUpperCase()
public String toUpperCase(Locale arg0)
public String trim()
public String[] split(String arg0)
public String[] split(String arg0, int arg1)
public boolean contains(CharSequence arg0)
public boolean contentEquals(CharSequence arg0)
public boolean contentEquals(StringBuffer arg0)
public boolean endsWith(String arg0)
public boolean equals(Object arg0)
public boolean equalsIgnoreCase(String arg0)
public boolean matches(String arg0)
public boolean regionMatches(boolean arg0, int arg1, String arg2, int arg3, int arg4)
public boolean regionMatches(int arg0, String arg1, int arg2, int arg3)
public boolean startsWith(String arg0)
public boolean startsWith(String arg0, int arg1)
public byte[] getBytes()
public byte[] getBytes(String arg0)
public char charAt(int arg0)
public char[] toCharArray()
public int codePointAt(int arg0)
public int codePointBefore(int arg0)
public int codePointCount(int arg0, int arg1)
public int compareTo(String arg0)
public int compareToIgnoreCase(String arg0)
public int hashCode()
public int indexOf(String arg0)
public int indexOf(String arg0, int arg1)
public int indexOf(int arg0)
public int indexOf(int arg0, int arg1)
public int lastIndexOf(String arg0)
public int lastIndexOf(String arg0, int arg1)
public int lastIndexOf(int arg0)
public int lastIndexOf(int arg0, int arg1)
public int length()
public int offsetByCodePoints(int arg0, int arg1)
public native String intern()
public static String copyValueOf(char[] arg0)
public static String copyValueOf(char[] arg0, int arg1, int arg2)
public static String format(Locale arg0, String arg1, Object[] arg2)
public static String format(String arg0, Object[] arg1)
public static String valueOf(Object arg0)
public static String valueOf(boolean arg0)
public static String valueOf(char arg0)
public static String valueOf(char[] arg0)
public static String valueOf(char[] arg0, int arg1, int arg2)
public static String valueOf(double arg0)
public static String valueOf(float arg0)
public static String valueOf(int arg0)
public static String valueOf(long arg0)
public void getBytes(int arg0, int arg1, byte[] arg2, int arg3)
public void getChars(int arg0, int arg1, char[] arg2, int arg3)
