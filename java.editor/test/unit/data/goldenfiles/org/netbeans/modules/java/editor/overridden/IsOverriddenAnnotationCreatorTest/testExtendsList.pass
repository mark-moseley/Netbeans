IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.add(E arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.add(int arg0, E arg1)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.addAll(int arg0, java.util.Collection arg1)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.addAll(java.util.Collection arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.clear()]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.contains(java.lang.Object arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.containsAll(java.util.Collection arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.get(int arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.indexOf(java.lang.Object arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.isEmpty()]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.iterator()]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.lastIndexOf(java.lang.Object arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.listIterator()]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.listIterator(int arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.remove(int arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.remove(java.lang.Object arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.removeAll(java.util.Collection arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.retainAll(java.util.Collection arg0)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.set(int arg0, E arg1)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.size()]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.subList(int arg0, int arg1)]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.toArray()]
IsOverriddenAnnotation: type=IMPLEMENTS, elements:[java.util.List.toArray(Array arg0)]
