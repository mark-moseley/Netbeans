#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
# Microsystems, Inc. All Rights Reserved.

OPTIONS_java=Java Editor

PROP_completionCaseSensitive=Case Sensitive Code Completion
HINT_completionCaseSensitive=If True, the completion query search will be case sensitive

PROP_completionNaturalSort=Code Completion Natural Sort
HINT_completionNaturalSort=If True, the completion search results will be sorted naturally

PROP_completionLowerCase=Code Completion Lowercase Substitution
HINT_completionLowerCase=If True, HTML Code Completion will be available in lower case.

PROP_fastImportPackage=Fast Import Package
HINT_fastImportPackage=If True, fast import dialog will offer packages

PROP_gotoClassCaseSensitive=Go To Class Case Sensitivity
HINT_gotoClassCaseSensitive=If True, Go To Class search will be case sensitive

PROP_gotoClassShowInnerClasses=Go To Class Show Inner Classes
HINT_gotoClassShowInnerClasses=If True, Go To Class search will search also inner classes

PROP_gotoClassShowLibraryClasses=Go To Class Show Library Classes
HINT_gotoClassShowLibraryClasses=If True, Go To Class search will search library classes

PROP_updatePDAfterMounting=Update Code Completion Database After Mounting
HINT_updatePDAfterMounting=Mounted filesystem will be added into the Code Completion Database.

PROP_showDeprecatedMembers=Show Deprecated Members in Code Completion
HINT_showDeprecatedMembers=If True, deprecated members are shown in code completion.

# The Java colorings. Some of them are generalized for a group
# of the same type, others are independent

    # java-keywords
    NAME_coloring_java-keywords=Java Keyword
    HINT_coloring_java-keywords=Java keyword.
    EXAMPLE_coloring_java-keywords=keyword
    # java-boolean
    NAME_coloring_java-boolean=boolean
    HINT_coloring_java-boolean=
    EXAMPLE_coloring_java-boolean=boolean
    # java-byte
    NAME_coloring_java-byte=byte
    HINT_coloring_java-byte=
    EXAMPLE_coloring_java-byte=byte
    # java-char
    NAME_coloring_java-char=char
    HINT_coloring_java-char=
    EXAMPLE_coloring_java-char=char
    # java-double
    NAME_coloring_java-double=double
    HINT_coloring_java-double=
    EXAMPLE_coloring_java-double=double
    # java-float
    NAME_coloring_java-float=float
    HINT_coloring_java-float=
    EXAMPLE_coloring_java-float=float
    # java-int
    NAME_coloring_java-int=int
    HINT_coloring_java-int=
    EXAMPLE_coloring_java-int=int
    # java-long
    NAME_coloring_java-long=long
    HINT_coloring_java-long=
    EXAMPLE_coloring_java-long=long
    # java-short
    NAME_coloring_java-short=short
    HINT_coloring_java-short=
    EXAMPLE_coloring_java-short=short
    # java-void
    NAME_coloring_java-void=void
    HINT_coloring_java-void=
    EXAMPLE_coloring_java-void=void
    # java-abstract
    NAME_coloring_java-abstract=abstract
    HINT_coloring_java-abstract=
    EXAMPLE_coloring_java-abstract=abstract
    # java-break
    NAME_coloring_java-break=break
    HINT_coloring_java-break=
    EXAMPLE_coloring_java-break=break
    # java-case
    NAME_coloring_java-case=case
    HINT_coloring_java-case=
    EXAMPLE_coloring_java-case=case
    # java-catch
    NAME_coloring_java-catch=catch
    HINT_coloring_java-catch=
    EXAMPLE_coloring_java-catch=catch
    # java-class
    NAME_coloring_java-class=class
    HINT_coloring_java-class=
    EXAMPLE_coloring_java-class=class
    # java-const
    NAME_coloring_java-const=const
    HINT_coloring_java-const=
    EXAMPLE_coloring_java-const=const
    # java-continue
    NAME_coloring_java-continue=continue
    HINT_coloring_java-continue=
    EXAMPLE_coloring_java-continue=continue
    # java-default
    NAME_coloring_java-default=default
    HINT_coloring_java-default=
    EXAMPLE_coloring_java-default=default
    # java-do
    NAME_coloring_java-do=do
    HINT_coloring_java-do=
    EXAMPLE_coloring_java-do=do
    # java-else
    NAME_coloring_java-else=else
    HINT_coloring_java-else=
    EXAMPLE_coloring_java-else=else
    # java-extends
    NAME_coloring_java-extends=extends
    HINT_coloring_java-extends=
    EXAMPLE_coloring_java-extends=extends
    # java-false
    NAME_coloring_java-false=false
    HINT_coloring_java-false=
    EXAMPLE_coloring_java-false=false
    # java-final
    NAME_coloring_java-final=final
    HINT_coloring_java-final=
    EXAMPLE_coloring_java-final=final
    # java-finally
    NAME_coloring_java-finally=finally
    HINT_coloring_java-finally=
    EXAMPLE_coloring_java-finally=finally
    # java-for
    NAME_coloring_java-for=for
    HINT_coloring_java-for=
    EXAMPLE_coloring_java-for=for
    # java-goto
    NAME_coloring_java-goto=goto
    HINT_coloring_java-goto=
    EXAMPLE_coloring_java-goto=goto
    # java-if
    NAME_coloring_java-if=if
    HINT_coloring_java-if=
    EXAMPLE_coloring_java-if=if
    # java-implements
    NAME_coloring_java-implements=implements
    HINT_coloring_java-implements=
    EXAMPLE_coloring_java-implements=implements
    # java-import
    NAME_coloring_java-import=import
    HINT_coloring_java-import=
    EXAMPLE_coloring_java-import=import
    # java-instanceof
    NAME_coloring_java-instanceof=instanceof
    HINT_coloring_java-instanceof=
    EXAMPLE_coloring_java-instanceof=instanceof
    # java-interface
    NAME_coloring_java-interface=interface
    HINT_coloring_java-interface=
    EXAMPLE_coloring_java-interface=interface
    # java-native
    NAME_coloring_java-native=native
    HINT_coloring_java-native=
    EXAMPLE_coloring_java-native=native
    # java-new
    NAME_coloring_java-new=new
    HINT_coloring_java-new=
    EXAMPLE_coloring_java-new=new
    # java-null
    NAME_coloring_java-null=null
    HINT_coloring_java-null=
    EXAMPLE_coloring_java-null=null
    # java-package
    NAME_coloring_java-package=package
    HINT_coloring_java-package=
    EXAMPLE_coloring_java-package=package
    # java-private
    NAME_coloring_java-private=private
    HINT_coloring_java-private=
    EXAMPLE_coloring_java-private=private
    # java-protected
    NAME_coloring_java-protected=protected
    HINT_coloring_java-protected=
    EXAMPLE_coloring_java-protected=protected
    # java-public
    NAME_coloring_java-public=public
    HINT_coloring_java-public=
    EXAMPLE_coloring_java-public=public
    # java-return
    NAME_coloring_java-return=return
    HINT_coloring_java-return=
    EXAMPLE_coloring_java-return=return
    # java-static
    NAME_coloring_java-static=static
    HINT_coloring_java-static=
    EXAMPLE_coloring_java-static=static
    # java-super
    NAME_coloring_java-super=super
    HINT_coloring_java-super=
    EXAMPLE_coloring_java-super=super
    # java-switch
    NAME_coloring_java-switch=switch
    HINT_coloring_java-switch=
    EXAMPLE_coloring_java-switch=switch
    # java-synchronized
    NAME_coloring_java-synchronized=synchronized
    HINT_coloring_java-synchronized=
    EXAMPLE_coloring_java-synchronized=synchronized
    # java-this
    NAME_coloring_java-this=this
    HINT_coloring_java-this=
    EXAMPLE_coloring_java-this=this
    # java-throw
    NAME_coloring_java-throw=throw
    HINT_coloring_java-throw=
    EXAMPLE_coloring_java-throw=throw
    # java-throws
    NAME_coloring_java-throws=throws
    HINT_coloring_java-throws=
    EXAMPLE_coloring_java-throws=throws
    # java-transient
    NAME_coloring_java-transient=transient
    HINT_coloring_java-transient=
    EXAMPLE_coloring_java-transient=transient
    # java-true
    NAME_coloring_java-true=true
    HINT_coloring_java-true=
    EXAMPLE_coloring_java-true=true
    # java-try
    NAME_coloring_java-try=try
    HINT_coloring_java-try=
    EXAMPLE_coloring_java-try=try
    # java-volatile
    NAME_coloring_java-volatile=volatile
    HINT_coloring_java-volatile=
    EXAMPLE_coloring_java-volatile=volatile
    # java-while
    NAME_coloring_java-while=while
    HINT_coloring_java-while=
    EXAMPLE_coloring_java-while=while




# java-operators
NAME_coloring_java-operators=Java Operator
HINT_coloring_java-operators=Java operator.
EXAMPLE_coloring_java-operators=+-*/&|
    # java-eq
    NAME_coloring_java-eq=Assignment
    HINT_coloring_java-eq=Assignment operator.
    EXAMPLE_coloring_java-eq==
    # java-lt
    NAME_coloring_java-lt=Less Than
    HINT_coloring_java-lt="Less than" operator.
    EXAMPLE_coloring_java-lt=<
    # java-gt
    NAME_coloring_java-gt=Greater Than
    HINT_coloring_java-gt="Greater than" operator.
    EXAMPLE_coloring_java-gt=>
    # java-lshift
    NAME_coloring_java-lshift=Left Shift
    HINT_coloring_java-lshift=Left shift operator.
    EXAMPLE_coloring_java-lshift=<<
    # java-rsshift
    NAME_coloring_java-rsshift=Right shift
    HINT_coloring_java-rsshift=Right Shift operator.
    EXAMPLE_coloring_java-rsshift=>>
    # java-rushift
    NAME_coloring_java-rushift=Right Unsigned Shift
    HINT_coloring_java-rushift=Right unsigned shift operator.
    EXAMPLE_coloring_java-rushift=>>>
    # java-plus
    NAME_coloring_java-plus=Plus
    HINT_coloring_java-plus=Plus operator.
    EXAMPLE_coloring_java-plus=+
    # java-minus
    NAME_coloring_java-minus=Minus
    HINT_coloring_java-minus=Minus operator.
    EXAMPLE_coloring_java-minus=-
    # java-mul
    NAME_coloring_java-mul=Multiply
    HINT_coloring_java-mul=Multiply operator.
    EXAMPLE_coloring_java-mul=*
    # java-div
    NAME_coloring_java-div=Division
    HINT_coloring_java-div=Division operator.
    EXAMPLE_coloring_java-div=/
    # java-and
    NAME_coloring_java-and=And
    HINT_coloring_java-and=And operator.
    EXAMPLE_coloring_java-and=&
    # java-or
    NAME_coloring_java-or=Or
    HINT_coloring_java-or=Or operator.
    EXAMPLE_coloring_java-or=|
    # java-xor
    NAME_coloring_java-xor=Xor
    HINT_coloring_java-xor=Xor operator.
    EXAMPLE_coloring_java-xor=^
    # java-mod
    NAME_coloring_java-mod=Modulo
    HINT_coloring_java-mod=Modulo (reminder) operator.
    EXAMPLE_coloring_java-mod=%
    # java-not
    NAME_coloring_java-not=Not
    HINT_coloring_java-not=Logical not operator.
    EXAMPLE_coloring_java-not=!
    # java-neg
    NAME_coloring_java-neg=Negation
    HINT_coloring_java-neg=Negation operator.
    EXAMPLE_coloring_java-neg=~
    # java-eq-eq
    NAME_coloring_java-eq-eq=Equivalence
    HINT_coloring_java-eq-eq=Equivalence operator.
    EXAMPLE_coloring_java-eq-eq===
    # java-le
    NAME_coloring_java-le=Less Or Equal
    HINT_coloring_java-le="Less or equal" operator.
    EXAMPLE_coloring_java-le=<=
    # java-ge
    NAME_coloring_java-ge=Greater Or Equal
    HINT_coloring_java-ge="Greater or equal" operator.
    EXAMPLE_coloring_java-ge=>=
    # java-lshift-eq
    NAME_coloring_java-lshift-eq=
    HINT_coloring_java-lshift-eq=
    EXAMPLE_coloring_java-lshift-eq=<<=
    # java-rsshift-eq
    NAME_coloring_java-rsshift-eq=
    HINT_coloring_java-rsshift-eq=
    EXAMPLE_coloring_java-rsshift-eq=>>=
    # java-rushift-eq
    NAME_coloring_java-rushift-eq=
    HINT_coloring_java-rushift-eq=
    EXAMPLE_coloring_java-rushift-eq=>>>=
    # java-plus-eq
    NAME_coloring_java-plus-eq=
    HINT_coloring_java-plus-eq=
    EXAMPLE_coloring_java-plus-eq=+=
    # java-minus-eq
    NAME_coloring_java-minus-eq=
    HINT_coloring_java-minus-eq=
    EXAMPLE_coloring_java-minus-eq=-=
    # java-mul-eq
    NAME_coloring_java-mul-eq=
    HINT_coloring_java-mul-eq=
    EXAMPLE_coloring_java-mul-eq=*=
    # java-div-eq
    NAME_coloring_java-div-eq=
    HINT_coloring_java-div-eq=
    EXAMPLE_coloring_java-div-eq=/=
    # java-and-eq
    NAME_coloring_java-and-eq=
    HINT_coloring_java-and-eq=
    EXAMPLE_coloring_java-and-eq=&=
    # java-or-eq
    NAME_coloring_java-or-eq=
    HINT_coloring_java-or-eq=
    EXAMPLE_coloring_java-or-eq=!=
    # java-xor-eq
    NAME_coloring_java-xor-eq=
    HINT_coloring_java-xor-eq=
    EXAMPLE_coloring_java-xor-eq=^=
    # java-mod-eq
    NAME_coloring_java-mod-eq=
    HINT_coloring_java-mod-eq=
    EXAMPLE_coloring_java-mod-eq=%=
    # java-not-eq
    NAME_coloring_java-not-eq=
    HINT_coloring_java-not-eq=
    EXAMPLE_coloring_java-not-eq=!=
    # java-dot
    NAME_coloring_java-dot=Dot
    HINT_coloring_java-dot=Dot operator.
    EXAMPLE_coloring_java-dot=.
    # java-comma
    NAME_coloring_java-comma=Comma
    HINT_coloring_java-comma=Comma operator.
    EXAMPLE_coloring_java-comma=,
    # java-colon
    NAME_coloring_java-colon=
    HINT_coloring_java-colon=
    EXAMPLE_coloring_java-colon=:
    # java-semicolon [PENDING: Not an operator]
    # NAME_coloring_java-semicolon=
    # HINT_coloring_java-semicolon=
    # EXAMPLE_coloring_java-semicolon=
    # java-question
    NAME_coloring_java-question=
    HINT_coloring_java-question=
    EXAMPLE_coloring_java-question=?
    # java-lparen
    NAME_coloring_java-lparen=
    HINT_coloring_java-lparen=
    EXAMPLE_coloring_java-lparen=(
    # java-rparen
    NAME_coloring_java-rparen=
    HINT_coloring_java-rparen=
    EXAMPLE_coloring_java-rparen=)
    # java-lbracket
    NAME_coloring_java-lbracket=
    HINT_coloring_java-lbracket=
    EXAMPLE_coloring_java-lbracket=[
    # java-rbracket
    NAME_coloring_java-rbracket=
    HINT_coloring_java-rbracket=
    EXAMPLE_coloring_java-rbracket=]
    # java-lbrace [PENDING: Not an operator]
    # NAME_coloring_java-lbrace=
    # HINT_coloring_java-lbrace=
    # EXAMPLE_coloring_java-lbrace={
    # java-rbrace [PENDING: Not an operator]
    # NAME_coloring_java-rbrace=
    # HINT_coloring_java-rbrace=
    # EXAMPLE_coloring_java-rbrace=}
    # java-plus-plus
    NAME_coloring_java-plus-plus=Increment
    HINT_coloring_java-plus-plus=Increment operator.
    EXAMPLE_coloring_java-plus-plus=++
    # java-minus-minus
    NAME_coloring_java-minus-minus=Decrement
    HINT_coloring_java-minus-minus=Decrement operator.
    EXAMPLE_coloring_java-minus-minus=--
    # java-and-and
    NAME_coloring_java-and-and=
    HINT_coloring_java-and-and=
    EXAMPLE_coloring_java-and-and=&&
    # java-or-or
    NAME_coloring_java-or-or=
    HINT_coloring_java-or-or=
    EXAMPLE_coloring_java-or-or=||



# java-numeric-literals, the grouping and the elements
NAME_coloring_java-numeric-literals=Numeric Literal
HINT_coloring_java-numeric-literals=Numeric constant.
EXAMPLE_coloring_java-numeric-literals=5
    # java-int-literal
    NAME_coloring_java-int-literal=Integer Literal
    HINT_coloring_java-int-literal=Integer constant.
    EXAMPLE_coloring_java-int-literal=1234567
    # java-long-literal
    NAME_coloring_java-long-literal=Long Integer Literal
    HINT_coloring_java-long-literal=Long integer constant.
    EXAMPLE_coloring_java-long-literal=12345L
    # java-hex-literal
    NAME_coloring_java-hex-literal=Hexadecimal Literal
    HINT_coloring_java-hex-literal=Hexadecimal constant.
    EXAMPLE_coloring_java-hex-literal=0x9A
    # java-octal-literal
    NAME_coloring_java-octal-literal=Octal Literal
    HINT_coloring_java-octal-literal=Octal constant.
    EXAMPLE_coloring_java-octal-literal=057
    # java-float-literal
    NAME_coloring_java-float-literal=Float Literal
    HINT_coloring_java-float-literal=Floating-point constant.
    EXAMPLE_coloring_java-float-literal=1.02f
    # java-double-literal
    NAME_coloring_java-double-literal=Double Literal
    HINT_coloring_java-double-literal=Double floating-point constant.
    EXAMPLE_coloring_java-double-literal=3.55d


    # java-errors
    NAME_coloring_java-errors=Error In Sources
    HINT_coloring_java-errors=Erroneous text (marked by the compiler).
    EXAMPLE_coloring_java-errors=error

    # java-incomplete-string-literal
    NAME_coloring_java-incomplete-string-literal=
    HINT_coloring_java-incomplete-string-literal=
    EXAMPLE_coloring_java-incomplete-string-literal="tex
    # java-incomplete-char-literal
    NAME_coloring_java-incomplete-char-literal=
    HINT_coloring_java-incomplete-char-literal=
    EXAMPLE_coloring_java-incomplete-char-literal='a
    # java-incomplete-hex-literal
    NAME_coloring_java-incomplete-hex-literal=
    HINT_coloring_java-incomplete-hex-literal=
    EXAMPLE_coloring_java-incomplete-hex-literal=0x
    # java-invalid-char
    NAME_coloring_java-invalid-char=
    HINT_coloring_java-invalid-char=
    EXAMPLE_coloring_java-invalid-char='aa'
    # java-invalid-operator
    NAME_coloring_java-invalid-operator=
    HINT_coloring_java-invalid-operator=
    EXAMPLE_coloring_java-invalid-operator=
    # java-invalid-octal-literal
    NAME_coloring_java-invalid-octal-literal=
    HINT_coloring_java-invalid-octal-literal=
    EXAMPLE_coloring_java-invalid-octal-literal=
    # java-invalid-comment-end
    NAME_coloring_java-invalid-comment-end=
    HINT_coloring_java-invalid-comment-end=
    EXAMPLE_coloring_java-invalid-comment-end=


# java-whitespace
NAME_coloring_java-whitespace=Whitespace
HINT_coloring_java-whitespace=Whitespace.
EXAMPLE_coloring_java-whitespace=

# java-identifier
NAME_coloring_java-identifier=Java Identifier
HINT_coloring_java-identifier=Java identifier.
EXAMPLE_coloring_java-identifier=id

# java-annotation "@ident" in JDK1.5
NAME_coloring_java-annotation=Java Annotation
HINT_coloring_java-annotation=Java Annotation.
EXAMPLE_coloring_java-annotation=@

# java-line-comment
NAME_coloring_java-line-comment=Single-line Comment
HINT_coloring_java-line-comment=Single-line comment.
EXAMPLE_coloring_java-line-comment=// line-comment

# java-block-comment
NAME_coloring_java-block-comment=Block Comment
HINT_coloring_java-block-comment=Block (multi-line) comment.
EXAMPLE_coloring_java-block-comment=/* block comment */

# java-char-literal
NAME_coloring_java-char-literal=Character Literal
HINT_coloring_java-char-literal=Character constant.
EXAMPLE_coloring_java-char-literal='\\n'

# java-string-literal
NAME_coloring_java-string-literal=String Literal
HINT_coloring_java-string-literal=String constant.
EXAMPLE_coloring_java-string-literal="string"

#-------------------------------------------------------------------------------
NAME_coloring_java-layer-method=Java Method Call
HINT_coloring_java-layer-method=Java method (or constructor) call.
EXAMPLE_coloring_java-layer-method=method()

PROP_CodeFolding=Code Folding

#CodeFoldingEditorPanel
CFEP_UseCF=\ Use Code Folding
CFEP_UseCF_Mnemonic=U
CFEP_CollapsedByDefault=Fold Types Collapsed by Default:
CFEP_Method=\ Method
CFEP_Method_Mnemonic=M
CFEP_InnerClass=\ Inner Class
CFEP_InnerClass_Mnemonic=n
CFEP_Import=\ Import
CFEP_Import_Mnemonic=I
CFEP_Javadoc=\ Javadoc Comment
CFEP_Javadoc_Mnemonic=J
CFEP_InitialComment=\ Initial Comment
CFEP_InitialComment_Mnemonic=t

