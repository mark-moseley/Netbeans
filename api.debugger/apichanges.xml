<?xml version="1.0" encoding="UTF-8"?>
<!--
                Sun Public License Notice

The contents of this file are subject to the Sun Public License
Version 1.0 (the "License"). You may not use this file except in
compliance with the License. A copy of the License is available at
http://www.sun.com/

The Original Code is NetBeans. The Initial Developer of the Original
Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
Microsystems, Inc. All Rights Reserved.
-->

<?xml-stylesheet href="../../nbbuild/javadoctools/apichanges.xsl" type="text/xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<!-- INFO FOR PEOPLE ADDING CHANGES: 
[most of contents snipped - see openide's apichanges for how-to instructions]
<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>
-->

<apichanges>

<!-- First, a list of API names you may use: -->
<apidefs>
        <apidef name="DebuggerCoreAPI">Debugger Core API</apidef>
</apidefs>

<!-- ACTUAL CHANGES BEGIN HERE: -->

<changes>
    <change>
        <api name="DebuggerCoreAPI"/>
        <summary>Support for "dual" actions added.</summary>
        <date day="29" month="4" year="2004"/>
        <author login="jjancura"/>
        <compatibility>
            <p>
                Incompatile changes (additions / removals).
            </p>
        </compatibility>
        <description>
            According to Debugger UI Specification there are some actions that have two different 
            meanings. for example Step Into action. When some Java Debugger session is running it steps
            into the current method. But if there is no session running it should start a new session
            for Main Project and stop in its main method. Thats why we have to update support for debugger 
            actions. Changes made:
            <ul>
                <li>
                    Support methods for managing and sharing actions has been moved from DebuggerEngine
                    to new class ActionsManager.
                </li>
                <li>
                    Debugger Action Constants has been move from DebuggerEngine to ActionsManager.
                </li>
                <li>
                    New common ancestor of DebuggerManager, Session and Debugger Engine has been 
                    introduced - LookupProvider. From now you can register the same action in differen
                    context levels.
                </li>
                <li>
                    DebuggerManager.getActionsManager () method has been added. You can register 
                    ActionProviders for default root context (managed by DebuggerManager). These actions
                    can be in enabled state even if there is no current DebuggerEngine!
                </li>
                <li>
                    DebuggerEngine parameter of method ActionsProvider.doAction (...) has been removed.
                </li>
            </ul>
        </description>
    </change>
    <change>
        <api name="DebuggerCoreAPI"/>
        <summary>Support for synchronouous start of DebuggerEngines added.</summary>
        <date day="3" month="5" year="2004"/>
        <author login="jjancura"/>
        <compatibility>
            <p>
                Compatile change.
            </p>
        </compatibility>
        <description>
            <p>
                <code>void DebuggerManager.startDebugging (DebuggerInfo)</code> has been changed to <code>DebuggerEngine[] 
                DebuggerManager.startDebugging (DebuggerInfo)</code>. So it returns array of all DebuggerEngines
                created for given DebuggerInfo.
            </p>
        </description>
    </change>
    <change>
        <api name="DebuggerCoreAPI"/>
        <summary>Support for ToggleBreakpointAction added, and some bugfix of Debugger Actions support API.</summary>
        <date day="9" month="5" year="2004"/>
        <author login="jjancura"/>
        <compatibility>
            <p>
                Incompatile change.
            </p>
        </compatibility>
        <description>
            <p>
                <code>ActionsManager.doAction (...)</code>, 
                <code>ActionsProvider.doAction (...)</code> and 
                <code>ActionsManagerListener.actionPefrormed (...)</code> methods
                will not return boolean any longer. This parameter was unusefull and it was not posible to 
                implement it in some meaningful way.
            </p>
        </description>
    </change>
    <change>
        <api name="DebuggerCoreAPI"/>
        <summary>Support for Breakpoints Group added.</summary>
        <date day="13" month="5" year="2004"/>
        <author login="jjancura"/>
        <compatibility>
            <p>
                Compatile change.
            </p>
        </compatibility>
        <description>
            <p>
                Breakpoint.getGroupName (), Breakpoint.setGroupName () methods were added.
                Breakpoint.PROP_GROUP_NAME has been added.
            </p>
        </description>
    </change>
    <change>
        <api name="DebuggerCoreAPI"/>
        <summary>final modifier removed from ActionsProviderSupport.isEnabled.</summary>
        <version major="1" minor="3"/>
        <date day="23" month="11" year="2004"/>
        <author login="jjancura"/>
        <compatibility>
            <p>
                Compatile change.
            </p>
        </compatibility>
        <description>
            <p>
                Having final modifier for this method can be too obstructive in some cases. I had a problem writing tests.
            </p>
        </description>
    </change>

</changes>

  <!-- Now the surrounding HTML text and document structure: -->

  <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <======================

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE xml/api/doc/changes/apichanges.xml

-->
    <head>
      <title>Debugger Core API changes by date</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the Debugger Core APIs. Please ask on the 
    <code>nbdev@netbeans.org</code>
    mailing list if you have any questions about the details of a
    change, or are wondering how to convert existing code to be compatible.
</p>

      <hr/><standard-changelists module-code-name="org.netbeans.api.debugger/1"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>
</apichanges>
