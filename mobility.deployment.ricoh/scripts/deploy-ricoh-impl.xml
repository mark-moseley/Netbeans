<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
--><project default="deploy-ricoh">
    <target name="sign-jar" unless="no.application.uid">
        <condition property="no.keystore.manifest">
            <or>
                <equals arg1="${ricoh.deployment.keystore.manifest}" arg2="" trim="true"/>
                <contains string="${ricoh.deployment.keystore.manifest}" substring="$${ricoh.deployment.keystore.manifest"/>
            </or>
        </condition>
        <fail if="no.keystore.manifest" message="Keystore manifest path is not set up!"/>
        <condition property="no.keystore.manifest.file">
            <not>
                <available file="${ricoh.deployment.keystore.manifest}"/>
            </not>
        </condition>
        <fail if="no.keystore.manifest.file" message="Path to keystore manifest file is not valid!"/>
        <condition property="no.keystore">
            <or>
                <equals arg1="${ricoh.deployment.keystore.file}" arg2="" trim="true"/>
                <contains string="${ricoh.deployment.keystore.file}" substring="$${ricoh.deployment.keystore.file"/>
            </or>
        </condition>
        <fail if="no.keystore" message="Path to keystore is not set up!"/>
        <condition property="no.keystore.file">
            <not>
                <available file="${ricoh.deployment.keystore.file}"/>
            </not>
        </condition>
        <fail if="no.keystore.file" message="Path to keystore file is not valid!"/>
        <condition property="no.keystore.alias">
            <or>
                <equals arg1="${ricoh.deployment.keystore.alias}" arg2="" trim="true"/>
                <contains string="${ricoh.deployment.keystore.alias}" substring="$${ricoh.deployment.keystore.alias"/>
            </or>
        </condition>
        <fail if="no.keystore.alias" message="Keystore alias is not set up!"/>
        <condition property="no.keystore.password">
            <or>
                <equals arg1="${ricoh.deployment.keystore.password}" arg2="" trim="true"/>
                <contains string="${ricoh.deployment.keystore.password}" substring="$${ricoh.deployment.keystore.password"/>
            </or>
        </condition>
        <fail if="no.keystore.password" message="Keystore password is not set up!"/>
        <echo message="dist.jar = ${dist.jar}"/>
        <echo message="signed.jar = ${signed.jar}"/>
        <echo message="ricoh.deployment.keystore.file = ${ricoh.deployment.keystore.file}"/>
        <echo message="ricoh.deployment.keystore.manifest = ${ricoh.deployment.keystore.manifest}"/>
        <jar destfile="${dist.dir}/${dist.jar}" manifest="${ricoh.deployment.keystore.manifest}" update="true"/>
        <signjar jar="${dist.dir}/${dist.jar}" alias="${ricoh.deployment.keystore.alias}" storepass="${ricoh.deployment.keystore.password}" signedjar="${deploy.dir}/${dist.jar}" keystore="${ricoh.deployment.keystore.file}"/>
        <echo message="install ${ricoh.application.uid} cvm ${dist.jar} ${xlet.dalp}" file="${deploy.dir}/bootscript"/>
        <echo message="rideploy file = ${rideploy.zip}"/>
    </target>

    <target name="create-target" unless="no.application.uid">
        <mkdir dir="${deploy.dir}"/>
        <copy todir="${deploy.dir}" file="${dist.jar}" overwrite="true" failonerror="false"/>
        <copy todir="${deploy.dir}" file="${dalp.dist}" overwrite="true"/>
        <copy todir="${deploy.dir}" overwrite="true">
            <fileset dir="${dist.dir}/lib/"/>
        </copy>
        <delete dir="${dist.dir}/lib/"/> <!-- not sure, if this is the best option -->
    </target>

    <target name="deploy-ricoh" depends="create-target" unless="no.application.uid"> <!--"-do-init-target, build-target, update-dalp-index, servlet-dist" > -->
        <condition property="no.application.uid" value="true">
            <or>
                <equals arg1="${ricoh.application.uid}" arg2="" trim="true"/>
                <contains string="${ricoh.application.uid}" substring="$${ricoh.application.uid"/>
            </or>
        </condition>
        
        <fail if="no.application.uid" message="Application ID is not set up!"/>
        
        <condition property="no.vendor.name" value="true">
            <equals arg1="${application.vendor}" arg2="" trim="true"/>
        </condition>

        <echo message="Variable configuration:"/>
        <echoproperties/> 
        <antcall target="sign-jar"/>  
        
        <!--default deployment method -->
        <property name="ricoh.deployment.deploy.method" value="sdcard"/>
        
        <taskIf if="ricoh.deployment.deploy.method" value="sdcard">
            <echo message="Deploying to SD Card @ ${ricoh.deployment.sdcard.path}"/>
            <copy todir="${ricoh.deployment.sdcard.path}/sdk/dsdk/dist/${ricoh.application.uid}" overwrite="true" >
                <fileset dir="${deploy.dir}"/>
            </copy>
        </taskIf>
        
        
        <taskIf if="ricoh.deployment.deploy.method" value="httppost">
            <!-- SetDefaulf values if they are not already set -->
            <property name="ricoh.deployment.http.port" value="8080"/>
            <property name="ricoh.deployment.http.platform" value="SDK/J 2.0+"/>    
            
            <zip destfile="${rideploy.zip}">
                <fileset dir="${deploy.dir}"/>
            </zip>
            <echo message="Installing directly to MFD:"/>
            <echo message="Host:        ${ricoh.deployment.server.name}"/>
            <echo message="Port:        ${ricoh.deployment.http.port}"/>
            <echo message="Deploy Type: ${main.class.class}, Java ME Ricoh MFD (SDK/J) version ${ricoh.deployment.http.platform}"/>
            <taskdef name="post" classname="ricoh.ant.http.PostTask" classpath="${libs.ricoh-ant-utils.classpath}"/>
            <condition property="no.ricoh.http.install-server.username" value="true">
                <or>
                    <equals arg1="${ricoh.deployment.server.user}" arg2="" trim="true"/>
                    <contains string="${ricoh.deployment.server.user}" substring="$${ricoh.http.install-server.username"/>
                </or>
            </condition>
            <fail if="no.ricoh.http.install-server.username">Username for HTTP post unspecified.</fail>
            <property name="ricoh.http.install-server.password" value=""/>
            <taskIf if="main.class.class" value="xlet">
                <post to="http://${ricoh.deployment.server.name}:${ricoh.deployment.http.port}/dsdk/GetInfoServlet" verbose="true" user="${ricoh.deployment.server.user}" password="${ricoh.deployment.server.password}">
                    <prop name="Type" value="xlet"/>
                </post>
                <echo message="Uploading ${rideploy.zip}..."/>
                <taskIf if="ricoh.deployment.http.platform" value="SDK/J 1.4+">
                    <post to="http://${ricoh.deployment.server.name}:${ricoh.deployment.http.port}/dsdk/FileUploadServlet" verbose="true" user="${ricoh.deployment.server.user}" password="${ricoh.deployment.server.password}">
                        <prop name="Type" value="xlet"/>
                        <prop name="File" file="${rideploy.zip}"/>
                    </post>
                    <post to="http://${ricoh.deployment.server.name}:${ricoh.deployment.http.port}/dsdk/EndServlet" verbose="true" user="${ricoh.deployment.server.user}" password="${ricoh.deployment.server.password}">
                        <prop name="restart" value="true"/>
                    </post>
                    <echo message="Upload complete."/>
                </taskIf>
                <taskIf if="ricoh.deployment.http.platform" value="SDK/J 2.0+">
                    <post to="http://${ricoh.deployment.server.name}:${ricoh.deployment.http.port}/dsdk/InstallServlet" verbose="true" user="${ricoh.deployment.server.user}" password="${ricoh.deployment.server.password}">
                        <prop name="Type" value="xlet"/>
                        <prop name="File" file="${rideploy.zip}"/>
                        <prop name="FailOnError" value="true"/>
                    </post>
                    <echo message="Upload complete."/>
                </taskIf>
            </taskIf>
        </taskIf>     
    </target>
</project>