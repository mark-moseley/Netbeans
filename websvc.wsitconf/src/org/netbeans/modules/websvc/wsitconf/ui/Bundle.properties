#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html
# or http://www.netbeans.org/cddl.txt.
#
# When distributing Covered Code, include this CDDL Header Notice in each file
# and include the License file at http://www.netbeans.org/cddl.txt.
# If applicable, add the following below the CDDL Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.

ACS_Tab_DESC=Error Tab

TXT_NotJavaClass_msg=You selected a node that is not a Java class
TXT_NotWantedClass_msg=You selected a class {0} that does not implement {1}
LBL_Select_Class=Select Java Class
LBL_Class_Tree=classtree
TTL_SelectClass=Select Java Class

STORE_FILES=Keystore, Truststore files (.jks, .p12)

COMBO_Required=Required
COMBO_RequiresNew=Requires New
COMBO_NotSupported=Not Supported
COMBO_Supported=Supported
COMBO_Mandatory=Mandatory
COMBO_Never=Never

COMBO_NoSecurity=No Security
COMBO_Transport=Transport
COMBO_Symmetric=Symmetric 
COMBO_Asymmetric=Asymmetric 

COMBO_Profile_Transport=Transport Security (SSL)
COMBO_Profile_MsgAuthSSL=Message Authentication over SSL
COMBO_Profile_SAMLSSL=SAML Authorization over SSL
COMBO_Profile_Username=Username Authentication with Symmetric Key
COMBO_Profile_MutualCert=Mutual Certificates Security
COMBO_Profile_EndorsCert=Endorsing Certificate
COMBO_Profile_SamlSender=SAML Sender Vouches with Certificates
COMBO_Profile_SamlHolder=SAML Holder of Key 
COMBO_Profile_Kerberos=Kerberos
COMBO_Profile_STSIssued=STS Issued Token
COMBO_Profile_STSIssuedCert=STS Issued Token with Service Certificate
COMBO_Profile_STSIssuedEndorse=STS Issued Endorsing Token
COMBO_Profile_Generic=Generic

COMBO_Profile_Transport_Info=   Use plain SSL for authentication and confidentiality protection.
COMBO_Profile_MsgAuthSSL_Info=   Attach a cryptographically secured identity or authentication token with the message and use SSL for confidentiality protection.
COMBO_Profile_SAMLSSL_Info=   Attach an authorization token with the message and use SSL for confidentiality protection.
COMBO_Profile_Username_Info=   Username authentication with symmetric keys for integrity and confidentiality protection.
COMBO_Profile_MutualCert_Info=   Mutual certificates for authentication and message integrity and confidentiality protection.
COMBO_Profile_EndorsCert_Info=   Symmetric keys for integrity and confidentiality protection, and endorsing \
client certificate to augment the claims provided by the token associated with the message signature. Message integrity \
and confidentiality needs to be protected, client knows service certificate, requests need to be \
endorsed/authorized by a special identity.
COMBO_Profile_SamlSender_Info=   Mutual certificates for integrity and confidentiality with Sender Vouches SAML token for authorization.
COMBO_Profile_SamlHolder_Info=   Signed SAML assertion (issued by a trusted authority) carrying client public key and \
authorization information with integrity and confidentiality protection using mutual certificates.
COMBO_Profile_Kerberos_Info=   Authentication, message integrity and confidentiality protection using Kerberos tokens. \
Service requires a Kerberos token to be used to secure the message.
COMBO_Profile_STSIssued_Info=Token issued by a trusted STS for message integrity and confidentiality protection. \
Message integrity and confidentiality needs to be protected. The service does not trust the client directly, but instead \
trusts tokens issued by a designated STS.
COMBO_Profile_STSIssuedCert_Info=   Token issued by a trusted STS for message integrity and confidentiality protection using \
service certificate. Message integrity and confidentiality needs to be protected. Service requires the client to \
authenticate using a SAML token issued by designated STS. Confidentiality protection achieved using service certificate.
COMBO_Profile_STSIssuedEndorse_Info=   Random symmetric key for integrity and confidentiality protection, requests \
endorsed by an issued token from a designated STS. Message integrity and confidentiality protected using ephemeral \
key encrypted for the service. Service requires messages to be endorsed by a SAML Token issued by a designated STS.
COMBO_Profile_Generic_Info=User defined security mechanism.

COMBO_HttpsToken=Https
COMBO_UsernameToken=Username
COMBO_X509Token=X509
COMBO_SamlToken=Saml
COMBO_RelToken=Rel
COMBO_KerberosToken=Kerberos
COMBO_SecurityContextToken=Security Context
COMBO_SecureConversationToken=Secure Conversation
COMBO_IssuedToken=Issued
COMBO_SpNegoContextToken=Spnego Context

COMBO_SAML1010=1.0 (Profile 1.0)
COMBO_SAML1011=1.0 (Profile 1.1)
COMBO_SAML1110=1.1 (Profile 1.0)
COMBO_SAML1111=1.1 (Profile 1.1)
COMBO_SAML2011=2.0 (Profile 1.1)

COMBO_X509_V110=X509 Version 1 Profile 1.0
COMBO_X509_V310=X509 Version 3 Profile 1.0
COMBO_X509_PKCS710=X509 PKCS7 Profile 1.0
COMBO_X509_PKIPATHV110=X509 PKIPath Version 1 Profile 1.0
COMBO_X509_V111=X509 Version 1 Profile 1.1
COMBO_X509_V311=X509 Version 3 Profile 1.1
COMBO_X509_PKCS711=X509 PKCS7 Profile 1.1
COMBO_X509_PKIPATHV111=X509 PKIPath Version 1 Profile 1.1

COMBO_Kerberos=Kerberos v5 AP-REQ
COMBO_Kerberos_GSS=GSS Kerberos v5 AP-REQ

COMBO_Never=Never
COMBO_Once=Once
COMBO_AlwaysToRecipient=Always To Recipient
COMBO_Always=Always

COMBO_WSS10=1.0
COMBO_WSS11=1.1

COMBO_Basic256=Basic 256bit
COMBO_Basic192=Basic 192bit
COMBO_Basic128=Basic 128bit
COMBO_TripleDes=TripleDes
COMBO_Basic256Rsa15=Basic256Rsa15
COMBO_Basic192Rsa15=Basic192Rsa15
COMBO_Basic128Rsa15=Basic128Rsa15
COMBO_TripleDesRsa15=TripleDesRsa15
COMBO_Basic256Sha256=Basic256Sha256
COMBO_Basic192Sha256=Basic192Sha256
COMBO_Basic128Sha256=Basic128Sha256
COMBO_TripleDesSha256=TripleDesSha256
COMBO_Basic256Sha256Rsa15=Basic256Sha256Rsa15
COMBO_Basic192Sha256Rsa15=Basic192Sha256Rsa15
COMBO_Basic128Sha256Rsa15=Basic128Sha256Rsa15
COMBO_TripleDesSha256Rsa15=TripleDesSha256Rsa15

COMBO_Strict=Strict
COMBO_Lax=Lax
COMBO_LaxTsFirst=Lax (Timestamp First)
COMBO_LaxTsLast=Lax (Timestamp Last)

COMBO_AssymetricKeys=Assymetric Keys
COMBO_RandomSymmetricKeys=Random Symmetric Keys
COMBO_IssuedSymmetricKeys=Issued Symmetric Keys
COMBO_TransportProtection=Transport (SSL)

#NOI18N
COMBO_Issued_TokenType_SAML10_PolicyStr=urn:oasis:names:tc:SAML:1.0:assertion
#NOI18N
COMBO_Issued_TokenType_SAML11_PolicyStr=http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1
#NOI18N
COMBO_Issued_TokenType_SAML20_PolicyStr=urn:oasis:names:tc:SAML:2.0:assertion

COMBO_Issued_TokenType_SAML10=1.0
COMBO_Issued_TokenType_SAML11=1.1
COMBO_Issued_TokenType_SAML20=2.0

#NOI18N
COMBO_Issued_KeyType_Symmetric_PolicyStr=http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey
#NOI18N
COMBO_Issued_KeyType_Public_PolicyStr=http://schemas.xmlsoap.org/ws/2005/02/trust/PublicKey
COMBO_Issued_KeyType_Symmetric=Symmetric Key
COMBO_Issued_KeyType_Public=Public Key

COMBO_Issued_KeySize_128=128
COMBO_Issued_KeySize_192=192
COMBO_Issued_KeySize_256=256
