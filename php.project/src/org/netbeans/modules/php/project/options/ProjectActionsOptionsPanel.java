/*
 * ProjectActionsOptionsPanel.java
 *
 * Created on 14 Ноябрь 2007 г., 14:43
 */

package org.netbeans.modules.php.project.options;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author  avk
 */
public class ProjectActionsOptionsPanel extends javax.swing.JPanel {
    
    /** Creates new form ProjectActionsOptionsPanel */
    ProjectActionsOptionsPanel(ProjectActionsOptions.Controller controller) {
        myController = controller;
        initComponents();
    }
    
    @Override
    public void addNotify() {
        super.addNotify();
        //myListener = new PanelListener();
        // add listener
    }

    @Override
    public void removeNotify() {
        // remove listener
        super.removeNotify();
    }

    void cancel() {
        // do nothing
    }

    void load() {
        // load
        myRunInClBrowser.setSelected(
            ProjectActionsPreferences.getInstance().getCommandLineRunOpenInBrowser()
        );
        myRunInClOutput.setSelected(
            ProjectActionsPreferences.getInstance().getCommandLineRunPrintToOutput()
        );
    }

    void store() {
         ProjectActionsPreferences.getInstance().setCommandLineRunOpenInBrowser(
                 myRunInClBrowser.isSelected()
         );
         ProjectActionsPreferences.getInstance().setCommandLineRunPrintToOutput(
                 myRunInClOutput.isSelected()
         );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        myRunInClLbl = new javax.swing.JLabel();
        myRunInClBrowser = new javax.swing.JCheckBox();
        myRunInClOutput = new javax.swing.JCheckBox();

        myRunInClLbl.setText(org.openide.util.NbBundle.getMessage(ProjectActionsOptionsPanel.class, "ProjectActionsOptionsPanel.myRunInClLbl.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(myRunInClBrowser, org.openide.util.NbBundle.getMessage(ProjectActionsOptionsPanel.class, "LBL_RunInClBrowser_chk")); // NOI18N
        myRunInClBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myRunInClBrowserActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(myRunInClOutput, org.openide.util.NbBundle.getMessage(ProjectActionsOptionsPanel.class, "LBL_RunInClOutput_chk")); // NOI18N
        myRunInClOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myRunInClOutputActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(myRunInClLbl)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                    .add(myRunInClBrowser)
                    .add(myRunInClOutput))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(myRunInClLbl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(myRunInClBrowser)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(myRunInClOutput)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void myRunInClBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myRunInClBrowserActionPerformed
        changed();
}//GEN-LAST:event_myRunInClBrowserActionPerformed

    private void myRunInClOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myRunInClOutputActionPerformed
        changed();
}//GEN-LAST:event_myRunInClOutputActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox myRunInClBrowser;
    private javax.swing.JLabel myRunInClLbl;
    private javax.swing.JCheckBox myRunInClOutput;
    // End of variables declaration//GEN-END:variables

    private class PanelListener implements DocumentListener {

        /* (non-Javadoc)
         * @see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
         */
        public void changedUpdate(DocumentEvent e) {
            fireChange();
        }

        /* (non-Javadoc)
         * @see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
         */
        public void insertUpdate(DocumentEvent e) {
            fireChange();
        }

        /* (non-Javadoc)
         * @see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
         */
        public void removeUpdate(DocumentEvent e) {
            fireChange();
        }

        private void fireChange() {
            changed();
        }
    }

    private void changed() {
        //interpreterPathIsValid();
        myController.changed();
    }
    
    private ProjectActionsOptions.Controller myController;
    //private PanelListener myListener;
}
