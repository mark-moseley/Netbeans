/*
 *                 Sun Public License Notice
 *
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 *
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2005 Sun
 * Microsystems, Inc. All Rights Reserved.
 */
package org.netbeans.modules.collab.channel.filesharing.eventhandler;

import org.openide.*;
import org.openide.util.*;
import org.openide.windows.*;

import java.awt.*;
import java.awt.Dialog;

import org.netbeans.modules.collab.core.Debug;


/**
 *
 * @author  Todd Fast, todd.fast@sun.com
 */
public class SyncWaitPanel extends javax.swing.JPanel {
    // End of variables declaration//GEN-END:variables
    private static Dialog dialog;
    private static int referenceCount;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar progressBar;

    /**
     *
     *
     */
    public SyncWaitPanel() {
        super();
        initComponents();
    }

    /**
     *
     *
     */
    public static synchronized void showDialog() {
        referenceCount++;
        Debug.out.println("showDialog: " + referenceCount);

        if (dialog != null) {
            return;
        }

        SyncWaitPanel panel = new SyncWaitPanel();
        DialogDescriptor descriptor = new DialogDescriptor(
                panel, NbBundle.getMessage(SyncWaitPanel.class, "TITLE_SyncWaitPanel")
            ); // NOI18N

        //		final Object[] OPTIONS=new Object[] {
        //			NbBundle.getMessage(SyncWaitPanel.class,
        //				"BTN_SyncWaitPanel_Close") }; // NOI18N
        final Object[] OPTIONS = new Object[0];
        descriptor.setOptions(OPTIONS);
        descriptor.setClosingOptions(OPTIONS);
        descriptor.setModal(false);
        descriptor.setOptionsAlign(DialogDescriptor.BOTTOM_ALIGN);

        dialog = DialogDisplayer.getDefault().createDialog(descriptor);

        Frame mainWindow = WindowManager.getDefault().getMainWindow();
        int windowX = mainWindow.getX();
        int windowY = mainWindow.getY();
        int windowWidth = mainWindow.getWidth();
        int windowHeight = mainWindow.getHeight();
        int dialogWidth = dialog.getWidth();
        int dialogHeight = dialog.getHeight();
        int dialogX = (windowX + windowWidth) - dialogWidth - 50;
        int dialogY = windowY + 50;

        dialog.setLocation(dialogX, dialogY);
        dialog.setVisible(true);
    }

    /**
     *
     *
     */
    public static synchronized void hideDialog() {
        if (dialog != null) {
            if (--referenceCount <= 0) {
                Debug.out.println("hideDialog: " + referenceCount);
                referenceCount = 0;
                dialog.setVisible(false);
                dialog.dispose();
                dialog = null;
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() { //GEN-BEGIN:initComponents

        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 15, 10)));
        setMinimumSize(new java.awt.Dimension(100, 38));
        setPreferredSize(new java.awt.Dimension(250, 55));
        jLabel1.setText(
            java.util.ResourceBundle.getBundle("org/netbeans/modules/collab/channel/filesharing/eventhandler/Bundle")
                                    .getString("LBL_SyncWaitPanel_Label")
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);

        progressBar.setIndeterminate(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(progressBar, gridBagConstraints);
    } //GEN-END:initComponents
}
