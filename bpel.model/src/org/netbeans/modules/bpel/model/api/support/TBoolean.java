/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 * 
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 * 
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.0-06/22/2005 01:29 PM(ryans)-EA2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2005.09.05 at 07:05:33 PM MSD
//
package org.netbeans.modules.bpel.model.api.support;

/**
 * Java class for tBoolean.
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * <p>
 * 
 * <pre>
 *    &lt;simpleType name=&quot;tBoolean&quot;&gt;
 *      &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}string&quot;&gt;
 *        &lt;enumeration value=&quot;yes&quot;/&gt;
 *        &lt;enumeration value=&quot;no&quot;/&gt;
 *      &lt;/restriction&gt;
 *    &lt;/simpleType&gt;
 * </pre>
 */
public enum TBoolean implements EnumValue {

    NO("no"), YES("yes"), INVALID();        // NOI18N

    TBoolean() {
    }

    TBoolean( String v ) {
        value = v;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#toString()
     */
    /** {@inheritDoc} */
    public String toString() {
        return ""+value;
    }

    /*
     * (non-Javadoc)
     * 
     * @see org.netbeans.modules.soa.model.bpel.api.support.EnumValue#isInvalid()
     */
    /** {@inheritDoc} */
    public boolean isInvalid() {
        return this.equals(INVALID);
    }

    /**
     * @deprecated Method can return null value. So it means that 
     * boolean type is not appropriate type for represent this enum.
     * @return boolean representation of enumeration.
     */
    @Deprecated
    public Boolean getBoolean() {
        if (this.equals(NO)) {
            return Boolean.FALSE;
        }
        if ( this.equals(YES) ) {
            return Boolean.TRUE;
        }
        return null;
    }

    /**
     * Returns enum by its string value.
     * 
     * @param str
     *            string representation.
     * @return enum.
     */
    public static TBoolean forString( String str ) {
        if ( str== null ){
            return null;
        }
        TBoolean[] values = TBoolean.values();
        for (TBoolean value : values) {
            if (value.toString().equals(str)) {
                return value;
            }
        }
        return INVALID;
    }
    

    private String value;
}
