<?xml version="1.0"?>
<!--
The contents of this file are subject to the terms of the Common Development
and Distribution License (the License). You may not use this file except in
compliance with the License.

You can obtain a copy of the License at http://www.netbeans.org/cddl.html
or http://www.netbeans.org/cddl.txt.

When distributing Covered Code, include this CDDL Header Notice in each file
and include the License file at http://www.netbeans.org/cddl.txt.
If applicable, add the following below the CDDL Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="jspsyntax/test-qa-functional" basedir="." default="all">

    <!-- Imports default qa-functional-compiler and runidetest executor.
        jemmy and jellytools jars are on classpath for both. -->
    <import file="../../../nbbuild/templates/xtest-qa-functional.xml"/>

    <!-- ignore jdk1.5 check -->
    <property name="permit.jdk6.builds" value="true"/>

    <!-- Adds property to IDE command line: suppress scanning of classpath -->
    <!--property name="xtest.ide.commandline.suffix" value="-J-Dnetbeans.javacore.noscan=true"/-->

    <!-- Creates an empty Java project in IDE -->
    <!-- <property name="xtest.ide.create.project" value="true"/> -->
    <!-- Opens project at specified location -->
    <!--property name="xtest.ide.open.project" location="${xtest.data}/SampleProject"/-->

    <!--property name="xtest.ide.exit" value="false"/-->

    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->
    <target name="build-languages-lib">
        <echo> BUILDING LANGUAGES LIB </echo>
	<java classname="org.apache.tools.ant.Main" dir="../../../languages/test" failonerror="true" fork="true">
          <jvmarg value="-Dant.home=${ant.home}"/>
          <arg value="buildtests"/>
          <arg value="-Dxtest.testtype=qa-functional"/>
          <arg value="-Dxtest.attribs=stable"/>
          <arg value="-Dxtest.home=${xtest.home}"/>
          <arg value="-Dnetbeans.dest.dir=${netbeans.dest.dir}"/>
	  <classpath path="${java.class.path}"/>
        </java>
    </target>
    
    <!-- You can override default qa-functional-compiler if you need something special -->
    <target name="qa-functional-compiler" depends="build-jellytools,build-languages-lib">
        <!-- Build tests but don't build module sources. -->
        <ant dir=".." target="do-test-build-qa-functional" />
        <packageTests/>
    </target>
    
    <!-- ========= -->
    <!-- Executors -->
    <!-- ========= -->
    
    <!-- This target executes tests inside IDE. It is defined in default-build-qa-functional.xml.
         If you need to customize it, you can uncomment the following and override it.-->
    <target name="runidetest-debug">        
        <property name="xtest.debug.port" value="1111"/>
	<property name="xtest.debug.suspend" value="true"/>
	<executeTests  pluginName="ide">
            <classpath>
                <path refid="jemmy.and.jelly.path"/>  
            </classpath>
        </executeTests>
    </target>
    
    <target name="runidetest_with_appserver" depends="init,check-appserver">
        <antcall target="runidetest">
            <param name="xtest.ide.commandline.suffix" value="-J-Dcom.sun.aas.installRoot=&quot;${j2ee.appserver.path}&quot;"/>
        </antcall>
    </target>
    
    <target name="check-appserver" depends="set-appserver-path">
        <available file="${j2ee.appserver.path}/domains/domain1" property="j2ee.appserver.present"/>
        <fail unless="j2ee.appserver.present" message="AppServer was not found in ${j2ee.appserver.path}. Set property j2ee.appserver.path to point to AppServer installation directory."/>
    </target>
    
    <target name="set-appserver-path" unless="j2ee.appserver.path">
        <condition property="j2ee.appserver.path" value="e:\\space\\AppServer">
            <os family="windows"/>
        </condition>
        <condition property="j2ee.appserver.path" value="/space/appserver">
            <os family="unix"/>
        </condition>
    </target>    
    
    
</project>

