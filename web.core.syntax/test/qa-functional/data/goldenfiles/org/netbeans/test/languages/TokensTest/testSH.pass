COMMENT:#!/bin/bash

KEYWORD:while
WHITESPACE: 
OPERATOR:[
WHITESPACE: 
OPERATOR:$
COMMENT:# -gt 0 ]; do    # Until you run out of parameters . . .

WHITESPACE:  
KEYWORD:case
WHITESPACE: 
STRING:"$1"
WHITESPACE: 
IDENTIFIER:in
WHITESPACE:
    
OPERATOR:-
IDENTIFIER:d
OPERATOR:|
OPERATOR:-
OPERATOR:-
IDENTIFIER:debug
OPERATOR:)
WHITESPACE:
              
COMMENT:# "-d" or "--debug" parameter?

WHITESPACE:              
IDENTIFIER:DEBUG
OPERATOR:=
NUMBER:1
WHITESPACE:
              
OPERATOR:;
OPERATOR:;
WHITESPACE:
    
OPERATOR:-
IDENTIFIER:c
OPERATOR:|
OPERATOR:-
OPERATOR:-
IDENTIFIER:conf
OPERATOR:)
WHITESPACE:
              
IDENTIFIER:CONFFILE
OPERATOR:=
STRING:"$2"
WHITESPACE:
              
KEYWORD:shift
WHITESPACE:
              
KEYWORD:if
WHITESPACE: 
OPERATOR:[
WHITESPACE: 
OPERATOR:!
WHITESPACE: 
OPERATOR:-
IDENTIFIER:f
WHITESPACE: 
OPERATOR:$
IDENTIFIER:CONFFILE
WHITESPACE: 
OPERATOR:]
OPERATOR:;
WHITESPACE: 
KEYWORD:then
WHITESPACE:
                
COMMAND:echo
WHITESPACE: 
STRING:"Error: Supplied file doesn't exist!"
WHITESPACE:
                
KEYWORD:exit
WHITESPACE: 
NUMBER:1
WHITESPACE:     
COMMENT:# File not found error.

WHITESPACE:              
KEYWORD:fi
WHITESPACE:
              
OPERATOR:;
OPERATOR:;
WHITESPACE:
  
KEYWORD:esac
WHITESPACE:
  
KEYWORD:shift
WHITESPACE:       
COMMENT:# Check next set of parameters.

KEYWORD:done
WHITESPACE:


IDENTIFIER:func1
OPERATOR:(
OPERATOR:)
WHITESPACE:

OPERATOR:{
WHITESPACE: 
COMMENT:# This is simple function :)

WHITESPACE:  
COMMAND:echo
WHITESPACE: 
STRING:"This is simple function."
WHITESPACE:

OPERATOR:}
WHITESPACE: 
COMMENT:# Function declaration must precede call.

WHITESPACE:

KEYWORD:function
WHITESPACE: 
IDENTIFIER:func2
OPERATOR:(
OPERATOR:)
WHITESPACE:

OPERATOR:{
WHITESPACE:
  
COMMAND:echo
WHITESPACE: 
STRING:"This is another simple function."
WHITESPACE:

OPERATOR:}
WHITESPACE:



IDENTIFIER:func1
WHITESPACE:

IDENTIFIER:func2
WHITESPACE:


OPERATOR:(
OPERATOR:(
WHITESPACE: 
NUMBER:5
WHITESPACE: 
OPERATOR:>
WHITESPACE: 
NUMBER:4
WHITESPACE: 
OPERATOR:)
OPERATOR:)
WHITESPACE:                                      
COMMENT:# true

COMMAND:echo
WHITESPACE: 
STRING:"Exit status of \"(( 5 > 4 ))\" is $?."
WHITESPACE:     
COMMENT:# 0

WHITESPACE:

IDENTIFIER:MAX
OPERATOR:=
NUMBER:10000
WHITESPACE:

KEYWORD:for
WHITESPACE: 
OPERATOR:(
OPERATOR:(
IDENTIFIER:nr
OPERATOR:=
NUMBER:1
OPERATOR:;
WHITESPACE: 
IDENTIFIER:nr
OPERATOR:<
OPERATOR:$
IDENTIFIER:MAX
OPERATOR:;
WHITESPACE: 
IDENTIFIER:nr
OPERATOR:+
OPERATOR:+
OPERATOR:)
OPERATOR:)
WHITESPACE:

KEYWORD:do
WHITESPACE:

    
KEYWORD:let
WHITESPACE: 
STRING:"t1 = nr % 5"
WHITESPACE:
    
KEYWORD:if
WHITESPACE: 
OPERATOR:[
WHITESPACE: 
STRING:"$t1"
WHITESPACE: 
OPERATOR:-
IDENTIFIER:ne
WHITESPACE: 
NUMBER:3
WHITESPACE: 
OPERATOR:]
OPERATOR:;
KEYWORD:then
WHITESPACE:
      
KEYWORD:continue
WHITESPACE:
    
KEYWORD:fi
WHITESPACE:

    
KEYWORD:let
WHITESPACE: 
STRING:"t2 = nr % 7"
WHITESPACE:
    
KEYWORD:if
WHITESPACE: 
OPERATOR:[
WHITESPACE: 
STRING:"$t2"
WHITESPACE: 
OPERATOR:-
IDENTIFIER:ne
WHITESPACE: 
NUMBER:4
WHITESPACE: 
OPERATOR:]
WHITESPACE:
    
KEYWORD:then
WHITESPACE:
      
KEYWORD:continue
WHITESPACE:
    
KEYWORD:fi
WHITESPACE:

    
KEYWORD:let
WHITESPACE: 
STRING:"t3 = nr % 9"
WHITESPACE:
    
KEYWORD:if
WHITESPACE: 
OPERATOR:[
WHITESPACE: 
STRING:"$t3"
WHITESPACE: 
OPERATOR:-
IDENTIFIER:ne
WHITESPACE: 
NUMBER:5
WHITESPACE: 
OPERATOR:]
WHITESPACE:
    
KEYWORD:then
WHITESPACE:
      
KEYWORD:continue
WHITESPACE:
    
KEYWORD:fi
WHITESPACE:


KEYWORD:done
WHITESPACE:

COMMAND:echo
WHITESPACE: 
STRING:"Number = $nr"
WHITESPACE:



KEYWORD:exit
WHITESPACE: 
NUMBER:0
WHITESPACE:



