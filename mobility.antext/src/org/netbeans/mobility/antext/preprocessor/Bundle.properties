# The contents of this file are subject to the terms of the Common Development
# and Distribution License (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html
# or http://www.netbeans.org/cddl.txt.
#
# When distributing Covered Code, include this CDDL Header Notice in each file
# and include the License file at http://www.netbeans.org/cddl.txt.
# If applicable, add the following below the CDDL Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.



###############################
#Global resources found in the package: ./ant-ext/src/org/netbeans/mobility/antext/preprocessor
###############################
ERR_missing_old_expression=expression expected (abilities delimited by comma)
ERR_missing_enclosing_statement=enclosing statement expected
ERR_missing_ability=ability expected
ERR_expression_error=error in the expression
ERR_missing_expression=expression expected
ERR_missing_right_bracket=right bracket expected
WARN_undefined_ability=the ability is not defined, using empty string

###############################
#Resources found in the file: LineParser.java
###############################
ERR_condition_outside=condition used other then at the first line
ERR_missing_assigment_value=assigment value expected
ERR_unknown_directive=unknown preprocessor directive
ERR_unknown_syntax_error=unknown syntax error
ERR_old_expression_error=error in the expression (abilities delimited by comma only)
ERR_unfinished_string=unfinished string
ERR_invalid_argument=unexpected argument
WARN_undefined_ability_value=the ability does not have defined value, using empty string
WARN_comparing_string_and_number=the number is compared with the string lexicographically
WARN_comparing_string_ability_and_number=the ability contains string value so it is compared with the number lexicographically

###############################
#Resources found in the file: CommentingPreProcessor.java
###############################
ERR_redundant_endif=//#endif without preceding //#if or //#ifdef or //#ifndef
ERR_redundant_old_block_end=old block end without preceding block start
ERR_redundant_else=//#else without preceding //#if or //#ifdef or //#ifndef
ERR_redundant_enddebug=//#enddebug without preceding //#debug
ERR_unterminated_block=unterminated block

###############################
#Resources found in the file: PPLine.java
###############################

#{0} - line number, {1} - error message, {2} - line text, {3} - error token mark
FMT_ERROR_OUTPUT={0}:Error:{1}\n{2}\n{3}
FMT_WARNING_OUTPUT={0}:Warning:{1}\n{2}\n{3}
