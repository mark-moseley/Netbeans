# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

rendPropShortDesc=An override for the rendered attribute associated with our component
idPropShortDesc=The component identifier for the associated component
itemsParenVal=items (value)
getMetaDataException=ResultSet.getMetaData() threw an exception.  This is likely due to an issue with database connectivity.  Check to see if the database is running.

UIComponent_attributes_Description=A mutable Map of the attributes associated with this component, keyed by attribute name.
UIComponent_attributes_DisplayName=Attributes Map
UIComponent_childCount_Description=The number of child components associated with this component.
UIComponent_childCount_DisplayName=Child Component Count
UIComponent_children_Description=A mutable List of the child components associated with this component.
UIComponent_children_DisplayName=Child Component List
UIComponent_facets_Description=A mutable Map of the facets associated with this component, keyed by facet name.
UIComponent_facets_DisplayName=Facets Map
UIComponent_family_Description=The component family to which this component belongs. This property is used to select an appropriate Renderer.
UIComponent_family_DisplayName=Component Family
UIComponent_id_Description=The component identifier for this component. This value must be unique within the closest parent component that is a naming container.
UIComponent_id_DisplayName=Component Identifier
UIComponent_parent_Description=The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.
UIComponent_parent_DisplayName=Parent Component
UIComponent_rendered_Description=Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit.
UIComponent_rendered_DisplayName=Rendered Flag
UIComponent_rendererType_Description=Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.
UIComponent_rendererType_DisplayName=Renderer Type
UIComponent_rendersChildren_Description=Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.
UIComponent_rendersChildren_DisplayName=Renders Children

UICommand_actionListener_Description=MethodBinding representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void.
UICommand_actionListener_DisplayName=Action Listener
UICommand_actionExpression_Description=MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a either a String or a public method that takes no parameters, and returns a String (the logical outcome) which is passed to the NavigationHandler for this application.
UICommand_actionExpression_DisplayName=Application Action
UICommand_immediate_Description=Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.
UICommand_immediate_DisplayName=Immediate Action
UICommand_value_Description=The current value of this component.
UICommand_value_DisplayName=Value
UICommand_actionHandler=\n        // TODO: Process the button click action. Return value is a navigation\n        // case name where null will return to the same page.

UIData_first_Description=Zero-relative row number of the first row to be displayed. If this property is set to zero, rendering will begin with the first row of the underlying data.
UIData_first_DisplayName=First Row Index
UIData_rowAvailable_Description=Flag indicating whether there is model data available for the row selected by the current value of the "rowIndex" property.
UIData_rowAvailable_DisplayName=Row Available Flag
UIData_rowCount_Description=The number of rows of model data that are available for processing by this component. If the number of rows is unknown, this property will be set to -1.
UIData_rowCount_DisplayName=Row Count
UIData_rowData_Description=An object representing the model data for the row selected by the current value of the "rowIndex" property.
UIData_rowData_DisplayName=Row Data
UIData_rowIndex_Description=Zero-relative index of the currently selected row from the underlying model data. No error will occur if this property is set to point at a row for which no model data exists. To ensure data availability, check the state of the "rowAvailable" property after modifying this property.
UIData_rowIndex_DisplayName=Row Index
UIData_rows_Description=The number of rows to display, starting with the one identified by the "first" property. If this value is set to zero, all available rows in the underlying data model will be displayed.
UIData_rows_DisplayName=Rows To Display
UIData_value_Description=The current value of this component.
UIData_value_DisplayName=Value
UIData_var_Description=Name of a request-scope attribute under which the model data for the row selected by the current value of the "rowIndex" property (i.e. also the current value of the "rowData" property) will be exposed.
UIData_var_DisplayName=Row Data Attribute

UIGraphic_url_Description=Context-relative URL to retrieve the resource associated with this component. This is an alias for the "value" property.
UIGraphic_url_DisplayName=Source URL
UIGraphic_value_Description=The current path or URL to the image of this component.
UIGraphic_value_DisplayName=Value

UIInput_immediate_Description=Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.
UIInput_immediate_DisplayName=Immediate Action
UIInput_localValueSet_Description=Flag indicating whether the "localValue" property of this component has been set. This property is reset automatically when the "value" propertyis set.
UIInput_localValueSet_DisplayName=Local Value Set
UIInput_required_Description=Flag indicating that the user is required to provide a submitted value for this input component.
UIInput_required_DisplayName=Required Flag
UIInput_submittedValue_Description=The value submitted for this input component by the user, prior to any required conversion or validation.
UIInput_submittedValue_DisplayName=Submitted Value
UIInput_validator_Description=MethodBinding representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.
UIInput_validator_DisplayName=Validator
UIInput_valueChangeListener_Description=MethodBinding representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a ValueChangeEvent parameter, with a return type of void.
UIInput_valueChangeListener_DisplayName=Value Change Listener
UIInput_validateHandler=\n        // TODO: Check the value parameter here, and if not valid, do something like this:\n        // throw new ValidatorException(new FacesMessage(\"Not a valid value!\"));

UIMessage_for_Description=Client identifier of the component for which to display messages.
UIMessage_for_DisplayName=Associated Client Id
UIMessage_showDetail_Description=Flag indicating whether the detail portion of displayed messages should be included. Default value is "false".
UIMessage_showDetail_DisplayName=Show Detail
UIMessage_showSummary_Description=Flag indicating whether the summary portion of displayed messages should be included. Default value is "true".
UIMessage_showSummary_DisplayName=Show Summary

UIMessages_globalOnly_Description=Flag indicating that only global messages (that is, messages not associated with any client identifier) are to be displayed. Default value is "false".
UIMessages_globalOnly_DisplayName=Global Only
UIMessages_showDetail_Description=Flag indicating whether the detail portion of displayed messages should be included. Default value is "false".
UIMessages_showDetail_DisplayName=Show Detail
UIMessages_showSummary_Description=Flag indicating whether the summary portion of displayed messages should be included. Default value is "true".
UIMessages_showSummary_DisplayName=Show Summary

UIOutput_converter_Description=Converter instance registered with this component.
UIOutput_converter_DisplayName=Converter
UIOutput_localValue_Description=For output components, this is the same as the "value" property. For input components, this is the most recently user-entered value, which will be pushed to the application data model during Update Model Values phase, if a value binding is present for the "value" property.
UIOutput_localValue_DisplayName=Local Value
UIOutput_value_Description=The current value of this component.
UIOutput_value_DisplayName=Value

UIParameter_DisplayName=Parameter
UIParameter_Description=A named value for parameterizing text and link components
