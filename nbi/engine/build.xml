<?xml version="1.0" encoding="UTF-8"?>
<!--
The contents of this file are subject to the terms of the Common Development
and Distribution License (the License). You may not use this file except in
compliance with the License.

You can obtain a copy of the License at http://www.netbeans.org/cddl.html
or http://www.netbeans.org/cddl.txt.

When distributing Covered Code, include this CDDL Header Notice in each file
and include the License file at http://www.netbeans.org/cddl.txt.
If applicable, add the following below the CDDL Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.

$Id$
-->
<project name="NetBeans_Installer_Engine" default="default" basedir=".">
    <property file="build.properties"/>
    
    <import file="nbproject/build-impl.xml"/>
    <import file="nbproject/profiler-build-impl.xml"/>
    
    <!-- =======================================================================
        Target overrides
    ======================================================================== -->
    <target name="-post-clean" depends="native-clean"/>
    <target name="-pre-jar" depends="native-build,copy-launchers,create-jar-contents-list"/>
    
    <!-- =======================================================================
        NetBeans Installer engine specific targets
    ======================================================================== -->
    <target name="native-init" depends="define-platform,init-platform">
        <property file="nbproject/project.properties"/>
    </target>
    
    <target name="native-clean" depends="native-init" unless="ignore.native">
        <exec executable="make" dir="${native.dir}">
            <arg value="clean"/>
        </exec>    
    </target>    
    
    <target name="native-compile" depends="native-init,native-clean" unless="ignore.native">
        <exec executable="make" dir="${native.dir}">
            <arg value="build"/>
        </exec>
    </target>
    
    <target name="native-build" depends="native-init,native-compile">
        <copy file="${native.dir.windows}/${native.dist.dir}/${native.file.windows}" todir="${build.classes.dir}/${native.dirname}"/>
        <copy file="${native.dir.linux}/${native.dist.dir}/${native.file.linux}" todir="${build.classes.dir}/${native.dirname}"/>
        <copy file="${native.dir.solaris-x86}/${native.dist.dir}/${native.file.solaris-x86}" todir="${build.classes.dir}/${native.dirname}"/>
        <copy file="${native.dir.solaris-sparc}/${native.dist.dir}/${native.file.solaris-sparc}" todir="${build.classes.dir}/${native.dirname}"/>
        <copy file="${native.dir.macosx}/${native.dist.dir}/${native.file.macosx}" todir="${build.classes.dir}/${native.dirname}"/>
    </target>
    
    <target name="define-platform">
        <condition property="is.windows">
            <os family="windows"/>
        </condition>
        <condition property="is.linux">
            <os name="Linux"/>
        </condition>
        <condition property="is.solaris-x86">
            <os name="SunOS" arch="x86"/>
        </condition>
        <condition property="is.solaris-sparc">
            <os name="SunOS" arch="sparc"/>
        </condition>
        <condition property="is.macosx">
            <and>
                <os family="mac"/>
                <os family="unix"/>
            </and>
        </condition>
    </target>
    
    <target name="init-platform" depends="init-windows,init-linux,init-solaris-x86,init-solaris-sparc,init-macosx"/>
    
    <target name="init-windows" if="is.windows">
        <property name="native.dir" value="${native.dir.windows}"/>
        <property name="native.file" value="${native.file.windows}"/>
    </target>
    <target name="init-linux" if="is.linux">
        <property name="native.dir" value="${native.dir.linux}"/>
        <property name="native.file" value="${native.file.linux}"/>
    </target>
    <target name="init-solaris-x86" if="is.solaris-x86">
        <property name="native.dir" value="${native.dir.solaris-x86}"/>
        <property name="native.file" value="${native.file.solaris-x86}"/>
    </target>
    <target name="init-solaris-sparc" if="is.solaris-sparc">
        <property name="native.dir" value="${native.dir.solaris-sparc}"/>
        <property name="native.file" value="${native.file.solaris-sparc}"/>
    </target>
    <target name="init-macosx" if="is.macosx">
        <property name="native.dir" value="${native.dir.macosx}"/>
        <property name="native.file" value="${native.file.macosx}"/>
    </target>
    
    <target name="init-custom-tasks" depends="build-custom-tasks">
        
        <taskdef 
            name="write-jar-content-list" 
            classname="org.netbeans.installer.infra.build.ant.WriteFileList" 
            classpath="${custom.tasks.cls}"/>
    </target>
    
    <target name="build-custom-tasks" unless="skip.build.custom.tasks">
        <delete dir="${custom.tasks.cls}"/>
        <mkdir dir="${custom.tasks.cls}"/>
        
        <javac 
            srcdir="${custom.tasks.src}" 
            destdir="${custom.tasks.cls}" 
            debug="true" 
            classpath="${javac.classpath.ant}"/>
    </target>
    
    
    <target name="create-jar-contents-list" depends="init-custom-tasks">
        <write-jar-content-list 
            dir="${basedir}/${build.classes.dir}" 
            output="${basedir}/${build.classes.dir}/${jar.contents.list}"
            mask="(?!^data/).*"/>                                
    </target>

    <target name="copy-launchers" >

        <mkdir dir="${basedir}/${build.classes.dir}/${native.launcher.windows.stub.dst.dir}"/>

        <!-- copy windows launcher stub -->
	<copy file="${basedir}/${native.launcher.windows.stub.src}" 
              todir="${basedir}/${build.classes.dir}/${native.launcher.windows.stub.dst.dir}"/>

        <!-- copy windows launcher i18n messages -->
        <copy  todir="${basedir}/${build.classes.dir}/${native.launcher.windows.i18n.dir}">
            <fileset dir="${native.launcher.windows.i18n.dir}">
                <include name="*"/>
             </fileset>
       </copy>

    </target>

</project>
