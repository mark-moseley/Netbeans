<?xml version="1.0" encoding="UTF-8"?>
<!-- ===========================================================================
  The contents of this file are subject to the terms of the Common Development
  and Distribution License (the License). You may not use this file except in
  compliance with the License.
  
  You can obtain a copy of the License at http://www.netbeans.org/cddl.html
  or http://www.netbeans.org/cddl.txt.
  
  When distributing Covered Code, include this CDDL Header Notice in each file
  and include the License file at http://www.netbeans.org/cddl.txt.
  If applicable, add the following below the CDDL Header, with the fields
  enclosed by brackets [] replaced by your own identifying information:
  "Portions Copyrighted [year] [name of copyright owner]"
  
  The Original Software is NetBeans. The Initial Developer of the Original
  Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
  Microsystems, Inc. All Rights Reserved.
  
  $Id$
============================================================================ -->

<!--
  This is the base script for building, packaging and releasing nbi group 
  packages. It is meant to be imported into individual group build scripts, 
  which define the essential group-specific properties, which, in their turn, 
  are referenced throughout this script.
-->
<project name="build-group" default="usage" basedir=".">
    <!-- import the most common properties -->
    <property file="${common.dir}/common.properties"/>
    
    <!-- import the properties common among all group build scripts -->
    <property file="${common.dir}/group.properties"/>
    
    <!-- import the common target library -->
    <import file="${common.dir}/common.xml" optional="false"/>
    
    <!-- define an aggregating target for cleaning and building groups -->
    <target name="build-all" depends="init,clean,build"/>
    
    <!-- define an aggregating target for cleaning, building and 
         publishing groups -->
    <target name="release-all" depends="build-all,release"/>
    
    <!--
      Initialization. Initialization for groups is no different from the
      base intiialization routine, thus the only thing this target does is 
      falling back to the common initialization procedure.
    -->
    <target name="init" depends="-init"/>
    
    <!--
      Clean-up. The clean-up procedure for groups is almost the same as the
      base one. The only additional action here is to remove the distributive 
      file.
    -->
    <target name="clean" depends="init,-clean">
        <delete file="${dist.dir}/${group.jar.file}"/>
    </target>
    
    
    <target name="build" depends="init,-checkout,-pre-build,-build,-post-build"/>
    
    <!--
      This is a hook target. Individual group build scripts may override it in
      order to add some custom logic which will be executed prior to building 
      the group package.
    -->
    <target name="-pre-build"/>
    
    <target name="-build"/>
        <!-- substitute the params in group's source tree (normally that would
             consist only of the icon and the localizing bundle -->
        <for-each from="1" to="${group.params.length}" property="i">
            <set property="current.token" 
                          source="group.params.${i}.token"/>
            <set property="current.value" 
                          source="group.params.${i}.value"/>
            
            <replace dir="${cvs.dir}" 
                     token="${current.token}" 
                     value="${current.value}"/>
        </for-each>
        
        <!-- copy the group's icon to the soon-to-be package directory 
             structure and calculate some metadata for it -->
        <copy file="${group.icon}" 
              tofile="${work.dir}/${group.icon.file}"/>
        <sizeof file="${work.dir}/${group.icon.file}" 
                property="group.icon.size"/>
        <md5 file="${work.dir}/${group.icon.file}" 
             property="group.icon.md5"/>
        
        <!-- load the group's localizing bundle and store the locales list to 
             ${group.locales.list} -->
        <load-locales basename="${group.bundle}" list="group.locales.list"/>
        
        <!-- generate the group package descriptor -->
        <group-descriptor file="${work.dir}/${group.descriptor.file}"/>
        
        <!-- create the package manifest file -->
        <echo file="${work.dir}/${group.jar.manifest.file}" 
              message="Manifest-Version: 1.0${nl}" 
              append="false"/>
        <echo file="${work.dir}/${group.jar.manifest.file}" 
              message="Package-Descriptor: ${group.descriptor.file}${nl}" 
              append="true"/>
        
        <!-- create the package jar file and sign it -->
        <jar destfile="${work.dir}/${group.jar.file}" 
             compress="true" 
             manifest="${work.dir}/${group.jar.manifest.file}">
            <fileset dir="${work.dir}">
                <include name="${group.dir}"/>
                <include name="${group.dir}/**"/>
                <include name="${group.descriptor.file}"/>
            </fileset>
        </jar>
        <signjar jar="${work.dir}/${group.jar.file}" 
                 keystore="${jarsigner.keystore}"
                 storepass="${jarsigner.storepass}"
                 alias="${jarsigner.alias}"
                 maxmemory="${jarsigner.xmx}"/>
        
        <!-- move the distributive to the distributives directory -->
        <move file="${work.dir}/${group.jar.file}" 
              todir="${dist.dir}"/>
    </target>
    
    <target name="release" depends="init,build">
        <update-group url="${release.url}"
                      registry="${release.registry}"
                      uid="${release.parent.uid}"
                      version="${release.parent.version}"
                      archive="${dist.dir}/${group.jar.file}"/>
    </target>
    
    <!-- =======================================================================
        Default Target
    ======================================================================== -->
    
    <!--
      The default target. Does not do anything useful, except depicting the 
      usage scenario for the script.
    -->
    <target name="usage">
        <echo>
            This script is a base script for building NBI group packages. It is
            not intended to be used directly.
        </echo>
    </target>
</project>
