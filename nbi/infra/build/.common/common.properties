################################################################################
# The contents of this file are subject to the terms of the Common Development
# and Distribution License (the License). You may not use this file except in
# compliance with the License.
# 
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html
# or http://www.netbeans.org/cddl.txt.
# 
# When distributing Covered Code, include this CDDL Header Notice in each file
# and include the License file at http://www.netbeans.org/cddl.txt.
# If applicable, add the following below the CDDL Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
# 
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
# 
# $Id$
# 

################################################################################
# Initialization. Properties that are used during build script initialization.

# location of the custom tasks' sources and the destination directory for their 
# build
custom.tasks.src=${common.dir}/../.ant-lib/src
custom.tasks.cls=${basedir}/.ant-lib

################################################################################
# Check-out. Properties that are used during check-out.

# coordinates of the project's sources within the cvs repository
# * ${cvs.root} - obvious
# * ${cvs.branch} - the branch from which the sources should be checked out; if
#   this property is empty, then the sources will be checked out from trunk
# * ${cvs.module} - the module that should be checked out; at this point the
#   build framework is not compatible with modules which alias several other
#   modules
cvs.root=:pserver:anoncvs@netbeans.org:/cvs
cvs.branch=
cvs.module=nbi

# simple shorthands for various directories
# * ${cvs.module.dir} - path to the root of the cvs module
# * ${cvs.dir} - path to the current project's sources root
cvs.module.dir=${work.dir}/${cvs.module}
cvs.dir=${cvs.module.dir}/${cvs.path}

# whether to check out sources, or copy them from the location specified in 
# ${sources.dir}; 'true'/'false'
checkout.sources=true

# location of the already checked-out sources; if ${checkout.sources} is set to 
# 'false' the sources will be copied from this location instead of being 
# fetched from the repository
sources.dir=

################################################################################
# NB Projects. Properties related to cleaning/building netbeans projects.

# whether to build the netbeans part of the project or not; 'true'/'false'
build.nbproject=true

# path to the netbeans project that should be built; relative to the 
# ${cvs.dir}
nbproject.path=.

# names of targets in component's (or engine's) build script that will be 
# called as part of the build process
# * ${nb.target.clean} - will be called when cleaning the netbeans project
# * ${nb.target.build} - will be called when building the netbeans project
nb.target.clean=clean
nb.target.build=jar

# additional properties which will be passed to the netbeans project build 
# script
# * ${nb.platform.home} - location of the jdk codenamed "JDK 1.5", this jdk
#   is expected to be used by all netbeans projects
# * ${nb.ignore.native} - tells the netbeans project's build script to skip
#   building native components, if it is able to do so - these will be built
#   as part of the project's global build script
# * ${nb.no.dependencies} - tells the netbeans project's build script to skip
#   building its dependencies, the dependencies are expected to be built by the
#   project's global build script
# * ${nb.skip.build.custom.tasks} - tells the netbeans project's build script 
#   to skip building custom tasks for it, as they will already be built by the
#   global script
# * ${nb.custom.tasks.cls} - points the netbeans project's build script to the 
#   location of the built custom tasks
nb.platform.home=-Dplatforms.JDK_1.5.home=${java.home}/..
nb.ignore.native=-Dignore.native=true
nb.no.dependencies=-Dno.dependencies=true
nb.skip.build.custom.tasks=-Dskip.build.custom.tasks=true
nb.custom.tasks.cls=-Dcustom.tasks.cls=${custom.tasks.cls}

# name of the distributives directory for the netbeans project; in fact this is 
# a path, which is relative to ${nbproject.path}
nb.dist.dir.name=dist

################################################################################
# Native. Properties related to cleaning/building native components.

# whether to build native components or not; 'true'/'false'
build.native=true

# name of the directory where the sources for the native components reside, 
# relative to the ${cvs.dir}
native.path=native

# list of platforms for which the native components should be built; the list 
# should be space-separated
native.platforms=windows linux solaris-x86 solaris-sparc macosx

# directory on the remote machine where the build script should operate
remote.work.dir=~/.nbi-build-sandbox

# ssh properties: executable name, set of arguments and the command.
# * ${remote.host}, ${remote.port} and ${remote.user} are platform specific and
#   are defined elsewhere
ssh.executable=ssh
ssh.arguments=-l ${remote.user} -p ${remote.port} ${remote.host}
ssh.command=mkdir ${remote.work.dir}; \
            cd ${remote.work.dir}; \
            rm -rf ${cvs.module}; \
            cvs -d ${cvs.root} co -P ${cvs.module}/${cvs.path}/${native.path}; \
            cd ${cvs.module}/${cvs.path}/${native.path}/${platform}; \
            make;

# scp properties: executable name, set of arguments, remote directory, local 
# directory
# * ${remote.host}, ${remote.port} and ${remote.user} are platform specific and
#   are defined elsewhere
# * name of the file to copy is platform specific and is defined elsewhere
# * ${platform} will be defined at runtime, as these commands will be executed 
#   in loop over the list of platforms
scp.executable=scp
scp.arguments=-P ${remote.port}
scp.remote.dir=${remote.user}@${remote.host}:${remote.work.dir}/${cvs.module}/${cvs.path}/${native.path}/${platform}/dist
scp.local.dir=${work.dir}/${cvs.module}/${cvs.path}/${native.path}/${platform}/${nb.dist.dir.name}

################################################################################
# Miscellaneous. Properties that are used elsewhere.

# these properties control the environment for the jarsigner process
# * ${jarsigner.xmx} - max heap size for the jarsigner process
jarsigner.xmx=1024m

# these properties control the environment for the pack200 and unpack200 
# processes
# * ${pack200.xmx} - -Xmx jvm argument value
# * ${pack200.perm.size} - -XX:PermSize jvm argument value
# * ${pack200.max.perm.size} - -XX:MaxPermSize jvm argument value
pack200.xmx=768m
pack200.perm.size=32m
pack200.max.perm.size=512m
