# local working directory - it is meant to be overriden from command line
work.dir=../../../../../temp

# temporary directory - is used to contain something that cannot be cleaned up
# e.g. custom ant tasks
temp.dir=${java.io.tmpdir}

# location of custom tasks (and other utilities used in build process) sources
# and the destination directory for their build
lib.src=${basedir}/../.ant-lib/src
lib.cls=${temp.dir}/.ant-lib/build/classes

# cvs coordinates of the sources we're interested in building: root, branch and
# module. if ${cvs.branch} is empty then sources will be checked out from trunk
cvs.root=:pserver:anoncvs@cvsnetbeansorg.sfbay.sun.com:/cvs
cvs.branch=
cvs.module=nbi

# names of targets in component's (or engine's) build script that will be 
# called as part of the build process
nb.target.clean=clean
nb.target.build=jar

# whether to build anything native or not (true|false), defaults to true
has.native=true

# native directory name - directory where the component's (or engine's) native 
# libraries' sources reside
native.dir=native

# distributive directory name - the directory where the compiled files (.jar, 
# .dll, .so, .dylib, and so on) reside
dist.dir.name=dist

# this property (name => value) will be passed to the component's (or engine's)
# build script, telling it where the java platform resides
nb.platform.home.name=platforms.JDK_1.5.home
nb.platform.home.value=${java.home}/..

# this property (name => value) will be passed to the component's (or engine's)
# build script, telling it not to build native library for the current 
# platform, as we've done this already
nb.ignore.native.name=ignore.native
nb.ignore.native.value=true

# this property (name => value) will be passed to the component's (or engine's)
# build script, telling it not to re-build projects they depend on, since we
# should have already done this
nb.no.dependencies.name=no.dependencies
nb.no.dependencies.value=true