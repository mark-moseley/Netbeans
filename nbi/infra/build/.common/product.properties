# these properties control several things: if ${build.native} is set to
# true - the native libraries will be built for the platforms specified in 
# ${platforms}
build.native=false
platforms=linux solaris-x86 solaris-sparc windows macosx

# whether to build engine or not ("true"/"false") and whether to build engine's 
# native libraries or not ("true"/"false")
build.engine=true

# various properties controlling the engine's build behavior, for their 
# descriptions see the engine's build.properties file
engine.basedir=${.common.dir}/../engine
engine..common.dir=${.common.dir}
engine.build.native=false
engine.work.dir=${basedir}/${work.dir}
engine.move.to.dist=false

# various paths and file names that will be used for packaging the 
# product
product.dir=${product.uid}/${product.version}/${product.platforms}
product.logic.dir=${product.dir}/logic
product.data.dir=${product.dir}/data
product.icon.file=${product.dir}/icon.png
product.descriptor.file=${product.uid},${product.version},${product.platforms}.xml
product.jar.file=${product.uid},${product.version},${product.platforms}.jar
product.jar.manifest.file=${product.uid},${product.version},${product.platforms}.mf

product.logic.file=logic,${i}.jar
product.data.file=data,${i}.jar

product.release.data.file=${product.uid},${product.version},${product.platforms},${i}.jar

# core product properties
#product.uid=
#product.version=
#product.platforms=

# miscellaneous product properties
#product.status=
#product.offset=
#product.expand=
#product.visible=
#product.features=

# product icon and the localizing bundle, which is expected to contain
# display names and descriptions for all locales, supported by the product
# * these are file paths as opposed to uris for configuration logic and
#   installation data
product.icon=${cvs.dir}/data/icon.png
product.bundle=${cvs.dir}/data/Bundle

# additional configuration logic jars - they will be packaged alongside with the
# product. note: they will NOT be used as an additional classpath for building
# the product - they should be referenced from the product's build script
product.logic.length=1
product.logic.1.uri=file:${cvs.dir}/${dist.dir.name}/${product.uid},logic.jar

# whether to build the configuration logic. if set to false the configuration 
# logic jars would be expected to be existing and no additional build steps 
# will be taken
build.logic=true

product.data.repository=D:/temp/data
product.packaged.data.repository=${product.data.repository}/packaged

# product installation data files, they are expected to be zip files and will
# be unzipped and repackaged during the build process
product.data.length=1
product.data.1.uri=file:/${product.data.repository}/${product.uid},${product.version},${product.platforms},1.zip

release.packaged.data=true

product.packaged.data.1.file=${product.packaged.data.repository}/${product.uid},${product.version},${product.platforms},1.jar
product.packaged.data.1.size.file=${product.packaged.data.repository}/${product.uid},${product.version},${product.platforms},1.jar.size

# whether to repackage the installation data or not. if set to "false" the data
# will be taken as it is (i.e. will be considered as already packaged); if set 
# to "true" the data will be downloaded and packaged; if set to "default" 
# packaged data will be taken if it's available, otherwise raw data will be 
# downloaded
package.data=default

# modificator for the required disk space parameter, the core value will be the
# sum of unzipped unstallation data files
product.disk.space.modificator=0

# product's requirements
product.requirements.length=0
#product.requirements.1.uid=
#product.requirements.1.version-lower=
#product.requirements.1.version-upper=

# product's conflicts
product.conflicts.length=0
#product.conflicts.1.uid=
#product.conflicts.1.version-lower=
#product.conflicts.1.version-upper=

product.install-afters.length=0
#product.install-afters.1.uid=

# additional product's properties
product.properties.length=0
#product.properties.1.name=
#product.properties.1.value=

# product specific parameters
product.params.length=0
#product.params.1.token=
#product.params.1.value=
