<?xml version="1.0" encoding="UTF-8"?>
<!-- Search for CHANGEME in this document when copying and using it: -->
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->
<?xml-stylesheet type="text/xml" href="CHANGEME/nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<!--

INFO FOR PEOPLE ADDING CHANGES:

Check the DTD (apichanges.dtd) for details on the syntax. You do not
need to regenerate the HTML, as this is part of Javadoc generation; just
change the XML. Rough syntax of a change (several parts optional):

<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>

Also permitted elements: <package>, <branch>. <version> is API spec
version, recommended for all new changes. <compatibility> should say
if things were added/modified/deprecated/etc. and give all information
related to upgrading old code. List affected top-level classes and
link to issue numbers if applicable. See the DTD for more details.

Changes need not be in any particular order, they are sorted in various
ways by the stylesheet anyway.

Dates are assumed to mean "on the trunk". If you *also* make the same
change on a stabilization branch, use the <branch> tag to indicate this
and explain why the change was made on a branch in the <description>.

Please only change this file on the trunk! Rather: you can change it
on branches if you want, but these changes will be ignored; only the
trunk version of this file is important.

Deprecations do not count as incompatible, assuming that code using the
deprecated calls continues to see their documented behavior. But do
specify deprecation="yes" in <compatibility>.

This file is not a replacement for Javadoc: it is intended to list changes,
not describe the complete current behavior, for which ordinary documentation
is the proper place.

-->

<apichanges>

    <!-- First, a list of API names you may use: -->
    <apidefs>
        <apidef name="progress_api">Progress API</apidef>
        <!-- etc. -->
    </apidefs>

    <!-- ACTUAL CHANGES BEGIN HERE: -->

  <changes>
    <change id="suspend">
        <api name="progress_api"/>
        <summary>Add <code>ProgressHandle.suspend(String)</code> method for visual suspend of a running task.</summary>
        <version major="1" minor="9"/>
        <date day="23" month="10" year="2006"/>
        <author login="mkleint"/>
        <compatibility addition="yes" binary="compatible" deletion="no" deprecation="no" modification="no" semantic="compatible" source="compatible"/>
        <description>
            <p>Adding <code>suspend(String)</code>  to <code>ProgressHandle</code> class. 
            Any progress event coming after this call wakes up the progress bar to previous state. </p> 
            <p>
           Currently running task can switch to silent suspend mode where the progress bar stops moving, hides completely or partially. 
           The exact UI behaviour is undefined. </p>
           <p>
        Useful to make progress in status bar less intrusive for very long running tasks, eg. running an ant script that executes user application, debugs user application etc.
            </p>
        </description>
        <class package="org.netbeans.api.progress" name="ProgressHandle"/>
        <issue number="63586"/>
    </change>      
    <change>
        <api name="progress_api"/>
        <summary>Add methods to create main/detail labels for an custom placed progress component.</summary>
        <version major="1" minor="8"/>
        <date day="3" month="8" year="2006"/>
        <author login="mkleint"/>
        <compatibility addition="yes"/>
        <description>
            <p>Adding <code>createMainLabelComponent(ProgressHandle)</code> and 
                      <code>createDetailLabelComponent(ProgressHandle)</code> to <code>ProgressHandleFactory</code> and <code>AggregateProgressFactory</code> classes.
              These are complementary to the <code>createProgressComponent(ProgressHandle)</code> method and allow to 
              externalize the display of task's display name and detail messages when embedded in custom UI components.
            </p>
        </description>
        <class package="org.netbeans.api.progress" name="ProgressHandleFactory"/>
        <class package="org.netbeans.api.progress.aggregate" name="AggregateProgressFactory"/>
        <issue number="58889"/>
    </change>      
    <change>
        <api name="progress_api"/>
        <summary>Split API and implementation of progress component</summary>
        <version major="1" minor="7"/>
        <date day="24" month="7" year="2006"/>
        <author login="mkleint"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                Split the implementation and APIs of progress component.
            </p>
        </description>
        <issue number="78605"/>
    </change>      
    <change>
        <api name="progress_api"/>
        <summary>Allow to change display name of running progress task</summary>
        <version major="1" minor="5"/>
        <date day="25" month="11" year="2005"/>
        <author login="mkleint"/>
        <compatibility addition="yes"/>
        <description>
            <p>
                Added new method <code>setDisplayName(String)</code> to <code>ProgressHandle</code> and <code>AggregateProgressHandle</code>,
                allows to change the main identifying name of the progress task.
            </p>
        </description>
        <class package="org.netbeans.api.progress" name="ProgressHandle"/>
        <class package="org.netbeans.api.progress.aggregate" name="AggregateProgressHandle"/>
        <issue number="68923"/>
    </change>      
    <change>
        <api name="progress_api"/>
        <summary>Adding <code>createProgressComponent(AggregateProgressHandle)</code> method to <code>AggregateProgressFactory</code></summary>
        <version major="1" minor="3"/>
        <date day="19" month="10" year="2005"/>
        <author login="mkleint"/>
        <compatibility addition="yes"/>
        <description>
            <p>
              For aggregated progress handles the equivalent of ProgressHandleFactory.createProgressComponent() was missing.
              Added in this version.
            </p>
        </description>
        <class package="org.netbeans.api.progress.aggregate" name="AggregateProgressFactory"/>
        <class package="org.netbeans.api.progress.aggregate" name="AggregateProgressHandle"/>
        <issue number="66554"/>
    </change>      
    <change>
        <api name="progress_api"/>
        <summary>Adding <code>setInitialDelay(int)</code> method to <code>ProgressHandle</code> and <code>AggregateProgressHandle</code></summary>
        <version major="1" minor="2"/>
        <date day="26" month="9" year="2005"/>
        <author login="mkleint"/>
        <compatibility addition="yes"/>
        <description><p>
            The newly added methods allow to customize the amount of time that shall pass between the start of handle's progress 
            and it's appearance in the status bar. If the progress task finishes fast enough it won't appear in the UI at all.
            The default value is around 0.5s. </p>
            <p>
            For handles that are used in dialogs and elsewhere, this property has no effect and the handle's component is shown immediately.
            </p>
        </description>
        <class package="org.netbeans.api.progress" name="ProgressHandle"/>
        <class package="org.netbeans.api.progress.aggregate" name="AggregateProgressHandle"/>
        <issue number="60966"/>
    </change>      
    <change>
        <api name="progress_api"/>
        <summary>Initial version released</summary>
        <version major="1" minor="0"/>
        <date day="4" month="5" year="2005"/>
        <author login="mkleint"/>
        <compatibility addition="yes"/>
        <description>first initial release of the progress api.
        </description>
    </change>      
  </changes>

    <!-- Now the surrounding HTML text and document structure: -->

    <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <==============

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE CHANGEME/apichanges.xml

-->
    <head>
      <title>Change History for the Progress API</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the Progress API/SPI.</p>

<!-- The actual lists of changes, as summaries and details: -->

      <hr/><standard-changelists module-code-name="org.netbeans.api.progress"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>

</apichanges>
