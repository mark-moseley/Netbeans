# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2008 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2008 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

netbeans.dest=netbeans
test.dist.dir=build/testdist

test.user.dir=testuserdir
nb.run.validation=true
# Options to pass to NetBeans when starting it with "ant tryme":
build.compiler.debug=on
tryme.args=-J-Dnetbeans.full.hack=true

# Information about branch of previous release
# needed to help us generate list of changes since then
previous.release.year=2008
previous.release.month=10
previous.release.day=22

# Additional parameters to pass to NetBeans as it is started in sanity-check mode.
# Normally you ought not change this.
# However those running automated builds may wish to use:
# -J-DErrorManager.minimum=17
# (please don't ask why it is 17)
# which will suppress a variety of mostly harmless deprecation warnings.
sanitystart.args.additional=-J-Dnetbeans.preresolve.classes=true

# Useful for "always successful" build, when you don't care of some
# particular (and currently broken) modules
stop.when.broken.modules=true

# resolve compile time dependencies and merge all dependent modules
# set to true and command `ant -Dmodules=javacvs` will build IDE
# with working module javacvs
merge.dependent.modules=true

# usefull for NBM build. <nbmerge> can set it to the list
# of successfuly built modules => can create NBM for them
# the most powerful combination is to set value to "modules"
# and set stop.when.broken.modules to false
built.modules.property=

# resolve compile-time dependencies during cleaning working repository
# set it to true if you want to clean also modules, your module(s) depends on
resolve.clean.dependencies=false

# stop, if the module have got wrong "clean" target
# if set to false, clean build never fail on calls of the clean targets.
stop.when.clean.error=true

# Choose which configuration to use
# (or explicitly set properties 'modules' and 'fixedmodules').
# The config must define a config.fixedmodules.XXX property and
# a config.modules.XXX property, where XXX is the config name.
# Each is a list of module names, as subdirectories beneath the
# root of the source tree, separated by commas.
moduleconfig=all

# Dist directory for L10N kits
l10n.dist.dir=l10ndist

# These are just here to make build.xml#print-selected-modules happy:
config.fixedmodules.stable=${nb.cluster.platform}
config.modules.stable=\
    ${nb.cluster.profiler},\
    ${nb.cluster.harness},\
    ${nb.cluster.ide},\
    ${nb.cluster.apisupport},\
    ${nb.cluster.websvccommon},\
    ${nb.cluster.java},\
    ${nb.cluster.webcommon},\
    ${nb.cluster.enterprise},\
    ${nb.cluster.xml},\
    ${nb.cluster.ergonomics},\
    ${nb.cluster.nb}

config.fixedmodules.platform=${nb.cluster.platform}
config.modules.platform=
config.fixedmodules.ide=${nb.cluster.ide}
config.modules.ide=
config.fixedmodules.java=${nb.cluster.java}
config.modules.java=
config.fixedmodules.enterprise=${nb.cluster.enterprise}
config.modules.enterprise=
config.fixedmodules.nb=${nb.cluster.nb}
config.modules.nb=

config.fixedmodules.all=${config.fixedmodules.stable}

config.modules.all=${config.modules.stable},\
    ${nb.cluster.ruby},\
    ${nb.cluster.soa},\
    ${nb.cluster.mobility},\
    ${nb.cluster.cnd},\
    ${nb.cluster.dlight},\
    ${nb.cluster.identity},\
    ${nb.cluster.php},\
    ${nb.cluster.groovy}

# moduleconfig for stable UC
config.fixedmodules.stableuc=
config.modules.stableuc=${nb.cluster.stableuc},\
    ${nb.cluster.visualweb},\
    ${nb.cluster.uml}

# moduleconfig for nbms in Daily Alpha Update Centre
config.fixedmodules.daily-alpha-nbms=${config.fixedmodules.stable}
config.modules.daily-alpha-nbms=\
    ${config.modules.all},\
    ${nb.cluster.testtools},\
    ${nb.cluster.uml},\
    ${nb.cluster.visualweb},\
    ${nb.cluster.python},\
    ${nb.cluster.experimental}

# make javadoc for these packages
# - the list will be shared for signature API tests!
# - for javadoc you may specify org.foo.*, the trailing ".*"
#     will be stripped for signature API tests
javadoc.packages=\
    org.netbeans.api.*,\
    org.netbeans.spi.*

# List of modules that provide stable javadoc
config.javadoc.stable=\
    api.annotations.common,\
    autoupdate.services,\
    openide.util,\
    openide.actions,\
    openide.awt,\
    openide.dialogs,\
    openide.nodes,\
    openide.explorer,\
    openide.filesystems,\
    openide.modules,\
    openide.text,\
    openide.windows,\
    openide.loaders,\
    openide.io,\
    api.progress,\
    sendopts,\
    settings,\
    javahelp,\
    spi.palette,\
    options.api,\
    spi.tasklist,\
    openide.execution,\
    queries,\
    editor.codetemplates,\
    editor.errorstripe.api,\
    editor.mimelookup,\
    editor.settings,\
    spi.navigator,\
    diff,\
    projectapi,\
    projectuiapi,\
    project.libraries,\
    api.debugger,\
    spi.viewmodel,\
    spi.debugger.ui,\
    api.debugger.jpda,\
    project.ant,\
    api.visual,\
    api.java,\
    api.java.classpath,\
    java.platform,\
    java.project,\
    java.source,\
    java.sourceui,\
    editor.fold,\
    editor.completion,\
    lexer,\
    api.xml,\
    o.apache.tools.ant.module,\
    db,\
    spi.quicksearch,\
    print,\
    extexecution

#FIXME: changes for retouche merge:
#   editor/codetemplates,\

# List of javadocs under development
config.javadoc.devel=\
    o.openidex.util,\
    core.multiview,\
    o.n.swing.outline,\
    o.n.swing.tabcontrol,\
    editor.indent,\
    editor.lib2,\
    editor.bracesmatching,\
    editor.guards,\
    j2ee.metadata,\
    parsing.api,\
    refactoring.api,\
    refactoring.java,\
    server,\
    api.web.webmodule

# List of javadocs dedicated just for friend usage
config.javadoc.friend=\
    classfile,\
    o.n.swing.plaf,\
    editor.util,\
    editor.settings.storage,\
    editor.lib,\
    editor,\
    j2ee.dd,\
    j2eeserver,\
    java.j2seproject,\
    junit,\
    uihandler,\
    lib.uihandler,\
    masterfs,\
    projectui

#FIXME: changes for retouche merge:
#    j2ee/ddapi,\
#    j2ee/ejbapi,\
#    j2ee/metadata,\
#    j2ee/utilities,\
#    web/webapi,\
#    websvc/websvcddapi,\
#    websvc/websvcapi,\
#    websvc/registry,\
#    websvc/core,\
#    editor/hints,\

# List of javadocs outside of standard IDE build
config.javadoc.experimental=\
    o.n.bootstrap,\
    core.startup,\
    contrib/registry,\
    contrib/core.registry,\
    contrib/convertor,\
    nbjunit

# List of old and deprecated APIs for building complete javadoc

config.javadoc.deprecated=\
    openide.compat,\
    openide.options,\
    openide.util.enumerations

config.javadoc.netbeans=\
    ${config.javadoc.stable},\
    ${config.javadoc.devel},\
    ${config.javadoc.friend},\
    ${config.javadoc.deprecated}

# List of all javadocs for development version
# is composed from the javadocs split by stability
# categories, for release it shall contain just stable ones
config.javadoc.all=\
    ${config.javadoc.stable},\
    ${config.javadoc.devel},\
    ${config.javadoc.friend},\
    ${config.javadoc.experimental},\
    ${config.javadoc.deprecated}

# for backward compatibility we also define these properties for javadoc config
config.fixedmodules.javadoc=api.visual
config.modules.javadoc=${config.javadoc.all}

# configuration for signature test builds
config.fixedmodules.sigtest=${config.fixedmodules.stable}
config.modules.sigtest=${config.modules.stable}

# module config for l10n kit preparation build
config.modules.l10nkit=\
        installer,\
        testwww,\
        platform,\
        ${config.modules.stable}
config.fixedmodules.l10nkit=${config.fixedmodules.stable}

# List of modules for Groovy support:
config.fixedmodules.groovy=${nb.cluster.groovy}
config.modules.groovy=

# List of modules for Ruby support:
config.fixedmodules.ruby=${nb.cluster.ruby}
config.modules.ruby=

# List of modules for mobility:
config.fixedmodules.mobility=${nb.cluster.mobility}
config.modules.mobility=

# List of modules for visualweb:
config.fixedmodules.visualweb=${nb.cluster.visualweb}
config.modules.visualweb=

# List of modules for SOA Pack:
config.fixedmodules.soa=${nb.cluster.soa}
config.modules.soa=
config.fixedmodules.soacheckout=\
    ${nb.cluster.soa},\
    ${nb.cluster.platform},\
    ${config.modules.stable}
config.modules.soacheckout=

# List of modules for UML Pack:
config.fixedmodules.visualweb=${nb.cluster.visualweb}
config.modules.visualweb=

# List of modules for UML Pack:
config.fixedmodules.uml=${nb.cluster.uml}
config.modules.uml=
config.fixedmodules.umlcheckout=\
    ${nb.cluster.uml},\
    ${nb.cluster.platform},\
    ${config.modules.stable}
config.modules.umlcheckout=

# list of modules for jnlp:
config.fixedmodules.jnlp=
config.modules.jnlp=\
    ${nb.cluster.platform},\
    ${nb.cluster.ide},\
    ${nb.cluster.java}

#JavaFX module
config.fixedmodules.javafx=${nb.cluster.javafx}
config.modules.javafx=

#PHP module
config.fixedmodules.php=${nb.cluster.php}
config.modules.php=
