#!/bin/sh

[ -n "$pop_url" ] || exit 101
if [ -z "$pop_build_info" ]; then
    pop_build_info="nbbuild/build/build_info"
fi
[ -n "$pop_job" ] || exit 103

[ -n "$push_url" ] || exit 113
[ -n "$push_username" ] || exit 114

if [ -z "$TMP" ]; then
  TMP="/tmp"
fi

t

ANT_OPTS="-Xmx512m -XX:MaxPermSize=128m"
export ANT_OPTS
HGMERGE=merge
export HGMERGE

hg up -C tip
hg --config extensions.purge= clean --all

mkdir -p "nbbuild/build"
STATUS="nbbuild/build/build-info"
curl $pop_job/buildStatus -D "$STATUS"
cat "$STATUS"

if grep "Location:.*blue[_anime]*.gif.*" "$STATUS"; then
    echo Build seems to be stable
else
    echo Build is not stable, exiting
    exit 1
fi

testresult() {
    FILE="$1/TEST-hg.$2.xml"
    echo '<?xml version="1.0" encoding="UTF-8" ?>' >$FILE
    echo '<testsuite errors="0" failures="0" name="hg.'$2'" tests="1" time="1">' >>$FILE
    echo '  <properties>' >>$FILE
    echo '  </properties>' >>$FILE
    echo '  <testcase classname="hg.'$2'" name="hg.'$2'" time="1" />' >>$FILE
    echo '  <system-out><![CDATA[' >>$FILE
    echo "$3" >>$FILE
    echo ']]></system-out>' >>$FILE
    echo '  <system-err></system-err>' >>$FILE
    echo '</testsuite>' >>$FILE
}

TESTDIR="nbbuild/build/test/results/"
mkdir -p $TESTDIR

echo Getting Build Info
HGINFO=`curl $pop_job/lastStableBuild/artifact/$pop_build_info`
echo Build info: $HGINFO
testresult "$TESTDIR" "check.build.stable" "$HGINFO"
[ -n "$HGINFO" ] || exit 1

HGID=`echo "$HGINFO" | grep "Hg ID"`
echo Last build_info line: "$HGID"
HGTIP=`echo "$HGID" | cut -f 2 -d ":" | while read X; do echo $X; done`
echo Last OK revision: "$HGTIP"

hg pull -r "$HGTIP" "$pop_url" || exit 5
if [ `hg heads --template '{node|short}\n' | wc -l` = 1 ]
then
   hg up || exit 6
else
   if hg merge; then
     echo Merge OK.
   else
     echo Merge failed.
     hg heads
     exit 7
   fi
   hg ci -u "$push_username"@netbeans.org -m 'Automated merge' || exit 8
fi
HGOUT=`hg out $push_url`
testresult "$TESTDIR" "outgoing.changes" "$HGOUT"

OUT_COUNT=`hg out --template 'change: {node|short}\n' $push_url | grep '^change: ' | wc -l`
if [ "$OUT_COUNT" -gt 0 ]; then
    echo "Let the build start. There is $OUT_COUNT outgoing changes."
else
    echo "No outgoing changes. No reason to do build."
    echo >"nbbuild/no-outgoing-changes-no-build.zip"
    exit 0
fi

RESULT=`pwd`/nbbuild/build/test-results.txt
export RESULT
rm $RESULT

testmodule() {
    if ant $ANT_PARAM -f $1/build.xml test-unit -Dtest-unit-sys-prop.ignore.random.failures=true; then
        echo Test OK: $1
    else
        echo $1 >>$RESULT
        exit 5
    fi
}

ant build $ANT_PARAM || exit 2
ant commit-validation $ANT_PARAM || exit 3
ant build-test-dist $ANT_PARAM || exit 4

testmodule openide.awt || exit 5

FAILED=`cat $RESULT | wc -l`
if [ "$FAILED" -gt 0 ]; then
    echo "No push. Failed tests in following modules:"
    cat $RESULT
    exit 5
fi

hg push "$push_url"
