<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is unknown. -->
<definitions targetNamespace="http://document.ws.test.netbeans.org/" name="EchoNoArrays_DOCUMENT" xmlns:tns="http://document.ws.test.netbeans.org/" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns="http://schemas.xmlsoap.org/wsdl/">
    <types>
        <xsd:schema>
            <xsd:element name="getBoolean" type="tns:getBoolean"/>
            
            <xsd:element name="getBooleanResponse" type="tns:getBooleanResponse"/>
            
            <xsd:element name="getBooleanWrapper" type="tns:getBooleanWrapper"/>
            
            <xsd:element name="getBooleanWrapperResponse" type="tns:getBooleanWrapperResponse"/>
            
            <xsd:element name="getByte" type="tns:getByte"/>
            
            <xsd:element name="getByteResponse" type="tns:getByteResponse"/>
            
            <xsd:element name="getByteWrapper" type="tns:getByteWrapper"/>
            
            <xsd:element name="getByteWrapperResponse" type="tns:getByteWrapperResponse"/>
            
            <xsd:element name="getDouble" type="tns:getDouble"/>
            
            <xsd:element name="getDoubleResponse" type="tns:getDoubleResponse"/>
            
            <xsd:element name="getDoubleWrapper" type="tns:getDoubleWrapper"/>
            
            <xsd:element name="getDoubleWrapperResponse" type="tns:getDoubleWrapperResponse"/>
            
            <xsd:element name="getFloat" type="tns:getFloat"/>
            
            <xsd:element name="getFloatResponse" type="tns:getFloatResponse"/>
            
            <xsd:element name="getFloatWrapper" type="tns:getFloatWrapper"/>
            
            <xsd:element name="getFloatWrapperResponse" type="tns:getFloatWrapperResponse"/>
            
            <xsd:element name="getInt" type="tns:getInt"/>
            
            <xsd:element name="getIntResponse" type="tns:getIntResponse"/>
            
            <xsd:element name="getLong" type="tns:getLong"/>
            
            <xsd:element name="getLongResponse" type="tns:getLongResponse"/>
            
            <xsd:element name="getLongWrapper" type="tns:getLongWrapper"/>
            
            <xsd:element name="getLongWrapperResponse" type="tns:getLongWrapperResponse"/>
            
            <xsd:element name="getQName" type="tns:getQName"/>
            
            <xsd:element name="getQNameResponse" type="tns:getQNameResponse"/>
            
            <xsd:element name="getShort" type="tns:getShort"/>
            
            <xsd:element name="getShortResponse" type="tns:getShortResponse"/>
            
            <xsd:element name="getShortWrapper" type="tns:getShortWrapper"/>
            
            <xsd:element name="getShortWrapperResponse" type="tns:getShortWrapperResponse"/>
            
            <xsd:element name="getString" type="tns:getString"/>
            
            <xsd:element name="getStringResponse" type="tns:getStringResponse"/>
            
            <xsd:complexType name="getDoubleWrapper">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:double" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getDoubleWrapperResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:double" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getDouble">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:double"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getDoubleResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:double"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getFloat">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:float"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getFloatResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:float"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getQName">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:QName" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getQNameResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:QName" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getFloatWrapper">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:float" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getFloatWrapperResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:float" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getLong">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:long"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getLongResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:long"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getBoolean">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getBooleanResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getInt">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getIntResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getShort">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:short"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getShortResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:short"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getShortWrapper">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:short" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getShortWrapperResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:short" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getBooleanWrapper">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:boolean" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getBooleanWrapperResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:boolean" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getByteWrapper">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:byte" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getByteWrapperResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:byte" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getString">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getStringResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getLongWrapper">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:long" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getLongWrapperResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:long" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getByte">
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:byte"/>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="getByteResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:byte"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
    </types>
    <message name="getBoolean">
        <part name="parameters" element="tns:getBoolean"/>
    </message>
    <message name="getBooleanResponse">
        <part name="parameters" element="tns:getBooleanResponse"/>
    </message>
    <message name="getByte">
        <part name="parameters" element="tns:getByte"/>
    </message>
    <message name="getByteResponse">
        <part name="parameters" element="tns:getByteResponse"/>
    </message>
    <message name="getShort">
        <part name="parameters" element="tns:getShort"/>
    </message>
    <message name="getShortResponse">
        <part name="parameters" element="tns:getShortResponse"/>
    </message>
    <message name="getInt">
        <part name="parameters" element="tns:getInt"/>
    </message>
    <message name="getIntResponse">
        <part name="parameters" element="tns:getIntResponse"/>
    </message>
    <message name="getLong">
        <part name="parameters" element="tns:getLong"/>
    </message>
    <message name="getLongResponse">
        <part name="parameters" element="tns:getLongResponse"/>
    </message>
    <message name="getFloat">
        <part name="parameters" element="tns:getFloat"/>
    </message>
    <message name="getFloatResponse">
        <part name="parameters" element="tns:getFloatResponse"/>
    </message>
    <message name="getDouble">
        <part name="parameters" element="tns:getDouble"/>
    </message>
    <message name="getDoubleResponse">
        <part name="parameters" element="tns:getDoubleResponse"/>
    </message>
    <message name="getString">
        <part name="parameters" element="tns:getString"/>
    </message>
    <message name="getStringResponse">
        <part name="parameters" element="tns:getStringResponse"/>
    </message>
    <message name="getLongWrapper">
        <part name="parameters" element="tns:getLongWrapper"/>
    </message>
    <message name="getLongWrapperResponse">
        <part name="parameters" element="tns:getLongWrapperResponse"/>
    </message>
    <message name="getShortWrapper">
        <part name="parameters" element="tns:getShortWrapper"/>
    </message>
    <message name="getShortWrapperResponse">
        <part name="parameters" element="tns:getShortWrapperResponse"/>
    </message>
    <message name="getBooleanWrapper">
        <part name="parameters" element="tns:getBooleanWrapper"/>
    </message>
    <message name="getBooleanWrapperResponse">
        <part name="parameters" element="tns:getBooleanWrapperResponse"/>
    </message>
    <message name="getFloatWrapper">
        <part name="parameters" element="tns:getFloatWrapper"/>
    </message>
    <message name="getFloatWrapperResponse">
        <part name="parameters" element="tns:getFloatWrapperResponse"/>
    </message>
    <message name="getDoubleWrapper">
        <part name="parameters" element="tns:getDoubleWrapper"/>
    </message>
    <message name="getDoubleWrapperResponse">
        <part name="parameters" element="tns:getDoubleWrapperResponse"/>
    </message>
    <message name="getQName">
        <part name="parameters" element="tns:getQName"/>
    </message>
    <message name="getQNameResponse">
        <part name="parameters" element="tns:getQNameResponse"/>
    </message>
    <message name="getByteWrapper">
        <part name="parameters" element="tns:getByteWrapper"/>
    </message>
    <message name="getByteWrapperResponse">
        <part name="parameters" element="tns:getByteWrapperResponse"/>
    </message>
    <portType name="EchoNoArrays_DOCUMENT">
        <operation name="getBoolean">
            <input message="tns:getBoolean"/>
            <output message="tns:getBooleanResponse"/>
        </operation>
        <operation name="getByte">
            <input message="tns:getByte"/>
            <output message="tns:getByteResponse"/>
        </operation>
        <operation name="getShort">
            <input message="tns:getShort"/>
            <output message="tns:getShortResponse"/>
        </operation>
        <operation name="getInt">
            <input message="tns:getInt"/>
            <output message="tns:getIntResponse"/>
        </operation>
        <operation name="getLong">
            <input message="tns:getLong"/>
            <output message="tns:getLongResponse"/>
        </operation>
        <operation name="getFloat">
            <input message="tns:getFloat"/>
            <output message="tns:getFloatResponse"/>
        </operation>
        <operation name="getDouble">
            <input message="tns:getDouble"/>
            <output message="tns:getDoubleResponse"/>
        </operation>
        <operation name="getString">
            <input message="tns:getString"/>
            <output message="tns:getStringResponse"/>
        </operation>
        <operation name="getLongWrapper">
            <input message="tns:getLongWrapper"/>
            <output message="tns:getLongWrapperResponse"/>
        </operation>
        <operation name="getShortWrapper">
            <input message="tns:getShortWrapper"/>
            <output message="tns:getShortWrapperResponse"/>
        </operation>
        <operation name="getBooleanWrapper">
            <input message="tns:getBooleanWrapper"/>
            <output message="tns:getBooleanWrapperResponse"/>
        </operation>
        <operation name="getFloatWrapper">
            <input message="tns:getFloatWrapper"/>
            <output message="tns:getFloatWrapperResponse"/>
        </operation>
        <operation name="getDoubleWrapper">
            <input message="tns:getDoubleWrapper"/>
            <output message="tns:getDoubleWrapperResponse"/>
        </operation>
        <operation name="getQName">
            <input message="tns:getQName"/>
            <output message="tns:getQNameResponse"/>
        </operation>
        <operation name="getByteWrapper">
            <input message="tns:getByteWrapper"/>
            <output message="tns:getByteWrapperResponse"/>
        </operation>
    </portType>
    <binding name="EchoNoArrays_DOCUMENTPortBinding" type="tns:EchoNoArrays_DOCUMENT">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <operation name="getBoolean">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getByte">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getShort">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getInt">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getLong">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getFloat">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getDouble">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getString">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getLongWrapper">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getShortWrapper">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getBooleanWrapper">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getFloatWrapper">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getDoubleWrapper">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getQName">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getByteWrapper">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
    </binding>
    <service name="EchoNoArrays_DOCUMENT">
        <port name="EchoNoArrays_DOCUMENTPort" binding="tns:EchoNoArrays_DOCUMENTPortBinding">
            <soap:address location="http://localhost:8080/WebAppEchoWebService/EchoArrays_DOCUMENTService?WSDL"/>
        </port>
    </service>
</definitions>

