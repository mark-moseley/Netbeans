/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */
/*
 * ExportDataSourcesDialog.java
 *
 * Created on March 8, 2004, 12:09 PM
 */

package org.netbeans.modules.visualweb.ejb.ui;

import java.awt.BorderLayout;
import javax.swing.*;



/**
 * A panle to allow the user to export EJB datasources to a jar file
 *
 * @author dongmei cao
 */
public class ExportEjbDataSourcesPanel extends JPanel{
    
    private EjbDataSourcesSelectionPanel ejbDataSourceSelectionPanel;
    private EjbDataSourcePropertiesPanel propsPanel;
    
    public ExportEjbDataSourcesPanel() 
    {
        initComponents();
        
        propsPanel = new EjbDataSourcePropertiesPanel();
        ejbDataSourceSelectionPanel = new EjbDataSourcesSelectionPanel( propsPanel );
        
        selectionPanel.add(ejbDataSourceSelectionPanel, BorderLayout.CENTER);
        propertiesPanel.add( propsPanel, BorderLayout.CENTER);
        fileNameText.setText( ImportExportFileChooser.defaultFilePath );
    }
    
    public void setEjbDataSources( PortableEjbDataSource[] ejbDataSources )
    {
        ejbDataSourceSelectionPanel.setEjbDataSources( ejbDataSources );
    }
    
    public String getFilePath()
    {
        return fileNameText.getText().trim();
    }
    
    public boolean saveChange()
    {
        return propsPanel.saveChange();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        title = new javax.swing.JLabel();
        selectionPanel = new javax.swing.JPanel();
        filePanel = new javax.swing.JPanel();
        fileNameLabel = new javax.swing.JLabel();
        fileNameText = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        propertiesPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        title.setLabelFor(selectionPanel);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/netbeans/modules/visualweb/ejb/ui/Bundle"); // NOI18N
        title.setText(bundle.getString("EXPORT_TITLE")); // NOI18N
        title.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        add(title, gridBagConstraints);
        title.getAccessibleContext().setAccessibleDescription(bundle.getString("EXPORT_TITLE")); // NOI18N

        selectionPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 10, 10));
        selectionPanel.setVerifyInputWhenFocusTarget(false);
        selectionPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 0, 0);
        add(selectionPanel, gridBagConstraints);

        filePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 10, 10));
        filePanel.setLayout(new java.awt.BorderLayout(5, 1));

        fileNameLabel.setLabelFor(fileNameText);
        org.openide.awt.Mnemonics.setLocalizedText(fileNameLabel, org.openide.util.NbBundle.getMessage(ExportEjbDataSourcesPanel.class, "FILE_NAME")); // NOI18N
        filePanel.add(fileNameLabel, java.awt.BorderLayout.WEST);
        fileNameLabel.getAccessibleContext().setAccessibleDescription(bundle.getString("FILE_NAME_DESC")); // NOI18N

        filePanel.add(fileNameText, java.awt.BorderLayout.CENTER);
        fileNameText.getAccessibleContext().setAccessibleDescription(bundle.getString("FILE_NAME_DESC")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(browseButton, org.openide.util.NbBundle.getMessage(ExportEjbDataSourcesPanel.class, "BROWSE_EXPORT_FILE_BUTTON_LABEL")); // NOI18N
        browseButton.setToolTipText("");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });
        filePanel.add(browseButton, java.awt.BorderLayout.EAST);
        browseButton.getAccessibleContext().setAccessibleDescription(bundle.getString("BROWSE_EXPORT_FILE_BUTTON_DESC")); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(17, 0, 0, 0);
        add(filePanel, gridBagConstraints);

        propertiesPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        propertiesPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 17, 0, 12);
        add(propertiesPanel, gridBagConstraints);

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ExportEjbDataSourcesPanel.class, "EXPORT_EJB_DATASOURCES")); // NOI18N
        getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ExportEjbDataSourcesPanel.class, "EXPORT_EJB_DATASOURCES")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents
    
    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        
        // Select a file to expoprt the EJB datasources to
        
        ImportExportFileChooser fileChooser = new ImportExportFileChooser( this );
        String selectedFile = fileChooser.getExportFile();
        if( selectedFile != null )
        {
            fileChooser.setCurrentFilePath( selectedFile );
            fileNameText.setText(selectedFile);
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameText;
    private javax.swing.JPanel filePanel;
    private javax.swing.JPanel propertiesPanel;
    private javax.swing.JPanel selectionPanel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
    
}
