<?xml version="1.0"?>

<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->

<project default="all" name="VW EJB Consumption Test Type Script">

    <import file="../../../nbbuild/templates/xtest-qa-functional.xml"/>

    <property name="opensource.dir" location="../../.."/>
    <property name="httpunit.dir" value="${opensource.dir}/testtools/external"/>

    <!-- Define disable browser or not -->
    <property name="rave.disablebrowser" value="true"/>
    <!-- Pass ${rave.disablebrowser} property value to xtest command line -->

    <!-- Define path to IDE -->
    <property name="netbeans.dest.dir" value="../../../nbbuild/netbeans"/>
    <!-- Pass ${netbeans.dest.dir} property value to xtest command line -->

    <property name="xtest.data.dir" location="../../test/data"/>
    <property name="xtest.properties-file.dir" value="${xtest.data.dir}"/>
    <property name="xtest.ejb.dir" location="./qa-functional/src/org/netbeans/modules/visualweb/ejb/test/data/"/>
    <property name="xtest.ejb_jars.dir" location="${xtest.ejb.dir}/ejb_jars"/>

    <available file="${xtest.properties-file.dir}/DeploymentTargets.properties" property="xtest.dt-properties-file.present"/>

    <!-- Adds property to IDE command line: suppress scanning of classpath -->
    <property name="xtest.ide.commandline.suffix" value="-J-Dnetbeans.javacore.noscan=true -J-Drave.disablebrowser=${rave.disablebrowser} -J-Dnetbeans.dest.dir=${netbeans.dest.dir} -J-Dxtest.data.dir=${xtest.data.dir} -J-Dxtest.ejb.dir=${xtest.ejb.dir} -J-Dxtest.ejb_jars.dir=${xtest.ejb_jars.dir}"/>

    <condition property="jemmy.jar" value="jemmy-mac.jar" else="jemmy.jar">
        <contains string="${os.name}" substring="Mac"
                casesensitive="false"/> 
    </condition>

    <echo message="jemmy.jar = ${jemmy.jar}"/>

    <condition property="asadmin.script" value="asadmin.bat" else="asadmin">
        <contains string="${os.name}" substring="Windows" casesensitive="false"/>
    </condition>

    <!-- Creates an empty Java project in IDE -->
    <!-- <property name="xtest.ide.create.project" value="true"/> -->
    <!-- Opens project at specified location -->
    <!-- property name="xtest.ide.open.project" location="${xtest.data}/SampleProject"/-->

    <path id="httpunit.jars">
        <pathelement location="${httpunit.dir}/httpunit.jar"/>
        <pathelement location="${netbeans.dest.dir}/visualweb1/modules/ext/tidy-mod.jar"/>
    </path>

    <path id="jemmy.and.jelly.path">
        <pathelement location="${opensource.dir}/jemmy/builds/${jemmy.jar}"/>
        <pathelement location="${opensource.dir}/visualweb/kit/gravy/builds/gravy.jar"/>
        <pathelement location="${opensource.dir}/jellytools/builds/jelly2-nb.jar"/>
    </path>

    <!-- <property name="httpunit.dir" value="httpunit"/> -->
    <!--property name="httpunit.dir" value="httpunit_1.6"/>
    <echo message="httpunit.dir = ${httpunit.dir}"/>
    <path id="httpunit.jars">
        <pathelement location="../../test/${httpunit.dir}/httpunit.jar"/>
        <pathelement location="../../test/${httpunit.dir}/junit.jar"/>
        <pathelement location="../../test/${httpunit.dir}/servlet.jar"/>
        <pathelement location="../../test/${httpunit.dir}/xmlParserAPIs.jar"/>
        <pathelement location="../../test/${httpunit.dir}/Tidy.jar"/>
        <pathelement location="../../test/${httpunit.dir}/js.jar"/>
        <pathelement location="../../test/${httpunit.dir}/nekohtml.jar"/>
        <pathelement location="../../test/${httpunit.dir}/xercesImpl.jar"/>
    </path-->

    <path id="required_jars">
        <path refid="jemmy.and.jelly.path"/>
        <path refid="httpunit.jars"/>
        <pathelement location="${netbeans.dest.dir}/visualweb1/modules/org-netbeans-modules-visualweb-ejb.jar"/>
        <pathelement location="${netbeans.dest.dir}/visualweb1/modules/org-netbeans-modules-visualweb-insync.jar"/>
    </path>

    <!-- ================================ -->
    <!-- Preparation for deployment tests -->
    <!-- ================================ -->
    <target name="data-preparation" if="xtest.dt-properties-file.present">
      <echo message="xtest.properties-file.dir=${xtest.properties-file.dir}"/>
      <copy file="${xtest.properties-file.dir}/DeploymentTargets.properties" tofile="${xtest.data.dir}/DeploymentTargets.properties" overwrite="true"/>
      <copy file="${xtest.properties-file.dir}/DefaultDeploymentTargets.properties" tofile="${xtest.data.dir}/DefaultDeploymentTargets.properties" overwrite="true"/>
      <loadproperties srcFile="${xtest.data.dir}/DeploymentTargets.properties"/>
      <available file="${deployment.target.path.GlassFish V2}/bin/${asadmin.script}" property="asadmin.present"/>
      <echo message="asadmin.present=${asadmin.present}"/>
      <antcall target="data-deployment"/>
    </target>

    <target name="data-deployment" if="asadmin.present">
      <unjar src="qa-functional/src/org/netbeans/modules/visualweb/ejb/test/data/ejb_jars.jar" dest="${xtest.ejb.dir}"/>
      <property name="SunAppServer.dir" location="${deployment.target.path.GlassFish V2}/bin"/>
      <touch file="./passwd"/>
      <echo file="./passwd" message="AS_ADMIN_PASSWORD=${deployment.target.password.GlassFish V2}"/>
      <!-- Deploy EJBs on Sun Application Server -->
      <echo message="+++ SunAppServer.dir = ${SunAppServer.dir}" />       
      <echo message="+++ xtest.ejb_jars.dir = ${xtest.ejb_jars.dir}" />
      <echo message="+++ asadmin.script = ${asadmin.script}" />
      <echo message="+++ Start Deployment..." />       
      <exec dir="." executable="${SunAppServer.dir}/${asadmin.script}" spawn="true">
        <arg line="start-domain domain1"/>
      </exec>
      <sleep seconds="30"/>
      <property name="SunAppServer.admin.port" value="4848"/> 
      <property name="SunAppServer.command.prefix" 
          value="deploy --host localhost --port ${SunAppServer.admin.port} --user ${deployment.target.login.GlassFish V2} --passwordfile passwd --generatermistubs=true --availabilityenabled=true ${xtest.ejb_jars.dir}"/>
      <exec dir="." executable="${SunAppServer.dir}/${asadmin.script}">
          <arg line="${SunAppServer.command.prefix}/EJB_Valid_JAR_Valid_EAR/EJB_Valid_JAR_Valid_EAR.ear"/>
      </exec>
      <exec dir="." executable="${SunAppServer.dir}/${asadmin.script}">
          <arg line="${SunAppServer.command.prefix}/EJB_Valid_JAR_No_Package/EJB_Valid_JAR_No_Package.ear"/>
      </exec>
      <exec dir="." executable="${SunAppServer.dir}/${asadmin.script}">
          <arg line="${SunAppServer.command.prefix}/EJB_Valid_JARs_2EJBs/EJB_Valid_JARs_2EJBs.ear"/>
      </exec>
      <exec dir="." executable="${SunAppServer.dir}/${asadmin.script}">
        <arg line="stop-domain domain1"/>
      </exec>
      <echo message="+++ Finish Deployment..." />
    </target>

    <!-- ========= -->
    <!-- Compilers -->
    <!-- ========= -->
    
    <!-- You can override default qa-functional-compiler if you need something special -->
    <target name="qa-functional-compiler">
        <buildTests srcDir="qa-functional/src" compileExcludes="**/data/**">
            <classpath>
                <path refid="required_jars"/>
            </classpath>
        </buildTests>
    </target>

    <!-- ========= -->
    <!-- Executors -->
    <!-- ========= -->
    
    <!-- This target executes tests inside IDE. It is defined in default-build-qa-functional.xml.
         If you need to customize it, you can uncomment the following and override it.-->
    <target name="runidetest" depends="data-preparation">
        <property name="coverage.lib.path" refid="httpunit.jars"/>
        <executeTests  pluginName="ide">
            <classpath>
                <path refid="required_jars"/>
             </classpath>
        </executeTests>
        <delete dir="${xtest.ejb_jars.dir}"/>
        <loadproperties srcFile="${xtest.data.dir}/DeploymentTargets.properties"/>
        <exec dir="${deployment.target.path.GlassFish V2}/bin" executable="${deployment.target.path.GlassFish V2}/bin/${asadmin.script}">
            <arg line="stop-domain domain1"/>
        </exec>
    </target>

</project>
