#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
# Microsystems, Inc. All Rights Reserved.

OPTIONS_all=Editor Settings
OPTIONS_plain=Plain Editor
OPTIONS_java=Java Editor
OPTIONS_print=Plain Editor
OPTIONS_html=HTML Editor

# Consider this garbage, as this property is hidden
PROP_base_editorState=Editor State
HINT_base_editorState=Editor state.

# Following localizations MUST be changed
# These are the labels and tooltips for all the editors properties
PROP_abbrevMap=Abbreviations
HINT_abbrevMap=Abbreviations for commonly typed key sequences.

PROP_caretBlinkRate=Insertion Point Blink Rate
HINT_caretBlinkRate=How fast the insertion point or overwrite caret blinks.

PROP_caretColorInsertMode=Insertion Point Color
HINT_caretColorInsertMode=Color of the insertion point.

PROP_caretColorOverwriteMode=Overwrite Caret Color
HINT_caretColorOverwriteMode=Color of the caret when in overwrite mode.

PROP_caretItalicInsertMode=Italic Insertion Point
HINT_caretItalicInsertMode=If True, the insertion point is italicized.

PROP_caretItalicOverwriteMode=Italic Overwrite Caret
HINT_caretItalicOverwriteMode=If True, the caret is italicized when in overwrite mode.

PROP_caretTypeInsertMode=Insertion Point
HINT_caretTypeInsertMode=Insertion point style.

PROP_caretTypeOverwriteMode=Overwrite Caret
HINT_caretTypeOverwriteMode=Style of caret when in overwrite mode.

PROP_coloringMap=Fonts and Colors
HINT_coloringMap=Fonts and colors for various elements displayed in the Source Editor.

PROP_completionAutoPopup=Auto Popup Completion Window
HINT_completionAutoPopup=If True, the completion window automatically appears when appropriate.

PROP_completionCaseSensitive=Case Sensitive Code Completion
HINT_completionCaseSensitive=If True, the completion query search will be case sensitive

PROP_completionNaturalSort=Code Completion Natural Sort
HINT_completionNaturalSort=If True, the completion search results will be sorted naturally

PROP_fastImportPackage=Fast Import Package
HINT_fastImportPackage=If True, fast import dialog will offer packages

PROP_gotoClassCaseSensitive=Go To Class Case Sensitivity
HINT_gotoClassCaseSensitive=If True, Go To Class search will be case sensitive

PROP_gotoClassShowInnerClasses=Go To Class Show Inner Classes
HINT_gotoClassShowInnerClasses=If True, Go To Class search will search also inner classes

PROP_gotoClassShowLibraryClasses=Go To Class Show Library Classes
HINT_gotoClassShowLibraryClasses=If True, Go To Class search will search library classes

PROP_completionInstantSubstitution=Code Completion Instant Substitution
HINT_completionInstantSubstitution=If True, invocation of code completion perform instant substitution, if the search result contains only one item

PROP_completionLowerCase=Code Completion Lowercase Substitution
HINT_completionLowerCase=If True, HTML Code Completion will be available in lower case.

PROP_completionAutoPopupDelay=Delay of Completion Window Auto Popup
HINT_completionAutoPopupDelay=How long to wait (in milliseconds) before automatically popping up the completion window.

PROP_javaDocBGColor=Background Color of Javadoc Popup Window
HINT_javaDocBGColor=Background color of Javadoc popup window

PROP_javaDocAutoPopupDelay=Delay of Javadoc Window Auto Popup
HINT_javaDocAutoPopupDelay=How long to wait (in milliseconds) before automatically popping up the Javadoc window.

PROP_javaDocPreferredSize=Javadoc Preferred Size
HINT_javaDocPreferredSize=Preferred size of Javadoc popup window.

PROP_javaDocAutoPopup=Auto Popup Javadoc Window
HINT_javaDocAutoPopup=If True, the Javadoc window automatically appears when appropriate.

PROP_updatePDAfterMounting=Update Code Completion Database After Mounting
HINT_updatePDAfterMounting=Mounted filesystem will be added into the Code Completion Database.

PROP_showDeprecatedMembers=Show Deprecated Members in Code Completion
HINT_showDeprecatedMembers=If True, deprecated members are shown in code completion.

PROP_expandTabs=Expand Tabs to Spaces
HINT_expandTabs=If True, automatically converts tabs in the document to spaces padded to the same column.

PROP_fontSize=Font Size
HINT_fontSize=Default font size for tokens not assigned value in Fonts and Colors property.

PROP_formatCompoundBracketAddNL=Curly Brace on Next Line
HINT_formatCompoundBracketAddNL=Curly brace on next line.

PROP_formatSpaceBeforeParenthesis=Add Space Before Parentheses
HINT_formatSpaceBeforeParenthesis=If True, add space before opening parenthesis.

PROP_highlightCaretRow=Highlight Caret Row
HINT_highlightCaretRow=If True, highlight row where the insertion point is.

PROP_highlightMatchingBracket=Highlight Matching Bracket
HINT_highlightMatchingBracket=Highlight bracket that matches the bracket before the insertion point.

PROP_indentEngine=Indentation Engine
HINT_indentEngine=Indentation engine used for this type of editor.

PROP_keyBindingList=Key Bindings
HINT_keyBindingList=Actions bound to shortcut keys.

PROP_lineHeightCorrection=Line Height Correction
HINT_lineHeightCorrection=Multiplier by which to adjust line height.

PROP_lineNumberVisible=Line Numbers
HINT_lineNumberVisible=If True, line numbers in the document are displayed along the left side of the window.

PROP_macroMap=Macros
HINT_macroMap=Click ellipsis button to display, edit, add, and remove macros.

PROP_margin=Margin
HINT_margin=Determines placement of margin.

PROP_printColoringMap=Print Fonts and Colors
HINT_printColoringMap=Fonts and colors to use when printing document.

PROP_printLineNumberVisible=Print Line Numbers
HINT_printLineNumberVisible=If True, print line numbers.

PROP_scrollFindInsets=Scroll Find Insets
HINT_scrollFindInsets=Specifies how much space to reserve on each side of text located with the Find command.

PROP_scrollJumpInsets=Scroll Jump Insets
HINT_scrollJumpInsets=How much the view should jump in each direction when scrolling goes off screen.

PROP_spacesPerTab=Number of Spaces per Tab
HINT_spacesPerTab=Number of spaces to be inserted when pressing tab.

PROP_statusBarCaretDelay=Status Bar Caret Delay
HINT_statusBarCaretDelay=Delay (in milliseconds) between time the caret stops moving and the update of its position in the status bar.

PROP_statusBarVisible=Status Bar Visible
HINT_statusBarVisible=If True, the status bar (showing insert mode, line number, and so on) is displayed at the bottom of the window.

PROP_tabSize=Tab Size
HINT_tabSize=Number of spaces per tab stop, for documents that contain real tabs.

PROP_textLimitLineColor=Text Limit Line Color
HINT_textLimitLineColor=Color of the line showing the text limit.

PROP_textLimitLineVisible=Display Text Limit Line
HINT_textLimitLineVisible=If True, display the text limit line.

PROP_textLimitWidth=Text Limit Character Count
HINT_textLimitWidth=Count of characters after which the text limit line is displayed.

PROP_base_keyBindingList=Global Key Bindings
HINT_base_keyBindingList=Actions bound to shortcut keys for all editor types.

PROP_base_toolbarVisible=Show Toolbar
HINT_base_toolbarVisible=If True, display the editor toolbar.

PROP_base_textAntialiasing=Text Antialiasing
HINT_base_textAntialiasing=If True, text antialiasing will be used for font rendering.

PROP_codeFoldingProps=Code Folding
HINT_codeFoldingProps=Code Folding Properties

PROP_pairCharactersCompletion=Pair Character Completion
HINT_pairCharactersCompletion=Turn on/off inserting of closing braces and other characters.

# Component colorings related stuff
NAME_coloring_base-default=Default
HINT_coloring_base-default=Regular text in document.
EXAMPLE_coloring_base-default=regular text

NAME_coloring_base-line-number=Glyph and Line Number Margin 
HINT_coloring_base-line-number=Line numbers and glyph icon maring along left side of document.
EXAMPLE_coloring_base-line-number=123

NAME_coloring_base-selection=Selected Text
HINT_coloring_base-selection=Selected text in document.
EXAMPLE_coloring_base-selection=selected text

NAME_coloring_base-inc-search=Incremental Search
HINT_coloring_base-inc-search=Text currently found during an incremental search.
EXAMPLE_coloring_base-inc-search=incremental search

NAME_coloring_base-highlight-search=Highlighted by Search
HINT_coloring_base-highlight-search=Text highlighted after an incremental search.
EXAMPLE_coloring_base-highlight-search=highlight search

NAME_coloring_base-bookmark=Bookmark
HINT_coloring_base-bookmark=Bookmark in document.
EXAMPLE_coloring_base-bookmark=bookmark

NAME_coloring_base-guarded=Guarded Block
HINT_coloring_base-guarded=Guarded block (cannot be edited).
EXAMPLE_coloring_base-guarded=guarded block

NAME_coloring_base-code-folding=Code Folding
HINT_coloring_base-code-folding=Code folding icon in editor
EXAMPLE_coloring_base-code-folding={...}

NAME_coloring_base-code-folding-bar=Code Folding Bar
HINT_coloring_base-code-folding-bar=Code folding side bar
EXAMPLE_coloring_base-code-folding-bar=[+]

NAME_coloring_base-status-bar=Status Bar
HINT_coloring_base-status-bar=Regular status bar text.
EXAMPLE_coloring_base-status-bar=30:54

NAME_coloring_base-status-bar-bold=Search Wrapped
HINT_coloring_base-status-bar-bold=Bold text in the status bar.
EXAMPLE_coloring_base-status-bar-bold=Search wrapped

NAME_coloring_base-highlight-caret-row=Highlight Insertion Point Row
HINT_coloring_base_highlight-caret-row=Highlight the insertion point row.
EXAMPLE_coloring_base_highlight-caret-row=row text

NAME_coloring_base-highlight-match-brace=Matching Bracket
HINT_coloring_base_highlight-match-brace=Highlight bracket that matches the bracket before the insertion point.
EXAMPLE_coloring_base-highlight-match-brace=(


# the Base Colorings
NAME_coloring_base_text=Plain Text
HINT_coloring_base_text=Plain text.
EXAMPLE_coloring_base_text=text

NAME_coloring_base_error=Erroneous Text
HINT_coloring_base_error=Erroneous text.
EXAMPLE_coloring_base_error=error

# The Plain Colorings (those of PlainKit)
NAME_coloring_plain_text=Plain Text
HINT_coloring_plain_text=Plain text.
EXAMPLE_coloring_plain_text=text

NAME_coloring_plain_error=Erroneous Text
HINT_coloring_plain_error=Erroneous text.
EXAMPLE_coloring_plain_error=error



# The Java colorings. Some of them are generalized for a group
# of the same type, others are independent

    # java-keywords
    NAME_coloring_java-keywords=Java Keyword
    HINT_coloring_java-keywords=Java keyword.
    EXAMPLE_coloring_java-keywords=keyword
    # java-boolean
    NAME_coloring_java-boolean=boolean
    HINT_coloring_java-boolean=
    EXAMPLE_coloring_java-boolean=boolean
    # java-byte
    NAME_coloring_java-byte=byte
    HINT_coloring_java-byte=
    EXAMPLE_coloring_java-byte=byte
    # java-char
    NAME_coloring_java-char=char
    HINT_coloring_java-char=
    EXAMPLE_coloring_java-char=char
    # java-double
    NAME_coloring_java-double=double
    HINT_coloring_java-double=
    EXAMPLE_coloring_java-double=double
    # java-float
    NAME_coloring_java-float=float
    HINT_coloring_java-float=
    EXAMPLE_coloring_java-float=float
    # java-int
    NAME_coloring_java-int=int
    HINT_coloring_java-int=
    EXAMPLE_coloring_java-int=int
    # java-long
    NAME_coloring_java-long=long
    HINT_coloring_java-long=
    EXAMPLE_coloring_java-long=long
    # java-short
    NAME_coloring_java-short=short
    HINT_coloring_java-short=
    EXAMPLE_coloring_java-short=short
    # java-void
    NAME_coloring_java-void=void
    HINT_coloring_java-void=
    EXAMPLE_coloring_java-void=void
    # java-abstract
    NAME_coloring_java-abstract=abstract
    HINT_coloring_java-abstract=
    EXAMPLE_coloring_java-abstract=abstract
    # java-break
    NAME_coloring_java-break=break
    HINT_coloring_java-break=
    EXAMPLE_coloring_java-break=break
    # java-case
    NAME_coloring_java-case=case
HINT_coloring_java-case=
HINT_base_optionsVersion=Version of the options.
PROP_base_optionsVersion=Version of the Options
PROP_optionsVersion=Version of the Options
HINT_optionsVersion=Version of the options.
    EXAMPLE_coloring_java-case=case
    # java-catch
    NAME_coloring_java-catch=catch
    HINT_coloring_java-catch=
    EXAMPLE_coloring_java-catch=catch
    # java-class
    NAME_coloring_java-class=class
    HINT_coloring_java-class=
    EXAMPLE_coloring_java-class=class
    # java-const
    NAME_coloring_java-const=const
    HINT_coloring_java-const=
    EXAMPLE_coloring_java-const=const
    # java-continue
    NAME_coloring_java-continue=continue
    HINT_coloring_java-continue=
    EXAMPLE_coloring_java-continue=continue
    # java-default
    NAME_coloring_java-default=default
    HINT_coloring_java-default=
    EXAMPLE_coloring_java-default=default
    # java-do
    NAME_coloring_java-do=do
    HINT_coloring_java-do=
    EXAMPLE_coloring_java-do=do
    # java-else
    NAME_coloring_java-else=else
    HINT_coloring_java-else=
    EXAMPLE_coloring_java-else=else
    # java-extends
    NAME_coloring_java-extends=extends
    HINT_coloring_java-extends=
    EXAMPLE_coloring_java-extends=extends
    # java-false
    NAME_coloring_java-false=false
    HINT_coloring_java-false=
    EXAMPLE_coloring_java-false=false
    # java-final
    NAME_coloring_java-final=final
    HINT_coloring_java-final=
    EXAMPLE_coloring_java-final=final
    # java-finally
    NAME_coloring_java-finally=finally
    HINT_coloring_java-finally=
    EXAMPLE_coloring_java-finally=finally
    # java-for
    NAME_coloring_java-for=for
    HINT_coloring_java-for=
    EXAMPLE_coloring_java-for=for
    # java-goto
    NAME_coloring_java-goto=goto
    HINT_coloring_java-goto=
    EXAMPLE_coloring_java-goto=goto
    # java-if
    NAME_coloring_java-if=if
    HINT_coloring_java-if=
    EXAMPLE_coloring_java-if=if
    # java-implements
    NAME_coloring_java-implements=implements
    HINT_coloring_java-implements=
    EXAMPLE_coloring_java-implements=implements
    # java-import
    NAME_coloring_java-import=import
    HINT_coloring_java-import=
    EXAMPLE_coloring_java-import=import
    # java-instanceof
    NAME_coloring_java-instanceof=instanceof
    HINT_coloring_java-instanceof=
    EXAMPLE_coloring_java-instanceof=instanceof
    # java-interface
    NAME_coloring_java-interface=interface
    HINT_coloring_java-interface=
    EXAMPLE_coloring_java-interface=interface
    # java-native
    NAME_coloring_java-native=native
    HINT_coloring_java-native=
    EXAMPLE_coloring_java-native=native
    # java-new
    NAME_coloring_java-new=new
    HINT_coloring_java-new=
    EXAMPLE_coloring_java-new=new
    # java-null
    NAME_coloring_java-null=null
    HINT_coloring_java-null=
    EXAMPLE_coloring_java-null=null
    # java-package
    NAME_coloring_java-package=package
    HINT_coloring_java-package=
    EXAMPLE_coloring_java-package=package
    # java-private
    NAME_coloring_java-private=private
    HINT_coloring_java-private=
    EXAMPLE_coloring_java-private=private
    # java-protected
    NAME_coloring_java-protected=protected
    HINT_coloring_java-protected=
    EXAMPLE_coloring_java-protected=protected
    # java-public
    NAME_coloring_java-public=public
    HINT_coloring_java-public=
    EXAMPLE_coloring_java-public=public
    # java-return
    NAME_coloring_java-return=return
    HINT_coloring_java-return=
    EXAMPLE_coloring_java-return=return
    # java-static
    NAME_coloring_java-static=static
    HINT_coloring_java-static=
    EXAMPLE_coloring_java-static=static
    # java-super
    NAME_coloring_java-super=super
    HINT_coloring_java-super=
    EXAMPLE_coloring_java-super=super
    # java-switch
    NAME_coloring_java-switch=switch
    HINT_coloring_java-switch=
    EXAMPLE_coloring_java-switch=switch
    # java-synchronized
    NAME_coloring_java-synchronized=synchronized
    HINT_coloring_java-synchronized=
    EXAMPLE_coloring_java-synchronized=synchronized
    # java-this
    NAME_coloring_java-this=this
    HINT_coloring_java-this=
    EXAMPLE_coloring_java-this=this
    # java-throw
    NAME_coloring_java-throw=throw
    HINT_coloring_java-throw=
    EXAMPLE_coloring_java-throw=throw
    # java-throws
    NAME_coloring_java-throws=throws
    HINT_coloring_java-throws=
    EXAMPLE_coloring_java-throws=throws
    # java-transient
    NAME_coloring_java-transient=transient
    HINT_coloring_java-transient=
    EXAMPLE_coloring_java-transient=transient
    # java-true
    NAME_coloring_java-true=true
    HINT_coloring_java-true=
    EXAMPLE_coloring_java-true=true
    # java-try
    NAME_coloring_java-try=try
    HINT_coloring_java-try=
    EXAMPLE_coloring_java-try=try
    # java-volatile
    NAME_coloring_java-volatile=volatile
    HINT_coloring_java-volatile=
    EXAMPLE_coloring_java-volatile=volatile
    # java-while
    NAME_coloring_java-while=while
    HINT_coloring_java-while=
    EXAMPLE_coloring_java-while=while




# java-operators
NAME_coloring_java-operators=Java Operator
HINT_coloring_java-operators=Java operator.
EXAMPLE_coloring_java-operators=+-*/&|
    # java-eq
    NAME_coloring_java-eq=Assignment
    HINT_coloring_java-eq=Assignment operator.
    EXAMPLE_coloring_java-eq==
    # java-lt
    NAME_coloring_java-lt=Less Than
    HINT_coloring_java-lt="Less than" operator.
    EXAMPLE_coloring_java-lt=<
    # java-gt
    NAME_coloring_java-gt=Greater Than
    HINT_coloring_java-gt="Greater than" operator.
    EXAMPLE_coloring_java-gt=>
    # java-lshift
    NAME_coloring_java-lshift=Left Shift
    HINT_coloring_java-lshift=Left shift operator.
    EXAMPLE_coloring_java-lshift=<<
    # java-rsshift
    NAME_coloring_java-rsshift=Right shift
    HINT_coloring_java-rsshift=Right Shift operator.
    EXAMPLE_coloring_java-rsshift=>>
    # java-rushift
    NAME_coloring_java-rushift=Right Unsigned Shift
    HINT_coloring_java-rushift=Right unsigned shift operator.
    EXAMPLE_coloring_java-rushift=>>>
    # java-plus
    NAME_coloring_java-plus=Plus
    HINT_coloring_java-plus=Plus operator.
    EXAMPLE_coloring_java-plus=+
    # java-minus
    NAME_coloring_java-minus=Minus
    HINT_coloring_java-minus=Minus operator.
    EXAMPLE_coloring_java-minus=-
    # java-mul
    NAME_coloring_java-mul=Multiply
    HINT_coloring_java-mul=Multiply operator.
    EXAMPLE_coloring_java-mul=*
    # java-div
    NAME_coloring_java-div=Division
    HINT_coloring_java-div=Division operator.
    EXAMPLE_coloring_java-div=/
    # java-and
    NAME_coloring_java-and=And
    HINT_coloring_java-and=And operator.
    EXAMPLE_coloring_java-and=&
    # java-or
    NAME_coloring_java-or=Or
    HINT_coloring_java-or=Or operator.
    EXAMPLE_coloring_java-or=|
    # java-xor
    NAME_coloring_java-xor=Xor
    HINT_coloring_java-xor=Xor operator.
    EXAMPLE_coloring_java-xor=^
    # java-mod
    NAME_coloring_java-mod=Modulo
    HINT_coloring_java-mod=Modulo (reminder) operator.
    EXAMPLE_coloring_java-mod=%
    # java-not
    NAME_coloring_java-not=Not
    HINT_coloring_java-not=Logical not operator.
    EXAMPLE_coloring_java-not=!
    # java-neg
    NAME_coloring_java-neg=Negation
    HINT_coloring_java-neg=Negation operator.
    EXAMPLE_coloring_java-neg=~
    # java-eq-eq
    NAME_coloring_java-eq-eq=Equivalence
    HINT_coloring_java-eq-eq=Equivalence operator.
    EXAMPLE_coloring_java-eq-eq===
    # java-le
    NAME_coloring_java-le=Less Or Equal
    HINT_coloring_java-le="Less or equal" operator.
    EXAMPLE_coloring_java-le=<=
    # java-ge
    NAME_coloring_java-ge=Greater Or Equal
    HINT_coloring_java-ge="Greater or equal" operator.
    EXAMPLE_coloring_java-ge=>=
    # java-lshift-eq
    NAME_coloring_java-lshift-eq=
    HINT_coloring_java-lshift-eq=
    EXAMPLE_coloring_java-lshift-eq=<<=
    # java-rsshift-eq
    NAME_coloring_java-rsshift-eq=
    HINT_coloring_java-rsshift-eq=
    EXAMPLE_coloring_java-rsshift-eq=>>=
    # java-rushift-eq
    NAME_coloring_java-rushift-eq=
    HINT_coloring_java-rushift-eq=
    EXAMPLE_coloring_java-rushift-eq=>>>=
    # java-plus-eq
    NAME_coloring_java-plus-eq=
    HINT_coloring_java-plus-eq=
    EXAMPLE_coloring_java-plus-eq=+=
    # java-minus-eq
    NAME_coloring_java-minus-eq=
    HINT_coloring_java-minus-eq=
    EXAMPLE_coloring_java-minus-eq=-=
    # java-mul-eq
    NAME_coloring_java-mul-eq=
    HINT_coloring_java-mul-eq=
    EXAMPLE_coloring_java-mul-eq=*=
    # java-div-eq
    NAME_coloring_java-div-eq=
    HINT_coloring_java-div-eq=
    EXAMPLE_coloring_java-div-eq=/=
    # java-and-eq
    NAME_coloring_java-and-eq=
    HINT_coloring_java-and-eq=
    EXAMPLE_coloring_java-and-eq=&=
    # java-or-eq
    NAME_coloring_java-or-eq=
    HINT_coloring_java-or-eq=
    EXAMPLE_coloring_java-or-eq=!=
    # java-xor-eq
    NAME_coloring_java-xor-eq=
    HINT_coloring_java-xor-eq=
    EXAMPLE_coloring_java-xor-eq=^=
    # java-mod-eq
    NAME_coloring_java-mod-eq=
    HINT_coloring_java-mod-eq=
    EXAMPLE_coloring_java-mod-eq=%=
    # java-not-eq
    NAME_coloring_java-not-eq=
    HINT_coloring_java-not-eq=
    EXAMPLE_coloring_java-not-eq=!=
    # java-dot
    NAME_coloring_java-dot=Dot
    HINT_coloring_java-dot=Dot operator.
    EXAMPLE_coloring_java-dot=.
    # java-comma
    NAME_coloring_java-comma=Comma
    HINT_coloring_java-comma=Comma operator.
    EXAMPLE_coloring_java-comma=,
    # java-colon
    NAME_coloring_java-colon=
    HINT_coloring_java-colon=
    EXAMPLE_coloring_java-colon=:
    # java-semicolon [PENDING: Not an operator]
    # NAME_coloring_java-semicolon=
    # HINT_coloring_java-semicolon=
    # EXAMPLE_coloring_java-semicolon=
    # java-question
    NAME_coloring_java-question=
    HINT_coloring_java-question=
    EXAMPLE_coloring_java-question=?
    # java-lparen
    NAME_coloring_java-lparen=
    HINT_coloring_java-lparen=
    EXAMPLE_coloring_java-lparen=(
    # java-rparen
    NAME_coloring_java-rparen=
    HINT_coloring_java-rparen=
    EXAMPLE_coloring_java-rparen=)
    # java-lbracket
    NAME_coloring_java-lbracket=
    HINT_coloring_java-lbracket=
    EXAMPLE_coloring_java-lbracket=[
    # java-rbracket
    NAME_coloring_java-rbracket=
    HINT_coloring_java-rbracket=
    EXAMPLE_coloring_java-rbracket=]
    # java-lbrace [PENDING: Not an operator]
    # NAME_coloring_java-lbrace=
    # HINT_coloring_java-lbrace=
    # EXAMPLE_coloring_java-lbrace={
    # java-rbrace [PENDING: Not an operator]
    # NAME_coloring_java-rbrace=
    # HINT_coloring_java-rbrace=
    # EXAMPLE_coloring_java-rbrace=}
    # java-plus-plus
    NAME_coloring_java-plus-plus=Increment
    HINT_coloring_java-plus-plus=Increment operator.
    EXAMPLE_coloring_java-plus-plus=++
    # java-minus-minus
    NAME_coloring_java-minus-minus=Decrement
    HINT_coloring_java-minus-minus=Decrement operator.
    EXAMPLE_coloring_java-minus-minus=--
    # java-and-and
    NAME_coloring_java-and-and=
    HINT_coloring_java-and-and=
    EXAMPLE_coloring_java-and-and=&&
    # java-or-or
    NAME_coloring_java-or-or=
    HINT_coloring_java-or-or=
    EXAMPLE_coloring_java-or-or=||



# java-numeric-literals, the grouping and the elements
NAME_coloring_java-numeric-literals=Numeric Literal
HINT_coloring_java-numeric-literals=Numeric constant.
EXAMPLE_coloring_java-numeric-literals=5
    # java-int-literal
    NAME_coloring_java-int-literal=Integer Literal
    HINT_coloring_java-int-literal=Integer constant.
    EXAMPLE_coloring_java-int-literal=1234567
    # java-long-literal
    NAME_coloring_java-long-literal=Long Integer Literal
    HINT_coloring_java-long-literal=Long integer constant.
    EXAMPLE_coloring_java-long-literal=12345L
    # java-hex-literal
    NAME_coloring_java-hex-literal=Hexadecimal Literal
    HINT_coloring_java-hex-literal=Hexadecimal constant.
    EXAMPLE_coloring_java-hex-literal=0x9A
    # java-octal-literal
    NAME_coloring_java-octal-literal=Octal Literal
    HINT_coloring_java-octal-literal=Octal constant.
    EXAMPLE_coloring_java-octal-literal=057
    # java-float-literal
    NAME_coloring_java-float-literal=Float Literal
    HINT_coloring_java-float-literal=Floating-point constant.
    EXAMPLE_coloring_java-float-literal=1.02f
    # java-double-literal
    NAME_coloring_java-double-literal=Double Literal
    HINT_coloring_java-double-literal=Double floating-point constant.
    EXAMPLE_coloring_java-double-literal=3.55d


    # java-errors
    NAME_coloring_java-errors=Error In Sources
    HINT_coloring_java-errors=Erroneous text (marked by the compiler).
    EXAMPLE_coloring_java-errors=error

    # java-incomplete-string-literal
    NAME_coloring_java-incomplete-string-literal=
    HINT_coloring_java-incomplete-string-literal=
    EXAMPLE_coloring_java-incomplete-string-literal="tex
    # java-incomplete-char-literal
    NAME_coloring_java-incomplete-char-literal=
    HINT_coloring_java-incomplete-char-literal=
    EXAMPLE_coloring_java-incomplete-char-literal='a
    # java-incomplete-hex-literal
    NAME_coloring_java-incomplete-hex-literal=
    HINT_coloring_java-incomplete-hex-literal=
    EXAMPLE_coloring_java-incomplete-hex-literal=0x
    # java-invalid-char
    NAME_coloring_java-invalid-char=
    HINT_coloring_java-invalid-char=
    EXAMPLE_coloring_java-invalid-char='aa'
    # java-invalid-operator
    NAME_coloring_java-invalid-operator=
    HINT_coloring_java-invalid-operator=
    EXAMPLE_coloring_java-invalid-operator=
    # java-invalid-octal-literal
    NAME_coloring_java-invalid-octal-literal=
    HINT_coloring_java-invalid-octal-literal=
    EXAMPLE_coloring_java-invalid-octal-literal=
    # java-invalid-comment-end
    NAME_coloring_java-invalid-comment-end=
    HINT_coloring_java-invalid-comment-end=
    EXAMPLE_coloring_java-invalid-comment-end=


# java-whitespace
NAME_coloring_java-whitespace=Whitespace
HINT_coloring_java-whitespace=Whitespace.
EXAMPLE_coloring_java-whitespace=

# java-identifier
NAME_coloring_java-identifier=Java Identifier
HINT_coloring_java-identifier=Java identifier.
EXAMPLE_coloring_java-identifier=id

# java-annotation "@ident" in JDK1.5
NAME_coloring_java-annotation=Java Annotation
HINT_coloring_java-annotation=Java Annotation.
EXAMPLE_coloring_java-annotation=@

# java-line-comment
NAME_coloring_java-line-comment=Single-line Comment
HINT_coloring_java-line-comment=Single-line comment.
EXAMPLE_coloring_java-line-comment=// line-comment

# java-block-comment
NAME_coloring_java-block-comment=Block Comment
HINT_coloring_java-block-comment=Block (multi-line) comment.
EXAMPLE_coloring_java-block-comment=/* block comment */

# java-char-literal
NAME_coloring_java-char-literal=Character Literal
HINT_coloring_java-char-literal=Character constant.
EXAMPLE_coloring_java-char-literal='\\n'

# java-string-literal
NAME_coloring_java-string-literal=String Literal
HINT_coloring_java-string-literal=String constant.
EXAMPLE_coloring_java-string-literal="string"

#-------------------------------------------------------------------------------
NAME_coloring_java-layer-method=Java Method Call
HINT_coloring_java-layer-method=Java method (or constructor) call.
EXAMPLE_coloring_java-layer-method=method()
#-------------------------------------------------------------------------------
NAME_coloring_html-text=Plain Text
HINT_coloring_html-text=Plain text.
EXAMPLE_coloring_html-text=text

NAME_coloring_html-ws=White Space
HINT_coloring_html-ws=White space.
EXAMPLE_coloring_html-ws=

NAME_coloring_html-error=Erroneous Text
HINT_coloring_html-error=Erroneous text.
EXAMPLE_coloring_html-error=<A\

NAME_coloring_html-tag=HTML Tag
HINT_coloring_html-tag=HTML tag.
EXAMPLE_coloring_html-tag=<TABLE>

NAME_coloring_html-argument=Attribute of a Tag
HINT_coloring_html-argument=Attribute of a tag.
EXAMPLE_coloring_html-argument=href

NAME_coloring_html-operator=HTML Special Syntax
HINT_coloring_html-operator=HTML special syntax.
EXAMPLE_coloring_html-operator==

NAME_coloring_html-value=Attribute Value
HINT_coloring_html-value=Value of an attribute.
EXAMPLE_coloring_html-value="value"

NAME_coloring_html-block-comment=HTML Comment
HINT_coloring_html-block-comment=HTML comment.
EXAMPLE_coloring_html-block-comment=<!-- comment -->

NAME_coloring_html-sgml-comment=SGML-type Comment
HINT_coloring_html-sgml-comment=Comment in SGML declaration.
EXAMPLE_coloring_html-sgml-comment=-- comment --

NAME_coloring_html-sgml-declaration=SGML Declaration
HINT_coloring_html-sgml-declaration=SGML declaration.
EXAMPLE_coloring_html-sgml-declaration=<!DOCTYPE ... >


NAME_coloring_html-character=Character Reference
HINT_coloring_html-character=Character reference.
EXAMPLE_coloring_html-character=&amp;

#-------------------------------------------------------------------------------

# Indentation Engine customizer
PROP_indentEngine_expandTabs=Expand Tabs to Spaces
HINT_indentEngine_expandTabs=If True, automatically converts tabs in the document to spaces padded to the same column.
PROP_indentEngine_spacesPerTab=Number of Spaces per Tab
HINT_indentEngine_spacesPerTab=Number of spaces to be inserted when pressing tab.
LAB_SimpleIndentEngine=Simple Indentation Engine
HINT_SimpleIndentEngine=Simple indentation engine.


# CaretTypeEditor
LINE_CARET=Vertical Bar
THIN_LINE_CARET=Thin Vertical Bar
BLOCK_CARET=Solid Block

#Settings for font and color property editor
#ColoringEditorPanel
CEP_FontTitle=\ Font 
ACSD_CEP_Font=
CEP_FontTrans=\ Inherit
CEP_FontTrans_Mnemonic=I
ACSD_CEP_FontTrans=
CEP_FgTitle=\ Foreground Color 
ACSD_CEP_Fg=
CEP_FgTrans=\ Inherit
CEP_FgTrans_Mnemonic=N
ACSD_CEP_FgTrans=
CEP_BgTitle=\ Background Color 
ACSD_CEP_Bg=
CEP_BgTrans=\ Inherit
CEP_BgTrans_Mnemonic=E
ACSD_CEP_BgTrans=
CEP_PreviewTitle=\ Preview 
ACSN_CEP_Preview=Color Preview
ACSD_CEP_Preview=

#ColoringArrayEditorPanel
CAEP_SyntaxLabel=Syntax:
CAEP_SyntaxLabel_Mnemonic=S
ACSD_CAEP_Syntax=
CAEP_ColoringLabel=Coloring
CAEP_DefaultColoringName=DEFAULT
ACSD_CAEP_Panel=

#CodeFoldingEditorPanel
CFEP_UseCF=\ Use Code Folding
CFEP_UseCF_Mnemonic=U
CFEP_CollapsedByDefault=Fold Types Collapsed by Default:
CFEP_Method=\ Method
CFEP_Method_Mnemonic=M
CFEP_InnerClass=\ Inner Class
CFEP_InnerClass_Mnemonic=n
CFEP_Import=\ Import
CFEP_Import_Mnemonic=I
CFEP_Javadoc=\ Javadoc Comment
CFEP_Javadoc_Mnemonic=J
CFEP_InitialComment=\ Initial Comment
CFEP_InitialComment_Mnemonic=t

#KeyBindingsEditorPanel
KBEP_Actions=Actions:
ACSN_KBEP_Actions=Actions
ACSD_KBEP_Actions=
KBEP_Sequences=Keybindings:
KBEP_Sequences_Mnemonic=K
ACSD_KBEP_Sequences=
KBEP_Add=Add...
KBEP_Add_Mnemonic=A
ACSD_KBEP_Add=
KBEP_Remove=Remove
KBEP_Remove_Mnemonic=R
ACSD_KBEP_Remove=
KBEP_action_sort_button=\ Sort by Action
KBEP_action_sort_button_mnemonic=S
ACSD_KBEP_action_sort_button=
KBEP_name_sort_button=\ Sort by Name
KBEP_name_sort_button_mnemonic=N
ACSD_KBEP_name_sort_button=
ACSD_KBEP_Panel=

#KeyBindingsEditorPanel.KeySequenceRequester
KBEP_AddSequence=Add Keybinding
KBEP_OK_LABEL=OK
KBEP_CLEAR_LABEL=Clear
KBEP_CLEAR_Mnemonic=C
ACSD_KBEP_OK=
ACSD_KBEP_CLEAR=
KBEP_FMT_Collision=This shortcut sequence conflicts with sequence <{0}> bound to "{1}".
LBL_KSIP_Sequence=Shortcut Sequence:

PROP_KeyBindings=Key Bindings
PROP_Abbreviations=Abbreviations
PROP_Macros=Macros
PROP_CodeFolding=Code Folding

#AbbrevsEditorPanel
AEP_EnterAbbrev=Enter Abbreviation
AEP_AbbrevTitle=Abbreviation
AEP_ExpandTitle=Expanded String
AEP_Add=Add...
AEP_Add_Mnemonic=A
ACSD_AEP_Add=
AEP_Edit=Edit...
AEP_Edit_Mnemonic=E
ACSD_AEP_Edit=
AEP_Remove=Remove
AEP_Remove_Mnemonic=R
ACSD_AEP_Remove=
AIP_Abbrev=Abbreviation:
AIP_Abbrev_Mnemonic=A
ACSD_AIP_Abbrev=
AIP_Expand=Expansion:
AIP_Expand_Mnemonic=E
ACSD_AIP_Expand
ACSN_AEP_Table=Abbreviations
ACSD_AEP_Table=
ACSD_AEP=
ACSD_AIP=
AEP_Overwrite=Abbreviation "{0}" already exists for "{1}". \nReplace with "{2}"?

#MacrosEditorPanel
MEP_EnterMacro=Enter Macro
MEP_MacroTitle=Macro
MEP_ExpandTitle=Expanded String
MEP_Add=Add...
MEP_Add_Mnemonic=A
ACSD_MEP_Add=
MEP_Edit=Edit...
MEP_Edit_Mnemonic=E
ACSD_MEP_Edit=
MEP_Remove=Remove
MEP_Remove_Mnemonic=R
ACSD_MEP_Remove=
ACSN_MEP_Table=Macros
ACSD_MEP_Table=
ACSD_MEP=
MEP_Overwrite=Macro <{0}> already exists. \nReplace with the new content?

MIP_Macro=Macro:
MIP_Macro_Mnemonic=M
ACSD_MIP_Macro=
MIP_Expand=Expansion:
MIP_Expand_Mnemonic=E
ACSD_MIP_Expand=
ACSD_MIP=

# ScrollInsetsCustomEditor
SIE_EXC_BadFormatValue=Value should be in format [top[%],left[%],bottom[%],right[%]]
SIC_InvalidValue=Invalid value entered
SICE_Insets=\ Insets 
SICE_Top=Top:
SICE_Top_Mnemonic=T
ACSD_SICE_Top=
SICE_Bottom=Bottom:
SICE_Bottom_Mnemonic=B
ACSD_SICE_Bottom=
SICE_Left=Left:
SICE_Left_Mnemonic=L
ACSD_SICE_Left=
SICE_Right=Right:
SICE_Right_Mnemonic=R
ACSD_SICE_Right=
ACSD_SICE_Top=
ACSD_SICE_Bottom=
ACSD_SICE_Left=
ACSD_SICE_Right=
ACSD_SICE=

# Coloring desc
PROP_Coloring=Fonts & Colors
HINT_Coloring=Font, background color, foreground color.

# Tool tip for "green" fields
HINT_HitEnter=Hit the action key to make the change.

# Add/Rem buttons
Add=Add
Remove=Remove

# title
TITLE_EditPanel=Edit

HINT_BOOKMARK=Bookmark

ATN_AnnotationTypesNode_Name=Annotation Types
ATN_AnnotationTypesNode_Description=All registered annotation types

PROP_AT_HIGHLIGHT=Highlight Color
HINT_AT_HIGHLIGHT=Color of the background highlight.
PROP_AT_USE_HIGHLIGHT=Use Highlight Color
HINT_AT_USE_HIGHLIGHT=If True, the highlight color is used.
PROP_AT_FOREGROUND=Foreground Color
HINT_AT_FOREGROUND=Color of the text.
PROP_AT_WAVEUNDERLINE=Wave Underline Color
HINT_AT_WAVEUNDERLINE=Color of the wave underline.
PROP_AT_USE_WAVEUNDERLINE=Use Wave Underline
HINT_AT_USE_WAVEUNDERLINE=If True, the wave underline is used.
PROP_AT_INHERIT_FOREGROUND=Inherit Foreground Colors
HINT_AT_INHERIT_FOREGROUND=If True, the foreground color is used.
PROP_AT_WHOLELINE=Whole Line
HINT_AT_WHOLELINE=If True, this annotation type is whole line annotation type.
ERR_NoContentTypeDefined =KitClass {0} has not defined method getContentType(). It should not be displayed as node in Editor Settings.

PROP_backgroundDrawing=Draw Glyphs on Background
HINT_backgroundDrawing=If True, annotation glyphs that are covered by another annotation glyph are drawn on the background under the Source Editor text.
PROP_backgroundGlyphAlpha=Glyph Icon Alpha
HINT_backgroundGlyphAlpha=Percentage of alpha value for the glyph icons that are drawn on the background.
PROP_combineGlyphs=Combine Annotations
HINT_combineGlyphs=If True, annotation glyphs can be combined.
PROP_glyphsOverLineNumbers=Draw Glyph Over Line Numbers
HINT_glyphsOverLineNumbers=If True, glyph icons can be drawn over the line numbers.
PROP_showGlyphGutter=Always Show Glyph Margin
HINT_showGlyphGutter=Show glyph margin even when there are no annotations.
