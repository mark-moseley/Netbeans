<?xml version="1.0" encoding="UTF-8"?> <!-- -*- sgml-indent-step: 2 -*- -->
<!--
The contents of this file are subject to the terms of the Common Development
and Distribution License (the License). You may not use this file except in
compliance with the License.

You can obtain a copy of the License at http://www.netbeans.org/cddl.html
or http://www.netbeans.org/cddl.txt.

When distributing Covered Code, include this CDDL Header Notice in each file
and include the License file at http://www.netbeans.org/cddl.txt.
If applicable, add the following below the CDDL Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
Microsystems, Inc. All Rights Reserved.
-->

<project name="websvcddapi" default="netbeans" basedir=".">
  <import file="../../nbbuild/templates/projectized.xml"/>

  <property name="s2b_root_1_1" location="src/org/netbeans/modules/j2ee/dd/impl/webservices/model_1_1"/>
  <property name="s2b_root_1_2" location="src/org/netbeans/modules/j2ee/dd/impl/webservices/model_1_2"/>
  <property name="s2b_res_root" location="src/org/netbeans/modules/j2ee/dd/impl/resources"/>

  <target name="s2binit" depends="build-init">
	<taskdef name="schema2beans" classname="org.netbeans.modules.s2banttask.Schema2BeansAntTask">
	  <classpath>
		<pathelement path="${schema2beans/rt.dir}/modules/org-netbeans-modules-schema2beans.jar" />
		<pathelement path="${nb_all}/schema2beans/dev/schema2beansdev.jar" />
		<pathelement path="${nb_all}/schema2beans/anttask/s2banttask.jar"/>
	  </classpath>
	</taskdef>
  </target>
  
   <target name="dd2beansgen" depends="s2binit">
     <echo message="generating code generation input file information" />

	<schema2beans schema="${s2b_res_root}/j2ee_web_services_1_1.xsd"
 	  mddFile="${s2b_res_root}/j2ee_web_services_1_1.mdd"
	  package="org.netbeans.modules.j2ee.dd.impl.webservices.model_1_1"
      schemaType="xmlschema"
	  rootDir="src"
	  validate="true"
	  attrProp="true"
	  generateHasChanged="true"
	  outputType="javabeans"
	  commonInterface="CommonBean"
	  useInterfaces="true"
	  extendBaseBean="true"
	  finder="on /webservices find webservice-description by webservice-description-name,on /webservices/webservice-description/port-component find handler by handler-name,on /webservices/webservice-description/port-component/handler find init-param by param-name,on /webservices/webservice-description find port-component by port-component-name"/>
          
	<schema2beans schema="${s2b_res_root}/javaee_web_services_1_2.xsd"
 	  mddFile="${s2b_res_root}/javaee_web_services_1_2.mdd"
	  package="org.netbeans.modules.j2ee.dd.impl.webservices.model_1_2"
      schemaType="xmlschema"
	  rootDir="src"
	  validate="true"
	  attrProp="true"
	  generateHasChanged="true"
	  outputType="javabeans"
	  commonInterface="CommonBean"
	  useInterfaces="true"
	  extendBaseBean="true"
	  finder="on /webservices find webservice-description by webservice-description-name,on /webservices/webservice-description/port-component find handler by handler-name,on /webservices/webservice-description/port-component/handler find init-param by param-name,on /webservices/webservice-description find port-component by port-component-name"/>
  </target>

  <target name="compile" depends="dd2beansgen,init">
      <!-- the following code is copied from common.xml it just adds fork="true" to the javac to prevent
        OutOfMemoryError when running ant without special args
        -->
        <mkdir dir="${build.classes.dir}"/>
        <depend srcdir="${src.dir}" destdir="${build.classes.dir}" cache="build/depcache">
            <classpath refid="cp"/>
        </depend>
        <javac fork="true" srcdir="${src.dir}" destdir="${build.classes.dir}" debug="${build.compiler.debug}" debuglevel="${build.compiler.debuglevel}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="${javac.source}" target="${javac.target}" includeantruntime="false">
            <classpath refid="cp"/>
            <compilerarg line="${javac.compilerargs}"/>
        </javac>
        <!-- Sanity check: -->
        <pathconvert pathsep=":" property="class.files.in.src">
            <path>
                <fileset dir="${src.dir}">
                    <include name="**/*.class"/>
                </fileset>
            </path>
        </pathconvert>
        <fail>
            <condition>
                <not>
                    <equals arg1="${class.files.in.src}" arg2=""/>
                </not>
            </condition>
            You have stray *.class files in ${src.dir} which you must remove.
            Probably you failed to clean your sources before updating them from CVS.
        </fail>
        <!-- OK, continue: -->
        <copy todir="${build.classes.dir}">
            <!-- #58298: strip comments to save some space -->
            <fileset dir="${src.dir}" includes="**/*.properties"/>
            <filterchain>
                <tokenfilter>
                    <!-- #61965: preserve #NOI18N and similar comments -->
                    <filetokenizer/>
                    <replaceregex pattern="^#(?!(PART)?(NO)?I18N).*[\r\n]+" replace="" flags="gm"/>
                </tokenfilter>
            </filterchain>
        </copy>
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.dir}" excludes="${jar-excludes}"/>
        </copy>
  </target>
  
  <target name="clean" depends="clean-ddgen-src, clean-javadoc, projectized-common.clean"/>

  <target name="clean-ddgen-src">
        <mkdir dir="${s2b_root_1_1}"/>
        <mkdir dir="${s2b_root_1_2}"/>
        <delete>
            <fileset dir="${s2b_root_1_1}">
                <include name="*.java"/>
            </fileset>
             <fileset dir="${s2b_root_1_2}">
                <include name="*.java"/>
            </fileset>
        </delete>
        <delete dir="${s2b_root_1_1}"/>
        <delete dir="${s2b_root_1_2}"/>
  </target>
  
  <target name="clean-javadoc">
  	<delete dir="javadoc"/>
  </target>

</project>
