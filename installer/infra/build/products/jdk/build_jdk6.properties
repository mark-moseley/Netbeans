# 
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
# 
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
# 
# The contents of this file are subject to the terms of either the GNU General Public
# License Version 2 only ("GPL") or the Common Development and Distribution
# License("CDDL") (collectively, the "License"). You may not use this file except in
# compliance with the License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the
# License for the specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header Notice in
# each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Sun
# designates this particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that accompanied this code.
# If applicable, add the following below the License Header, with the fields enclosed
# by brackets [] replaced by your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
# 
# Contributor(s):
# 
# The Original Software is NetBeans. The Initial Developer of the Original Software
# is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All
# Rights Reserved.
# 
# If you wish your version of this file to be governed by only the CDDL or only the
# GPL Version 2, indicate your decision by adding "[Contributor] elects to include
# this software in this distribution under the [CDDL or GPL Version 2] license." If
# you do not indicate a single choice of license, a recipient has the option to
# distribute your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above. However, if you
# add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the
# option applies only if the new code is made subject to such option by the copyright
# holder.
# 

# path to the directory where the base build scripts library and properties 
# reside
common.dir=../../../../../nbi/infra/build/.common

# path to the local working directory; this directory which will be the target 
# for checking out the sources and will be used for the build process
# * this path can be either absolute or relative in any unix environment, 
#   however, only relative paths are supported on windows, as the cygwin scp 
#   command does not properly handle colon in local paths
work.dir=./build

# path to the local distributive directory; this directory will contain the 
# distributive file, when (if) the build script finishes successfully
dist.dir=./dist

# path to the products's sources within the cvs module; it should be a relative 
# path from the module's root, e.g. for 'nbi/engine', where 'nbi is the module 
# name, the path should be 'engine'
cvs.path=components/products/jdk

# core product properties: 
# * ${product.uid} - product "family" (e.g. nb-ide)
# * ${product.version} - actual products' version; together with the uid it 
#   forms the unique identifier for the product)
# * ${product.platforms} - the list of platforms that are supported by this 
#   product (note that this property is not related to native libraries)
product.uid=jdk
product.version=1.6.0.7.6
#product.platforms= - will be overriden, as we need to build several times 
#                     for several platforms

# miscellaneous product properties:
# * ${product.status} - default status that the product will have in the 
#   registry. it is meant to be always "not-installed", unless you want 
#   something really exotic
# * ${product.offset} - order of the product's node among its parent's 
#   children, the bigger the offset value, the further the product's node will 
#   be
# * ${product.expand} - whether to automatically expand the product's node in 
#   the components tree or not; 'true'/'false'
# * ${product.visible} - whether the product's node is visible or not (note 
#   that this value will be modified at nbi runtime, 'true' may become 'false' 
#   if the product is filtered out); 'true'/'false'
# * ${product.features} - list of features that this porduct belongs to; the 
#   list should be space-separated
product.status=not-installed
product.offset=10000
product.expand=false
product.visible=true
product.features=

# list of configuration logic jar files; normally the first one would be the 
# distributive file of the product's netbeans project
# * ${product.logic.length} - total number of the files
# * indices should start with 1
product.logic.length=1
product.logic.1.uri=file:${nbproject.dist.dir}/${nbproject.dist.file.name}

# list of product installation data files
# * ${product.data.length} - total number of the files
# * ${product.data.N.uri} - uri at which the installation data file is located
# * ${product.data.N.zip} - whether the data file is a zip archive which needs to 
#   be extracted or it is a file that should be used directly; 'true'/'false'
# * indices should start with 1
product.data.length=1
product.data.1.uri.prefix=${glassfish.builds.host}/java/re/j2sdk/1.6.0_07/promoted/fcs/b06/bundles
product.data.1.uri.windows=${product.data.1.uri.prefix}/windows-i586/jdk-6u7-windows-i586-p.exe
product.data.1.uri.linux=${product.data.1.uri.prefix}/linux-i586/jdk-6u7-linux-i586.bin
product.data.1.uri.solaris-x86=${product.data.1.uri.prefix}/solaris-i586/jdk-6u7-solaris-i586.sh
product.data.1.uri.solaris-sparc=${product.data.1.uri.prefix}/solaris-sparc/jdk-6u7-solaris-sparc.sh
product.data.1.zip=false

# modificator for the required disk space parameter; the core value will be the
# sum of unzipped unstallation data files
# * the measurement unit is one byte
product.disk.space.modificator.windows=250000000
product.disk.space.modificator.linux=150000000
product.disk.space.modificator.solaris-sparc=150000000
product.disk.space.modificator.solaris-x86=140000000
product.disk.space.modificator=${product.disk.space.modificator.${product.platforms}}


# product's requirements (i.e. other products that should be installed
# in order for this product to succesfully install and function)
# * ${product.requirements.length} - total number of the requirements
# * indices should start with 1
product.requirements.length=0
#product.requirements.1.uid=
#product.requirements.1.version-lower=
#product.requirements.1.version-upper=

# product's conflicts (i.e. other products that prevent this product from 
# functioning correctly, and thus cannot be installed together with it)
# * ${product.conflicts.length} - total number of the conflicts
# * indices should start with 1
product.conflicts.length=0
#product.conflicts.1.uid=
#product.conflicts.1.version-lower=
#product.conflicts.1.version-upper=

# other products that should be installed prior to this product; these 
# dependencies do not imply that the dependent product will be installed at 
# all, but if both the current and the dependent product are selected for 
# installation, the latter will be installed first
# * ${product.install-afters.length} - total number of the install-afters
# * indices should start with 1
#product.install-afters.length=
#product.install-afters.1.uid=

# additional product's properties; these will appear in the product's 
# descriptor and in the registry in the form of 
# <property name="[name]">value</property> tags.
# * ${product.properties.length} - total number of the properties
# * indices should start with 1
# * properties are not i18n compliant
product.properties.length=2
product.properties.1.name=installation.location
product.properties.1.value=$N{install}/jdk1.6.0_07
product.properties.2.name=installation.location.windows
product.properties.2.value=$N{install}/Java/jdk1.6.0_07


# sources parameters; a search-and-replace will be run over the sources after 
# check-out, replacing [token] => [value]; regular expressions are not allowed
# * ${sources.params.length} - total number of the parameters
# * indices should start with 1
# * parameters are not i18n compliant
sources.params.length=4
sources.params.1.token={display-version}
sources.params.1.value=6 Update 7
sources.params.2.token={jdk-installer-file}
sources.params.2.value.windows=jdk-6u7-windows-i586-p.exe
sources.params.2.value.linux=jdk-6u7-linux-i586.bin
sources.params.2.value.solaris-x86=jdk-6u7-solaris-i586.sh
sources.params.2.value.solaris-sparc=jdk-6u7-solaris-sparc.sh
sources.params.3.token={jdk-install-dir}
sources.params.3.value=jdk1.6.0_07
sources.params.4.token={jdk-base-dir}
sources.params.4.value=jdk1.6.0.b105
