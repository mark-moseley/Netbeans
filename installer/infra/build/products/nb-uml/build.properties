# 
# The contents of this file are subject to the terms of the Common Development and
# Distribution License (the License). You may not use this file except in compliance
# with the License.
# 
# You can obtain a copy of the License at http://www.netbeans.org/cddl.html or
# http://www.netbeans.org/cddl.txt.
# 
# When distributing Covered Code, include this CDDL Header Notice in each file and
# include the License file at http://www.netbeans.org/cddl.txt. If applicable, add
# the following below the CDDL Header, with the fields enclosed by brackets []
# replaced by your own identifying information:
# 
#     "Portions Copyrighted [year] [name of copyright owner]"
# 
# The Original Software is NetBeans. The Initial Developer of the Original Software
# is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All
# Rights Reserved.
# 

# path to the directory where the base build scripts library and properties 
# reside
common.dir=../../../../../nbi/infra/build/.common

# path to the local working directory; this directory which will be the target 
# for checking out the sources and will be used for the build process
# * this path can be either absolute or relative in any unix environment, 
#   however, only relative paths are supported on windows, as the cygwin scp 
#   command does not properly handle colon in local paths
work.dir=./build

# path to the local distributive directory; this directory will contain the 
# distributive file, when (if) the build script finishes successfully
dist.dir=./dist

# path to the products's sources within the cvs module; it should be a relative 
# path from the module's root, e.g. for 'nbi/engine', where 'nbi is the module 
# name, the path should be 'engine'
cvs.path=components/products/nb-uml

# core product properties: 
# * ${product.uid} - product "family" (e.g. nb-ide)
# * ${product.version} - actual products' version; together with the uid it 
#   forms the unique identifier for the product)
# * ${product.platforms} - the list of platforms that are supported by this 
#   product (note that this property is not related to native libraries)
product.uid=nb-uml
product.version=6.0.0.0.${build.number}
product.platforms=windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86

# miscellaneous product properties:
# * ${product.status} - default status that the product will have in the 
#   registry. it is meant to be always "not-installed", unless you want 
#   something really exotic
# * ${product.offset} - order of the product's node among its parent's 
#   children, the bigger the offset value, the further the product's node will 
#   be
# * ${product.expand} - whether to automatically expand the product's node in 
#   the components tree or not; 'true'/'false'
# * ${product.visible} - whether the product's node is visible or not (note 
#   that this value will be modified at nbi runtime, 'true' may become 'false' 
#   if the product is filtered out); 'true'/'false'
# * ${product.features} - list of features that this porduct belongs to; the 
#   list should be space-separated
product.status=not-installed
product.offset=50000
product.expand=false
product.visible=true
product.features=

# list of configuration logic jar files; normally the first one would be the 
# distributive file of the product's netbeans project
# * ${product.logic.length} - total number of the files
# * indices should start with 1
product.logic.length=1
product.logic.1.uri=file:${nbproject.dist.dir}/${nbproject.dist.file.name}

# list of product installation data files
# * ${product.data.length} - total number of the files
# * ${product.data.N.uri} - uri at which the installation data file is located
# * ${product.data.N.zip} - whether the data file is a zip archive which needs to 
#   be extracted or it is a file that should be used directly; 'true'/'false'
# * indices should start with 1
product.data.length=1
product.data.1.uri=${nb.builds.host}/netbeans/6.0/nightly/${build.number}/netbeans-trunk-nightly-${build.number}-uml.zip
product.data.1.zip=true

# modificator for the required disk space parameter; the core value will be the
# sum of unzipped unstallation data files
# * the measurement unit is one byte
product.disk.space.modificator=0

# product's requirements (i.e. other products that should be installed
# in order for this product to succesfully install and function)
# * ${product.requirements.length} - total number of the requirements
# * indices should start with 1
product.requirements.length=1
product.requirements.1.uid=nb-base
product.requirements.1.version-lower=6.0.0.0.${build.number}
product.requirements.1.version-upper=6.0.0.0.${build.number}

# product's conflicts (i.e. other products that prevent this product from 
# functioning correctly, and thus cannot be installed together with it)
# * ${product.conflicts.length} - total number of the conflicts
# * indices should start with 1
product.conflicts.length=0
#product.conflicts.1.uid=
#product.conflicts.1.version-lower=
#product.conflicts.1.version-upper=

# other products that should be installed prior to this product; these 
# dependencies do not imply that the dependent product will be installed at 
# all, but if both the current and the dependent product are selected for 
# installation, the latter will be installed first
# * ${product.install-afters.length} - total number of the install-afters
# * indices should start with 1
product.install-afters.length=0
#product.install-afters.1.uid=

# additional product's properties; these will appear in the product's 
# descriptor and in the registry in the form of 
# <property name="[name]">value</property> tags.
# * ${product.properties.length} - total number of the properties
# * indices should start with 1
# * properties are not i18n compliant
product.properties.length=0
#product.properties.1.name=
#product.properties.1.value=

# sources parameters; a search-and-replace will be run over the sources after 
# check-out, replacing [token] => [value]; regular expressions are not allowed
# * ${sources.params.length} - total number of the parameters
# * indices should start with 1
# * parameters are not i18n compliant
sources.params.length=2
sources.params.1.token={display-version}
sources.params.1.value=6.0 Build ${build.number}
sources.params.2.token={uml-cluster-version}
sources.params.2.value=4
