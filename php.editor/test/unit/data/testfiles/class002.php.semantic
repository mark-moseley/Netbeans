<?php
class |>CLASS:test<| {
  protected $|>FIELD:x<|;

  static private $|>FIELD:test<| = NULL;
  static private $|>FIELD:cnt<| = 0;

  static function |>METHOD:factory<|($x) {
    if (test::$|>FIELD,STATIC:test<|) {
      return test::$|>FIELD,STATIC:test<|;
    } else {
      test::$|>FIELD,STATIC:test<| = new test($x);
      return test::$|>FIELD,STATIC:test<|;
    }
  }

  protected function |>METHOD:__construct<|($x) {
    test::$|>FIELD,STATIC:cnt<|++;
    $this->|>FIELD:x<| = $x;
  }

  static function |>METHOD:destroy<|() {
    test::$|>FIELD,STATIC:test<| = NULL;
  }

  protected function |>METHOD:__destruct<|() {
  	test::$|>FIELD,STATIC:cnt<|--;
  }

  public function |>METHOD:get<|() {
    return $this->|>FIELD:x<|;
  }

  static public function |>METHOD:getX<|() {
    if (test::$|>FIELD,STATIC:test<|) {
      return test::$test->|>FIELD:x<|;
    } else {
      return NULL;
    }
  }

  static public function |>METHOD:count<|() {
    return test::$|>FIELD,STATIC:cnt<|;
  }
}

test::|>STATIC:getX<|();

?>
