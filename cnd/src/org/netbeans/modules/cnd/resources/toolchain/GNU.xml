<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 2001-2006 Sun
Microsystems, Inc. All Rights Reserved.
/export/home/thp/netbeans-dev/main
If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->

<toolchaindefinition xmlns="http://www.netbeans.org/ns/cnd-toolchain-definition/1">
    <toolchain name="GNU" display="GNU Compiler Collection" family="GNU" qmakespec="${os}-g++"/>
    <platforms stringvalue="linux,unix,none"/>
    <makefile_writer class="org.netbeans.modules.cnd.makeproject.api.configurations.DefaultMakefileWriter"/>
    <drive_letter_prefix stringvalue="/"/>
    <c>
        <compiler name="gcc"/>
        <version flags="--version"/>
        <system_include_paths flags="-x c -E -v" parser="GNU"/>
        <system_macros flags="-x c -E -dM" parser="GNU"/>
        <user_include flags="-I"/>
        <user_macro flags="-D"/>
        <development_mode>
            <fast_build flags=""/>
            <debug flags="-g" default="true"/>
            <performance_debug flags="-g -O"/>
            <test_coverage flags="-g"/>
            <diagnosable_release flags="-g -O2"/>
            <release flags="-O2"/>
            <performance_release flags="-O3"/>
        </development_mode>
        <warning_level>
            <no_warnings flags="-w"/>
            <default flags="" default="true"/>
            <more_warnings flags="-Wall"/>
            <warning2error flags="-Werror"/>
        </warning_level>
        <architecture>
            <default flags="" default="true"/>
            <bits_32 flags="-m32"/>
            <bits_64 flags="-m64"/>
        </architecture>
        <strip flags="-s"/>
        <output_object_file flags="-o " />
        <dependency_generation flags="-MMD -MP -MF $@.d" />
        <precompiled_header flags="-o $@" suffix=".gch" append="true" />
    </c>
    <cpp>
        <compiler name="g++"/>
        <version flags="--version"/>
        <system_include_paths flags="-x c++ -E -v" parser="GNU"/>
        <system_macros flags="-x c++ -E -dM" parser="GNU"/>
        <user_include flags="-I"/>
        <user_macro flags="-D"/>
        <development_mode>
            <fast_build flags=""/>
            <debug flags="-g" default="true"/>
            <performance_debug flags="-g -O"/>
            <test_coverage flags="-g"/>
            <diagnosable_release flags="-g -O2"/>
            <release flags="-O2"/>
            <performance_release flags="-O3"/>
        </development_mode>
        <warning_level>
            <no_warnings flags="-w"/>
            <default flags="" default="true"/>
            <more_warnings flags="-Wall"/>
            <warning2error flags="-Werror"/>
        </warning_level>
        <architecture>
            <default flags="" default="true"/>
            <bits_32 flags="-m32"/>
            <bits_64 flags="-m64"/>
        </architecture>
        <strip flags="-s"/>
        <output_object_file flags="-o " />
        <dependency_generation flags="-MMD -MP -MF $@.d" />
        <precompiled_header flags="-o $@" suffix=".gch" append="true" />
    </cpp>
    <fortran>
        <compiler name="gfortran,g95,g90,g77"/>
        <version flags="--version"/>
        <development_mode>
            <fast_build flags=""/>
            <debug flags="-g" default="true"/>
            <performance_debug flags="-g -O"/>
            <test_coverage flags="-g"/>
            <diagnosable_release flags="-g -O2"/>
            <release flags="-O2"/>
            <performance_release flags="-O3"/>
        </development_mode>
        <warning_level>
            <no_warnings flags="-w"/>
            <default flags="" default="true"/>
            <more_warnings flags="-Wall"/>
            <warning2error flags="-Werror"/>
        </warning_level>
        <architecture>
            <default flags="" default="true"/>
            <bits_32 flags="-m32"/>
            <bits_64 flags="-m64"/>
        </architecture>
        <strip flags="-s"/>
        <output_object_file flags="-o " />
    </fortran>
    <assembler>
        <compiler name="as"/>
        <version flags="-version"/>
        <development_mode>
            <fast_build flags=""/>
            <debug flags="-g" default="true"/>
            <performance_debug flags="-g"/>
            <test_coverage flags="-g"/>
            <diagnosable_release flags="-g"/>
            <release flags=""/>
            <performance_release flags=""/>
        </development_mode>
        <warning_level>
            <no_warnings flags="-W"/>
            <default flags="" default="true"/>
            <more_warnings flags=""/>
            <warning2error flags="--fatal-warnings"/>
        </warning_level>
        <architecture>
            <default flags="" default="true"/>
            <bits_32 flags="--32"/>
            <bits_64 flags="--64"/>
        </architecture>
        <strip flags="-s"/>
        <output_object_file flags="-o " />
    </assembler>
    <scanner>
        <error pattern="^([a-zA-Z]:[^:\n]*|[^:\n]*):([0-9]+)[\\.:]([^:\n]*):([^\n]*)" language="c,cpp,fortran,assembler"/>
        <error pattern="^([^:\n]*):([0-9]+): ([a-zA-Z]*):*.*" language="c,cpp,fortran,assembler"/>
        <enter_directory pattern="[gd]?make(?:\.exe)?(?:\[([0-9]+)\])?: Entering[\w+\s+]+`([^']*)'"/>
        <leave_directory pattern="[gd]?make(?:\.exe)?(?:\[([0-9]+)\])?: Leaving[\w+\s+]+`([^']*)'"/>
        <change_directory pattern="cd\s+([\S]+)[\s;]"/>
        <stack_header pattern="In file included from ([A-Z]:[^:\n]*|[^:\n]*):([^:^,]*)"/>
        <stack_next pattern="                 from ([A-Z]:[^:\n]*|[^:\n]*):([^:^,]*)"/>
    </scanner>
    <linker>
        <library_prefix stringvalue="lib"/>
        <library_search flags="-L"/>
        <dynamic_library_search flags="-Wl,-rpath "/>
        <library_flag flags="-l"/>
        <PIC flags="-fPIC "/>
        <static_library flags="-static"/>
        <dynamic_library flags="-dynamic"/>
        <dynamic_library_basic flags="-shared "/>
        <output_file flags="-o "/>
    </linker>
    <make>
        <tool name="gmake,make"/>
        <alternative_path>
            <path toolchain_name="*"/>
            <path directory="$PATH"/>
        </alternative_path>
        <version flags="--version" />
        <dependency_support code="include $(wildcard $(addsuffix .d, ${OBJECTFILES}))\n" />
    </make>
    <debugger>
        <tool name="gdb"/>
        <alternative_path>
            <path toolchain_name="*"/>
            <path directory="$PATH"/>
        </alternative_path>
        <version flags="--version" />
    </debugger>
    <qmake>
        <tool name="qmake"/>
        <alternative_path>
            <path toolchain_name="*"/>
            <path directory="$PATH"/>
        </alternative_path>
        <version flags="-v" />
    </qmake>
    <cmake>
        <tool name="cmake"/>
        <alternative_path>
            <path toolchain_name="*"/>
            <path directory="$PATH"/>
        </alternative_path>
        <version flags="--version" />
    </cmake>
</toolchaindefinition>
