#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

FIX_PartnerLinkError=A partnerLink must specify the myRole or the partnerRole, or both.
FIX_InitialisePartnerRole=The initializePartnerRole attribute must not be used on a partnerLink that does not have a partner role.
FIX_WSDLOperationSolicitResponseNotification=A portType containing a solicit-response or notification operation is not allowed.
FIX_PortTypeOverloadedOperationName=A portType containing overloaded operation names is not allowed.
FIX_RethrowOccurance=The <rethrow> activity must only be used within a faultHandler.

# {0} is the tag name of XML element (here it could be compensate or compensateScope)
FIX_CompensateOccurance=The <{0}> activity must only be used from within a faultHandler, another compensationHandler, or a terminationHandler.
FIX_InputVariableToPartCombination=InputVariable attribute must not be used on an Invoke activity that contains <toPart> elements.
FIX_OutputVariableFromPartCombination=OutputVariable attribute must not be used on an Invoke activity that contains <fromPart> elements.
FIX_InvalidFromPartPartAttribute=The part attribute of the <fromPart> element must reference a valid message part in the WSDL message for the operation.
FIX_InvalidToPartPartAttribute=The part attribute of the <toPart> element must reference a valid message part in the WSDL message for the operation.
FIX_ReceiveVariableFromPartCombination=If <fromPart> elements are used on a <receive> activity the variable attribute must not be used on the same activity.
FIX_ReplyVariableToPartCombination=If <toPart> elements are used on a <reply> activity the variable attribute must not be used on the same activity.

# {0} equals either "myRole" or "partnerRole"
FIX_EndpointReference=In the from-spec of the partnerLink variant of <assign> \
the value "{0}" for attribute endpointReference is only permitted when the \
partnerLink specifies the attribute {0}.

# {0} is name of several activities within the same immediately enclosing scope
FIX_MultipleNamedActivities=The name "{0}" of a named activity must be unique among \
all named activities present within the same immediately enclosing scope.

# {0} is name of several links within the same <flow>
FIX_MultipleNamedLinks=The name "{0}" of link must be unique amongst all link names \
defined within the same immediately enclosing flow.

# {0} is linkName of attribute in <source linkName='link name'/>
FIX_MultipleSourceLinkReferences=An activity may declare itself to be the source \
of one or more links by including one or more <source> elements. Each <source> \
element must use a distinct link name. Found several sources with the same \
link name "{0}". 

# {0} is linkName of attribute in <target linkName='link name'/>
FIX_MultipleTargetLinkReferences=An activity may declare itself to be the target \
of one or more links by including one or more <target> elements. \
Each <target> element associated with a given activity must use a link name \
distinct from all other <target> elements at that activity. Found several \
targets with the same link name "{0}". 

# {0} is name of variable
FIX_DUPLICATE_VARIABLE_NAME=The name of a variable "{0}" must be unique amongst the names \
of all variables defined within the same immediately enclosing scope.

# {0} is name of variable
FIX_DuplicateCounterName=For <forEach> the enclosed scope must not declare a \
variable with the same name "{0}" as specified in the counterName attribute of <forEach>.

FIX_IsolatedScopes=A scope with the isolated attribute set to "yes" is called an \
isolated scope. Isolated scopes must not contain other isolated scopes.

FIX_OnEventVariable=If the variable attribute is used in the <onEvent> \
element, either the messageType or the element attribute must be provided in \
the <onEvent> element.

FIX_EventHandlers=An event handler must contain at least one <onEvent> \
or <onAlarm> element.

FIX_FaultVariableType=For the <catch> construct; to have a defined type \
associated with the fault variable, the faultVariable attribute must only be \
used if either the faultMessageType or faultElement attributes but not both, accompany it.

FIX_OddFaultType=The faultMessageType and faultElement attributes must not be \
used unless accompanied by faultVariable attribute.

FIX_FaultHandlers=There must be at least one <catch> or <catchAll> \
element within a <faultHandlers> element.

FIX_ExitOnStandartFault=If the value of exitOnStandardFault of a <scope> or \
<process> is set to "yes", then a fault handler that explicitly targets the \
WS-BPEL standard faults must not be used in that scope.

FIX_DifferentPortTypes=If the portType attribute is included for readability, \
in a <receive>, <reply>, <invoke>, <onEvent> or <onMessage> element, the value \
of the portType attribute must match the portType value implied by the combination \
of the specified partnerLink and the role implicitly specified by the activity.

FIX_AbsentNamespaceInImport=If no namespace is specified then the imported \
definitions must not contain a targetNamespace specification.

FIX_BadNamespaceInImport=If a namespace attribute is specified on an <import> \
then the imported definitions must be in that namespace.

FIX_BadImportType=The value of the importType attribute of element <import> \
must be set to http://www.w3.org/2001/XMLSchema when importing XML Schema 1.0 \
documents, and to http://schemas.xmlsoap.org/wsdl/ when importing WSDL 1.1 documents.

FIX_NoPickReceiveWithCreateInstance=To be instantiated, an executable business \
process must contain at least one <receive> or <pick> activity annotated with a \
createInstance="yes" attribute.

FIX_BadVariableName=Variable names are NCNames (as defined in XML Schema \
specification) but in addition they must not contain the "." character.

FIX_PickMessages=If <pick> has a createInstance attribute with a value of yes, \
the events in the <pick> must all be <onMessage> events.

FIX_MultipleLinkSource=Every link declared within a <flow> activity must have \
exactly one activity within the <flow> as its source.

FIX_MultipleLinkTarget=Every link declared within a <flow> activity must have \
exactly one activity within the <flow> as its target.

FIX_LinkIsNotUsed=Every link declared within a <flow> activity must have \
exactly one activity within the <flow> as its source and exactly one activity \
within the <flow> as its target.

FIX_MultipleLinksWithSameSourceAndTarget=Two different links must not share \
the same source and target activities; that is, at most one link may be used \
to connect two activities.

FIX_ScopeWithCompenstationHandlerInsideFCT=The root scope inside a Fault handler, \
Termination handler or Compensation handler must not have a compensation handler.

FIX_MessageTypeInOnEvent=For <onEvent>, the type of the variable (as specified \
by the messageType attribute) must be the same as the type of the input message \
defined by operation referenced by the operation attribute.

FIX_ElementInOnEvent=For <onEvent>, the messageType attribute may be omitted \
and instead the element attribute substituted if the message to be received has \
a single part and that part is defined with an element type. That element type \
must be an exact match of the element type referenced by the element attribute.

FIX_LinkCrossBoundaryRepeatableConstract=A link must not cross the boundary of \
a repeatable construct or the <compensationHandler> element. This means, a \
link used within a repeatable construct (<while>, <repeatUntil>, <forEach>, \
<eventHandlers>) or a <compensationHandler> must be declared in a <flow> \
that is itself nested inside the repeatable construct or <compensationHandler>.

FIX_BadHandlersLinkBoundaries=A link that crosses a <faultHandlers> or \
<terminationHandler> element boundary must be outbound only, that is, it must \
have its source activity within the <faultHandlers> or <terminationHandler>, \
and its target activity outside of the scope associated with the handler.

FIX_BadCorrelationPropertyType=Properties used in a <correlationSet> must be \
defined using XML Schema simple types. This restriction must be statically enforced.

FIX_BadUsagePatternAttribute=The pattern attribute used in <correlation> within \
<invoke> is required for request-response operations, and disallowed when a \
one-way operation is invoked.

FIX_OutputVariableForOneWayOperation=For <invoke>, one-way invocation requires \
only the inputVariable (or its equivalent <toPart>\'s) since a response is not \
expected as part of the operation. The outputVariable (or its equivalent \
<fromPart>\'s) must be only specified for request-response invocations.

FIX_AbsentInputVariableForOneWayOp=For <invoke>, one-way invocation requires \
only the inputVariable (or its equivalent <toPart>\'s) since a response is not \
expected as part of the operation. If a WSDL message definition does not contain \
any parts, then the <fromParts> or <toParts> construct must be omitted.

FIX_MentionedInputVariableForOneWayOp=If a WSDL message definition does not contain \
any parts, then the associated attributes variable, inputVariable or outputVariable \
may be omitted.

FIX_AbsentInputOutputVariables=For <invoke>, request-response invocation \
requires both an inputVariable (or its equivalent <toPart> elements) and an \
outputVariable (or its equivalent <fromPart> elements).

FIX_MentionedInputOutputVariables=If a WSDL message definition \
does not contain any parts, then the associated attributes variable, \
inputVariable or outputVariable, or the associated <fromParts> or <toParts> \
elements must be omitted.

FIX_AbsentOutputVariable=For <receive> variable attribute (or its equivalent \
<fromPart> elements) must be specified. If a WSDL message definition does not contain \
any parts, then the <fromParts> construct must be omitted.

FIX_MentionedOutputVariable=If a WSDL message definition does not contain any parts, \
then the associated variable attribute may be omitted.

FIX_AbsentInputVariable=For <reply> variable attribute (or its equivalent \
<toPart> elements) must be specified. If a WSDL message definition does not contain \
any parts, then the <toParts> construct must be omitted.

FIX_MentionedInputVariable=If a WSDL message definition does not contain \
any parts, then the associated variable attribute may be omitted.

FIX_WSDL_Message_Not_Completely_Initialised=The WSDL message parts not explicitly \
initialized by <toPart> elements would result in un-initialized parts in the \
target anonymous WSDL variable used by the <invoke> or <reply> activity.

FIX_OnMessage_Variable_FromPart_Combination=If <fromPart> elements are used \
on an OnMessage activity the variable attribute must not be used on the \
same activity. 

FIX_BadVariableMessageType=When the optional inputVariable and outputVariable \
attributes are being used in an <invoke> activity, the variables referenced by \
inputVariable and outputVariable must be messageType variables whose QName \
matches the QName of the input and output message type used in the operation, \
respectively.

FIX_BadVariableElementType=Only if the WSDL operation used in an <invoke> activity \
uses a message containing exactly one part which itself is defined using an \
element, then a variable of the same element type as used to define the part \
may be referenced by the inputVariable and outputVariable attributes respectively.

FIX_StartActivityHasPreceding=A "start activity" is a <receive> or <pick> \
activity that is annotated with a createInstance="yes" attribute. Activities \
other than the following: start activities, <scope>, <flow>, <sequence>, and \
<empty> must not be performed prior to or simultaneously with start activities.

FIX_AbsentSharedJoinedCorrelationSet=If a process has multiple start \
activities (<receive> or <pick> activity that is annotated with a \
createInstance="yes" attribute) \
with correlation sets then all such activities must share at least \
one common correlationSet and all common correlationSets defined on all the \
activities must have the value of the initiate attribute be set to "join".

# {0} - property
# {1} - correlation set
FIX_AbsentPropertyAliasForMessage=Property "{0}" does not have a propertyAlias \
defined for the message where the correlationSet "{1}" is being used.
 
FIX_MultiplePropertyAliasForProperty=A WS-BPEL process definition is not \
accepted for processing if it defines two or more propertyAliases for the \
same property name and WS-BPEL variable type.

FIX_DuplicateCorrelationSetName=The name of a <correlationSet> must be unique \
amongst the names of all <correlationSet> defined within the same immediately enclosing scope.

FIX_DuplicatePartnerLinkName=The name of a partnerLink must be unique amongst \
the names of all partnerLinks defined within the same immediately enclosing scope.

FIX_VariableTypes=The messageType, type or element attributes are used to \
specify the type of a variable. Exactly one of these attributes must be used. 

FIX_DuplicateVariableNameOnEvent=For <onEvent>, variables referenced by the variable \
attribute of <fromPart> elements or the variable attribute of an <onEvent> element \
are implicitly declared in the associated scope of the event handler. \
Variables of the same names must not be explicitly declared in the associated scope.

FIX_SupportedLanguage=Only language referenced by "{0}" is supported by WS-BPEL definition.
FIX_UnsupportedExtension=A WS-BPEL process definition has a mandatory extension with namespace "{0}" that is not supported.
