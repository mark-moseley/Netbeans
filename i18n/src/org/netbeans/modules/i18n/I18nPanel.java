/*
 *                 Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License
 * Version 1.0 (the "License"). You may not use this file except in
 * compliance with the License. A copy of the License is available at
 * http://www.sun.com/
 * 
 * The Original Code is NetBeans. The Initial Developer of the Original
 * Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
 * Microsystems, Inc. All Rights Reserved.
 */


package org.netbeans.modules.i18n;


import java.awt.Dialog;
import java.util.ResourceBundle;
import javax.swing.*;

import org.openide.cookies.EditorCookie;
import org.openide.DialogDescriptor;
import org.openide.TopManager;
import org.openide.util.HelpCtx;
import org.openide.util.NbBundle;


/**
 * @author  Petr Jiricka
 */
public class I18nPanel extends JPanel {

    /** Instance of <code>I18nSupport.I18nInfo</code>. */
    private transient I18nSupport.I18nInfo info;
    
    /** Bundle used for i18n-zing strings in this source.  */
    private static final ResourceBundle bundle = NbBundle.getBundle(I18nModule.class);

    /** Generated serial version ID. */
    static final long serialVersionUID =-6982482491017390786L;
    
    
    /** Creates new form I18nPanel. */
    public I18nPanel() {
        initComponents ();
        buttonsPanel.remove(replaceAllButton);
    }

    
    /** Gets resource bundle panel part. */
    public ResourceBundlePanel getResourceBundlePanel() {
        return (ResourceBundlePanel)resourceBundlePanel;
    }

    /** Sets info about found hard coded string. */
    public void setI18nInfo(I18nSupport.I18nInfo i18nInfo) {
        info = i18nInfo;
    }

    /** Setter for value field. */
    public void setResourceBundleString(ResourceBundleString rbString) {
        getResourceBundlePanel().setResourceBundleString(rbString);
        buttonsEnableDisable();
    }

    /** Buttons accessor method. */
    public JButton[] getButtons() {
        return new JButton[] { replaceButton, replaceAllButton, skipButton, cancelButton };
    }

    /** Enables/disables buttons. */
    private void buttonsEnableDisable() {
        boolean isBundle = ((ResourceBundlePanel)resourceBundlePanel).getResourceBundleString().getResourceBundle() != null;
        boolean isInvalid = ((ResourceBundlePanel)resourceBundlePanel).getResourceBundleString() instanceof ResourceBundleString.InvalidResourceBundleString;
        replaceButton.setEnabled(isBundle && !isInvalid);
        replaceAllButton.setEnabled(isBundle);
    }
    
    private ResourceBundlePanel createResourceBundlePanel() {
        return new ResourceBundlePanel(true) {
            /** Overides superclass event handler delegate. */
            protected void identifierTextActionPerformedDelegate (java.awt.event.ActionEvent evt) {
                super.identifierTextActionPerformedDelegate(evt);
                buttonsEnableDisable();
            }

            /** Overrides superclass event handler delegate. */
            protected void newButtonActionPerformedDelegate (java.awt.event.ActionEvent evt) {
                super.newButtonActionPerformedDelegate(evt);
                buttonsEnableDisable();
            }

            /** Overrides superclass event handler delegate. */
            protected void browseButtonActionPerformedDelegate (java.awt.event.ActionEvent evt) {
                super.browseButtonActionPerformedDelegate(evt);
                buttonsEnableDisable();
            }

            /** Overrides superclass event handler delegate. */
            protected void bundleTextActionPerformedDelegate (java.awt.event.ActionEvent evt) {
                super.bundleTextActionPerformedDelegate(evt);
                buttonsEnableDisable();
            }
        };
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        resourceBundlePanel = createResourceBundlePanel();
        buttonsPanel = new javax.swing.JPanel();
        replaceButton = new javax.swing.JButton();
        replaceAllButton = new javax.swing.JButton();
        skipButton = new javax.swing.JButton();
        infoButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add(resourceBundlePanel, gridBagConstraints1);
        
        
        buttonsPanel.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        
        replaceButton.setText(bundle.getString("CTL_ReplaceButton"));
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.insets = new java.awt.Insets(12, 12, 11, 0);
          gridBagConstraints2.anchor = java.awt.GridBagConstraints.EAST;
          gridBagConstraints2.weightx = 1.0;
          buttonsPanel.add(replaceButton, gridBagConstraints2);
          
          
        replaceAllButton.setText(bundle.getString("CTL_ReplaceAllButton"));
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.insets = new java.awt.Insets(12, 5, 11, 0);
          gridBagConstraints2.anchor = java.awt.GridBagConstraints.EAST;
          buttonsPanel.add(replaceAllButton, gridBagConstraints2);
          
          
        skipButton.setText(bundle.getString("CTL_SkipButton"));
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.insets = new java.awt.Insets(12, 5, 11, 0);
          gridBagConstraints2.anchor = java.awt.GridBagConstraints.EAST;
          buttonsPanel.add(skipButton, gridBagConstraints2);
          
          
        infoButton.setText(bundle.getString("CTL_InfoButton"));
          infoButton.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  infoButtonActionPerformed(evt);
              }
          }
          );
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.insets = new java.awt.Insets(12, 5, 11, 0);
          gridBagConstraints2.anchor = java.awt.GridBagConstraints.EAST;
          buttonsPanel.add(infoButton, gridBagConstraints2);
          
          
        helpButton.setText(bundle.getString("CTL_HelpButton"));
          helpButton.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  helpButtonActionPerformed(evt);
              }
          }
          );
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.insets = new java.awt.Insets(12, 5, 11, 0);
          buttonsPanel.add(helpButton, gridBagConstraints2);
          
          
        cancelButton.setText(bundle.getString("CTL_CancelButton"));
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.insets = new java.awt.Insets(11, 5, 11, 11);
          buttonsPanel.add(cancelButton, gridBagConstraints2);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.weightx = 1.0;
        add(buttonsPanel, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
      HelpCtx help = new HelpCtx(I18nPanel.class);
      String sysprop = System.getProperty ("org.openide.actions.HelpAction.DEBUG"); // NOI18N
      if ("true".equals (sysprop) || "full".equals (sysprop)) // NOI18N
          System.err.println ("Help button showing: " + help); // NOI18N, please do not comment out
      TopManager.getDefault ().showHelp (help);
      return;
  }//GEN-LAST:event_helpButtonActionPerformed

  private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
      InfoPanel infoPanel = new InfoPanel();
      infoPanel.setI18nInfo(info);  
      
      DialogDescriptor dd = new DialogDescriptor(infoPanel, bundle.getString("CTL_InfoPanelTitle"));
      dd.setModal(true);
      dd.setOptionType(DialogDescriptor.DEFAULT_OPTION);
      dd.setOptions(new Object[] {DialogDescriptor.OK_OPTION});
      dd.setAdditionalOptions(new Object[0]);
      
      Dialog infoDialog = TopManager.getDefault().createDialog(dd);
      infoDialog.setVisible(true);
  }//GEN-LAST:event_infoButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel resourceBundlePanel;
  private javax.swing.JPanel buttonsPanel;
  private javax.swing.JButton replaceButton;
  private javax.swing.JButton replaceAllButton;
  private javax.swing.JButton skipButton;
  private javax.swing.JButton infoButton;
  private javax.swing.JButton helpButton;
  private javax.swing.JButton cancelButton;
  // End of variables declaration//GEN-END:variables

}