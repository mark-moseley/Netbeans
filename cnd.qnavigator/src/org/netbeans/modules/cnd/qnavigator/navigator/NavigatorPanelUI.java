/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 */

package org.netbeans.modules.cnd.qnavigator.navigator;

import java.awt.Cursor;
import java.beans.PropertyVetoException;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.Node;

/**
 *
 * @author Alexander Simon
 */
public class NavigatorPanelUI extends JPanel implements ExplorerManager.Provider {
    private NavigatorContent content = new NavigatorContent();
    private BeanTreeView navigatorPane;
    private ExplorerManager explorerManager = new ExplorerManager();
    private boolean isBusy = false;
    
    /** Creates new form NavigatorPanel */
    public NavigatorPanelUI() {
        initComponents();
        navigatorPane = new BeanTreeView();
        navigatorPane.setRootVisible(false);
        navigatorPane.setDropTarget(false);
        navigatorPane.setDragSource(false);
        add(navigatorPane, java.awt.BorderLayout.CENTER);
        explorerManager.setRootContext(content.getRoot());
        navigatorPane.expandAll();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());

    }// </editor-fold>//GEN-END:initComponents
    
    void setBusyState(boolean busy){
        Cursor cursor;
        if (isBusy) {
            cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        } else {
            cursor = Cursor.getDefaultCursor();
        }
        navigatorPane.setCursor(cursor);
    }
    
    void newContentReady(){
        try {
            explorerManager.setSelectedNodes(new Node[0]);
        } catch (PropertyVetoException ex) {
            ex.printStackTrace();
        }
        explorerManager.setRootContext(content.getRoot());
        if (SwingUtilities.isEventDispatchThread()){
            navigatorPane.expandAll();
        } else {
            SwingUtilities.invokeLater(new Runnable(){
                public void run() {
                    navigatorPane.expandAll();
                }
            });
        }
    }
    
    NavigatorContent getContent() {
        return content;
    }
    
    void selectNode(Node node){
        try {
            explorerManager.setSelectedNodes(new Node[] {node});
        } catch (IllegalArgumentException ex) {
            // FIXUP me
        } catch (PropertyVetoException ex) {
            ex.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }
    
    /** Overriden to pass focus directly to main content, which in 
     * turn assures that some element is always selected
     */ 
    public boolean requestFocusInWindow () {
        boolean result = super.requestFocusInWindow();
        navigatorPane.requestFocusInWindow();
        return result;
    }
}
